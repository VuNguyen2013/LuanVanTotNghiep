//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5420.
// 
#pragma warning disable 1591

namespace ETradeAutomation.RTWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMarketInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllMarketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllMarketInfoAndStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMatketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewestWorkingDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllStockFromMarketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockInfoByLangugeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListStockInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMainMatchedPricesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTickerInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTickerInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHOSEPutAdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHOSEPutExecOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUpdaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUpdaterForMarketOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartIntraDOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopUpdaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopUpdaterForMarketOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopIntraDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaticStockInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDynamicStockInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::ETradeAutomation.Properties.Settings.Default.ETradeAutomation_RTWebService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMarketInfoCompletedEventHandler GetMarketInfoCompleted;
        
        /// <remarks/>
        public event MarketStatusCompletedEventHandler MarketStatusCompleted;
        
        /// <remarks/>
        public event AllMarketStatusCompletedEventHandler AllMarketStatusCompleted;
        
        /// <remarks/>
        public event AllMarketInfoAndStatusCompletedEventHandler AllMarketInfoAndStatusCompleted;
        
        /// <remarks/>
        public event SetMatketStatusCompletedEventHandler SetMatketStatusCompleted;
        
        /// <remarks/>
        public event GetListCompanyCompletedEventHandler GetListCompanyCompleted;
        
        /// <remarks/>
        public event GetNewestWorkingDatesCompletedEventHandler GetNewestWorkingDatesCompleted;
        
        /// <remarks/>
        public event GetAllStockFromMarketCompletedEventHandler GetAllStockFromMarketCompleted;
        
        /// <remarks/>
        public event GetStockInfoCompletedEventHandler GetStockInfoCompleted;
        
        /// <remarks/>
        public event GetStockDetailCompletedEventHandler GetStockDetailCompleted;
        
        /// <remarks/>
        public event GetStockInfoByLangugeCompletedEventHandler GetStockInfoByLangugeCompleted;
        
        /// <remarks/>
        public event GetListStockInfosCompletedEventHandler GetListStockInfosCompleted;
        
        /// <remarks/>
        public event GetTransactionsCompletedEventHandler GetTransactionsCompleted;
        
        /// <remarks/>
        public event GetMainMatchedPricesCompletedEventHandler GetMainMatchedPricesCompleted;
        
        /// <remarks/>
        public event GetTickerInfosCompletedEventHandler GetTickerInfosCompleted;
        
        /// <remarks/>
        public event GetAllTickerInfosCompletedEventHandler GetAllTickerInfosCompleted;
        
        /// <remarks/>
        public event GetHOSEPutAdCompletedEventHandler GetHOSEPutAdCompleted;
        
        /// <remarks/>
        public event GetHOSEPutExecCompletedEventHandler GetHOSEPutExecCompleted;
        
        /// <remarks/>
        public event StartUpdaterCompletedEventHandler StartUpdaterCompleted;
        
        /// <remarks/>
        public event StartUpdaterForMarketCompletedEventHandler StartUpdaterForMarketCompleted;
        
        /// <remarks/>
        public event UpdatingStatusCompletedEventHandler UpdatingStatusCompleted;
        
        /// <remarks/>
        public event StartIntraDCompletedEventHandler StartIntraDCompleted;
        
        /// <remarks/>
        public event StopUpdaterCompletedEventHandler StopUpdaterCompleted;
        
        /// <remarks/>
        public event StopUpdaterForMarketCompletedEventHandler StopUpdaterForMarketCompleted;
        
        /// <remarks/>
        public event StopIntraDCompletedEventHandler StopIntraDCompleted;
        
        /// <remarks/>
        public event GetStaticStockInfoCompletedEventHandler GetStaticStockInfoCompleted;
        
        /// <remarks/>
        public event GetDynamicStockInfoCompletedEventHandler GetDynamicStockInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMarketInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMarketInfo(int marketID) {
            object[] results = this.Invoke("GetMarketInfo", new object[] {
                        marketID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMarketInfoAsync(int marketID) {
            this.GetMarketInfoAsync(marketID, null);
        }
        
        /// <remarks/>
        public void GetMarketInfoAsync(int marketID, object userState) {
            if ((this.GetMarketInfoOperationCompleted == null)) {
                this.GetMarketInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarketInfoOperationCompleted);
            }
            this.InvokeAsync("GetMarketInfo", new object[] {
                        marketID}, this.GetMarketInfoOperationCompleted, userState);
        }
        
        private void OnGetMarketInfoOperationCompleted(object arg) {
            if ((this.GetMarketInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarketInfoCompleted(this, new GetMarketInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MarketStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MarketStatus(int marketID) {
            object[] results = this.Invoke("MarketStatus", new object[] {
                        marketID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MarketStatusAsync(int marketID) {
            this.MarketStatusAsync(marketID, null);
        }
        
        /// <remarks/>
        public void MarketStatusAsync(int marketID, object userState) {
            if ((this.MarketStatusOperationCompleted == null)) {
                this.MarketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarketStatusOperationCompleted);
            }
            this.InvokeAsync("MarketStatus", new object[] {
                        marketID}, this.MarketStatusOperationCompleted, userState);
        }
        
        private void OnMarketStatusOperationCompleted(object arg) {
            if ((this.MarketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarketStatusCompleted(this, new MarketStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllMarketStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AllMarketStatus() {
            object[] results = this.Invoke("AllMarketStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AllMarketStatusAsync() {
            this.AllMarketStatusAsync(null);
        }
        
        /// <remarks/>
        public void AllMarketStatusAsync(object userState) {
            if ((this.AllMarketStatusOperationCompleted == null)) {
                this.AllMarketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllMarketStatusOperationCompleted);
            }
            this.InvokeAsync("AllMarketStatus", new object[0], this.AllMarketStatusOperationCompleted, userState);
        }
        
        private void OnAllMarketStatusOperationCompleted(object arg) {
            if ((this.AllMarketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllMarketStatusCompleted(this, new AllMarketStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllMarketInfoAndStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AllMarketInfoAndStatus() {
            object[] results = this.Invoke("AllMarketInfoAndStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AllMarketInfoAndStatusAsync() {
            this.AllMarketInfoAndStatusAsync(null);
        }
        
        /// <remarks/>
        public void AllMarketInfoAndStatusAsync(object userState) {
            if ((this.AllMarketInfoAndStatusOperationCompleted == null)) {
                this.AllMarketInfoAndStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllMarketInfoAndStatusOperationCompleted);
            }
            this.InvokeAsync("AllMarketInfoAndStatus", new object[0], this.AllMarketInfoAndStatusOperationCompleted, userState);
        }
        
        private void OnAllMarketInfoAndStatusOperationCompleted(object arg) {
            if ((this.AllMarketInfoAndStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllMarketInfoAndStatusCompleted(this, new AllMarketInfoAndStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMatketStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMatketStatus(int marketId, string marketStatus) {
            object[] results = this.Invoke("SetMatketStatus", new object[] {
                        marketId,
                        marketStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMatketStatusAsync(int marketId, string marketStatus) {
            this.SetMatketStatusAsync(marketId, marketStatus, null);
        }
        
        /// <remarks/>
        public void SetMatketStatusAsync(int marketId, string marketStatus, object userState) {
            if ((this.SetMatketStatusOperationCompleted == null)) {
                this.SetMatketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMatketStatusOperationCompleted);
            }
            this.InvokeAsync("SetMatketStatus", new object[] {
                        marketId,
                        marketStatus}, this.SetMatketStatusOperationCompleted, userState);
        }
        
        private void OnSetMatketStatusOperationCompleted(object arg) {
            if ((this.SetMatketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMatketStatusCompleted(this, new SetMatketStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListCompany(int marketID, int languageId) {
            object[] results = this.Invoke("GetListCompany", new object[] {
                        marketID,
                        languageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListCompanyAsync(int marketID, int languageId) {
            this.GetListCompanyAsync(marketID, languageId, null);
        }
        
        /// <remarks/>
        public void GetListCompanyAsync(int marketID, int languageId, object userState) {
            if ((this.GetListCompanyOperationCompleted == null)) {
                this.GetListCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListCompanyOperationCompleted);
            }
            this.InvokeAsync("GetListCompany", new object[] {
                        marketID,
                        languageId}, this.GetListCompanyOperationCompleted, userState);
        }
        
        private void OnGetListCompanyOperationCompleted(object arg) {
            if ((this.GetListCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompanyCompleted(this, new GetListCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewestWorkingDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewestWorkingDates() {
            object[] results = this.Invoke("GetNewestWorkingDates", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewestWorkingDatesAsync() {
            this.GetNewestWorkingDatesAsync(null);
        }
        
        /// <remarks/>
        public void GetNewestWorkingDatesAsync(object userState) {
            if ((this.GetNewestWorkingDatesOperationCompleted == null)) {
                this.GetNewestWorkingDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewestWorkingDatesOperationCompleted);
            }
            this.InvokeAsync("GetNewestWorkingDates", new object[0], this.GetNewestWorkingDatesOperationCompleted, userState);
        }
        
        private void OnGetNewestWorkingDatesOperationCompleted(object arg) {
            if ((this.GetNewestWorkingDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewestWorkingDatesCompleted(this, new GetNewestWorkingDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllStockFromMarket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllStockFromMarket(short marketID) {
            object[] results = this.Invoke("GetAllStockFromMarket", new object[] {
                        marketID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStockFromMarketAsync(short marketID) {
            this.GetAllStockFromMarketAsync(marketID, null);
        }
        
        /// <remarks/>
        public void GetAllStockFromMarketAsync(short marketID, object userState) {
            if ((this.GetAllStockFromMarketOperationCompleted == null)) {
                this.GetAllStockFromMarketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStockFromMarketOperationCompleted);
            }
            this.InvokeAsync("GetAllStockFromMarket", new object[] {
                        marketID}, this.GetAllStockFromMarketOperationCompleted, userState);
        }
        
        private void OnGetAllStockFromMarketOperationCompleted(object arg) {
            if ((this.GetAllStockFromMarketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStockFromMarketCompleted(this, new GetAllStockFromMarketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStockInfo(string symbol) {
            object[] results = this.Invoke("GetStockInfo", new object[] {
                        symbol});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockInfoAsync(string symbol) {
            this.GetStockInfoAsync(symbol, null);
        }
        
        /// <remarks/>
        public void GetStockInfoAsync(string symbol, object userState) {
            if ((this.GetStockInfoOperationCompleted == null)) {
                this.GetStockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockInfoOperationCompleted);
            }
            this.InvokeAsync("GetStockInfo", new object[] {
                        symbol}, this.GetStockInfoOperationCompleted, userState);
        }
        
        private void OnGetStockInfoOperationCompleted(object arg) {
            if ((this.GetStockInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockInfoCompleted(this, new GetStockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStockDetail(string symbol, int id) {
            object[] results = this.Invoke("GetStockDetail", new object[] {
                        symbol,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockDetailAsync(string symbol, int id) {
            this.GetStockDetailAsync(symbol, id, null);
        }
        
        /// <remarks/>
        public void GetStockDetailAsync(string symbol, int id, object userState) {
            if ((this.GetStockDetailOperationCompleted == null)) {
                this.GetStockDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockDetailOperationCompleted);
            }
            this.InvokeAsync("GetStockDetail", new object[] {
                        symbol,
                        id}, this.GetStockDetailOperationCompleted, userState);
        }
        
        private void OnGetStockDetailOperationCompleted(object arg) {
            if ((this.GetStockDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockDetailCompleted(this, new GetStockDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockInfoByLanguge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStockInfoByLanguge(string symbol, string languageId) {
            object[] results = this.Invoke("GetStockInfoByLanguge", new object[] {
                        symbol,
                        languageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockInfoByLangugeAsync(string symbol, string languageId) {
            this.GetStockInfoByLangugeAsync(symbol, languageId, null);
        }
        
        /// <remarks/>
        public void GetStockInfoByLangugeAsync(string symbol, string languageId, object userState) {
            if ((this.GetStockInfoByLangugeOperationCompleted == null)) {
                this.GetStockInfoByLangugeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockInfoByLangugeOperationCompleted);
            }
            this.InvokeAsync("GetStockInfoByLanguge", new object[] {
                        symbol,
                        languageId}, this.GetStockInfoByLangugeOperationCompleted, userState);
        }
        
        private void OnGetStockInfoByLangugeOperationCompleted(object arg) {
            if ((this.GetStockInfoByLangugeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockInfoByLangugeCompleted(this, new GetStockInfoByLangugeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListStockInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListStockInfos(string listCodes, string languageId) {
            object[] results = this.Invoke("GetListStockInfos", new object[] {
                        listCodes,
                        languageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListStockInfosAsync(string listCodes, string languageId) {
            this.GetListStockInfosAsync(listCodes, languageId, null);
        }
        
        /// <remarks/>
        public void GetListStockInfosAsync(string listCodes, string languageId, object userState) {
            if ((this.GetListStockInfosOperationCompleted == null)) {
                this.GetListStockInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListStockInfosOperationCompleted);
            }
            this.InvokeAsync("GetListStockInfos", new object[] {
                        listCodes,
                        languageId}, this.GetListStockInfosOperationCompleted, userState);
        }
        
        private void OnGetListStockInfosOperationCompleted(object arg) {
            if ((this.GetListStockInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListStockInfosCompleted(this, new GetListStockInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransactions(string symbol, int marketID) {
            object[] results = this.Invoke("GetTransactions", new object[] {
                        symbol,
                        marketID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string symbol, int marketID) {
            this.GetTransactionsAsync(symbol, marketID, null);
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string symbol, int marketID, object userState) {
            if ((this.GetTransactionsOperationCompleted == null)) {
                this.GetTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetTransactions", new object[] {
                        symbol,
                        marketID}, this.GetTransactionsOperationCompleted, userState);
        }
        
        private void OnGetTransactionsOperationCompleted(object arg) {
            if ((this.GetTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsCompleted(this, new GetTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMainMatchedPrices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMainMatchedPrices(string symbol, int marketID) {
            object[] results = this.Invoke("GetMainMatchedPrices", new object[] {
                        symbol,
                        marketID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMainMatchedPricesAsync(string symbol, int marketID) {
            this.GetMainMatchedPricesAsync(symbol, marketID, null);
        }
        
        /// <remarks/>
        public void GetMainMatchedPricesAsync(string symbol, int marketID, object userState) {
            if ((this.GetMainMatchedPricesOperationCompleted == null)) {
                this.GetMainMatchedPricesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMainMatchedPricesOperationCompleted);
            }
            this.InvokeAsync("GetMainMatchedPrices", new object[] {
                        symbol,
                        marketID}, this.GetMainMatchedPricesOperationCompleted, userState);
        }
        
        private void OnGetMainMatchedPricesOperationCompleted(object arg) {
            if ((this.GetMainMatchedPricesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMainMatchedPricesCompleted(this, new GetMainMatchedPricesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTickerInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTickerInfos(string listCodesInfos) {
            object[] results = this.Invoke("GetTickerInfos", new object[] {
                        listCodesInfos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTickerInfosAsync(string listCodesInfos) {
            this.GetTickerInfosAsync(listCodesInfos, null);
        }
        
        /// <remarks/>
        public void GetTickerInfosAsync(string listCodesInfos, object userState) {
            if ((this.GetTickerInfosOperationCompleted == null)) {
                this.GetTickerInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTickerInfosOperationCompleted);
            }
            this.InvokeAsync("GetTickerInfos", new object[] {
                        listCodesInfos}, this.GetTickerInfosOperationCompleted, userState);
        }
        
        private void OnGetTickerInfosOperationCompleted(object arg) {
            if ((this.GetTickerInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTickerInfosCompleted(this, new GetTickerInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTickerInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllTickerInfos(int marketId, int id) {
            object[] results = this.Invoke("GetAllTickerInfos", new object[] {
                        marketId,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTickerInfosAsync(int marketId, int id) {
            this.GetAllTickerInfosAsync(marketId, id, null);
        }
        
        /// <remarks/>
        public void GetAllTickerInfosAsync(int marketId, int id, object userState) {
            if ((this.GetAllTickerInfosOperationCompleted == null)) {
                this.GetAllTickerInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTickerInfosOperationCompleted);
            }
            this.InvokeAsync("GetAllTickerInfos", new object[] {
                        marketId,
                        id}, this.GetAllTickerInfosOperationCompleted, userState);
        }
        
        private void OnGetAllTickerInfosOperationCompleted(object arg) {
            if ((this.GetAllTickerInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTickerInfosCompleted(this, new GetAllTickerInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHOSEPutAd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHOSEPutAd() {
            object[] results = this.Invoke("GetHOSEPutAd", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHOSEPutAdAsync() {
            this.GetHOSEPutAdAsync(null);
        }
        
        /// <remarks/>
        public void GetHOSEPutAdAsync(object userState) {
            if ((this.GetHOSEPutAdOperationCompleted == null)) {
                this.GetHOSEPutAdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHOSEPutAdOperationCompleted);
            }
            this.InvokeAsync("GetHOSEPutAd", new object[0], this.GetHOSEPutAdOperationCompleted, userState);
        }
        
        private void OnGetHOSEPutAdOperationCompleted(object arg) {
            if ((this.GetHOSEPutAdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHOSEPutAdCompleted(this, new GetHOSEPutAdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHOSEPutExec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHOSEPutExec() {
            object[] results = this.Invoke("GetHOSEPutExec", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHOSEPutExecAsync() {
            this.GetHOSEPutExecAsync(null);
        }
        
        /// <remarks/>
        public void GetHOSEPutExecAsync(object userState) {
            if ((this.GetHOSEPutExecOperationCompleted == null)) {
                this.GetHOSEPutExecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHOSEPutExecOperationCompleted);
            }
            this.InvokeAsync("GetHOSEPutExec", new object[0], this.GetHOSEPutExecOperationCompleted, userState);
        }
        
        private void OnGetHOSEPutExecOperationCompleted(object arg) {
            if ((this.GetHOSEPutExecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHOSEPutExecCompleted(this, new GetHOSEPutExecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartUpdater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int StartUpdater() {
            object[] results = this.Invoke("StartUpdater", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StartUpdaterAsync() {
            this.StartUpdaterAsync(null);
        }
        
        /// <remarks/>
        public void StartUpdaterAsync(object userState) {
            if ((this.StartUpdaterOperationCompleted == null)) {
                this.StartUpdaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUpdaterOperationCompleted);
            }
            this.InvokeAsync("StartUpdater", new object[0], this.StartUpdaterOperationCompleted, userState);
        }
        
        private void OnStartUpdaterOperationCompleted(object arg) {
            if ((this.StartUpdaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUpdaterCompleted(this, new StartUpdaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartUpdaterForMarket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartUpdaterForMarket(int marketId) {
            this.Invoke("StartUpdaterForMarket", new object[] {
                        marketId});
        }
        
        /// <remarks/>
        public void StartUpdaterForMarketAsync(int marketId) {
            this.StartUpdaterForMarketAsync(marketId, null);
        }
        
        /// <remarks/>
        public void StartUpdaterForMarketAsync(int marketId, object userState) {
            if ((this.StartUpdaterForMarketOperationCompleted == null)) {
                this.StartUpdaterForMarketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUpdaterForMarketOperationCompleted);
            }
            this.InvokeAsync("StartUpdaterForMarket", new object[] {
                        marketId}, this.StartUpdaterForMarketOperationCompleted, userState);
        }
        
        private void OnStartUpdaterForMarketOperationCompleted(object arg) {
            if ((this.StartUpdaterForMarketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUpdaterForMarketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatingStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatingStatus() {
            object[] results = this.Invoke("UpdatingStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatingStatusAsync() {
            this.UpdatingStatusAsync(null);
        }
        
        /// <remarks/>
        public void UpdatingStatusAsync(object userState) {
            if ((this.UpdatingStatusOperationCompleted == null)) {
                this.UpdatingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatingStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatingStatus", new object[0], this.UpdatingStatusOperationCompleted, userState);
        }
        
        private void OnUpdatingStatusOperationCompleted(object arg) {
            if ((this.UpdatingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatingStatusCompleted(this, new UpdatingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartIntraD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartIntraD() {
            this.Invoke("StartIntraD", new object[0]);
        }
        
        /// <remarks/>
        public void StartIntraDAsync() {
            this.StartIntraDAsync(null);
        }
        
        /// <remarks/>
        public void StartIntraDAsync(object userState) {
            if ((this.StartIntraDOperationCompleted == null)) {
                this.StartIntraDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartIntraDOperationCompleted);
            }
            this.InvokeAsync("StartIntraD", new object[0], this.StartIntraDOperationCompleted, userState);
        }
        
        private void OnStartIntraDOperationCompleted(object arg) {
            if ((this.StartIntraDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartIntraDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopUpdater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int StopUpdater() {
            object[] results = this.Invoke("StopUpdater", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StopUpdaterAsync() {
            this.StopUpdaterAsync(null);
        }
        
        /// <remarks/>
        public void StopUpdaterAsync(object userState) {
            if ((this.StopUpdaterOperationCompleted == null)) {
                this.StopUpdaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopUpdaterOperationCompleted);
            }
            this.InvokeAsync("StopUpdater", new object[0], this.StopUpdaterOperationCompleted, userState);
        }
        
        private void OnStopUpdaterOperationCompleted(object arg) {
            if ((this.StopUpdaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopUpdaterCompleted(this, new StopUpdaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopUpdaterForMarket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopUpdaterForMarket(int marketId) {
            this.Invoke("StopUpdaterForMarket", new object[] {
                        marketId});
        }
        
        /// <remarks/>
        public void StopUpdaterForMarketAsync(int marketId) {
            this.StopUpdaterForMarketAsync(marketId, null);
        }
        
        /// <remarks/>
        public void StopUpdaterForMarketAsync(int marketId, object userState) {
            if ((this.StopUpdaterForMarketOperationCompleted == null)) {
                this.StopUpdaterForMarketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopUpdaterForMarketOperationCompleted);
            }
            this.InvokeAsync("StopUpdaterForMarket", new object[] {
                        marketId}, this.StopUpdaterForMarketOperationCompleted, userState);
        }
        
        private void OnStopUpdaterForMarketOperationCompleted(object arg) {
            if ((this.StopUpdaterForMarketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopUpdaterForMarketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopIntraD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopIntraD() {
            this.Invoke("StopIntraD", new object[0]);
        }
        
        /// <remarks/>
        public void StopIntraDAsync() {
            this.StopIntraDAsync(null);
        }
        
        /// <remarks/>
        public void StopIntraDAsync(object userState) {
            if ((this.StopIntraDOperationCompleted == null)) {
                this.StopIntraDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopIntraDOperationCompleted);
            }
            this.InvokeAsync("StopIntraD", new object[0], this.StopIntraDOperationCompleted, userState);
        }
        
        private void OnStopIntraDOperationCompleted(object arg) {
            if ((this.StopIntraDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopIntraDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStaticStockInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStaticStockInfo(string listCodes, int languageId) {
            object[] results = this.Invoke("GetStaticStockInfo", new object[] {
                        listCodes,
                        languageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaticStockInfoAsync(string listCodes, int languageId) {
            this.GetStaticStockInfoAsync(listCodes, languageId, null);
        }
        
        /// <remarks/>
        public void GetStaticStockInfoAsync(string listCodes, int languageId, object userState) {
            if ((this.GetStaticStockInfoOperationCompleted == null)) {
                this.GetStaticStockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaticStockInfoOperationCompleted);
            }
            this.InvokeAsync("GetStaticStockInfo", new object[] {
                        listCodes,
                        languageId}, this.GetStaticStockInfoOperationCompleted, userState);
        }
        
        private void OnGetStaticStockInfoOperationCompleted(object arg) {
            if ((this.GetStaticStockInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaticStockInfoCompleted(this, new GetStaticStockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDynamicStockInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDynamicStockInfo(string listCodes, int languageId) {
            object[] results = this.Invoke("GetDynamicStockInfo", new object[] {
                        listCodes,
                        languageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDynamicStockInfoAsync(string listCodes, int languageId) {
            this.GetDynamicStockInfoAsync(listCodes, languageId, null);
        }
        
        /// <remarks/>
        public void GetDynamicStockInfoAsync(string listCodes, int languageId, object userState) {
            if ((this.GetDynamicStockInfoOperationCompleted == null)) {
                this.GetDynamicStockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDynamicStockInfoOperationCompleted);
            }
            this.InvokeAsync("GetDynamicStockInfo", new object[] {
                        listCodes,
                        languageId}, this.GetDynamicStockInfoOperationCompleted, userState);
        }
        
        private void OnGetDynamicStockInfoOperationCompleted(object arg) {
            if ((this.GetDynamicStockInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDynamicStockInfoCompleted(this, new GetDynamicStockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMarketInfoCompletedEventHandler(object sender, GetMarketInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarketInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarketInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void MarketStatusCompletedEventHandler(object sender, MarketStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AllMarketStatusCompletedEventHandler(object sender, AllMarketStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllMarketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllMarketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AllMarketInfoAndStatusCompletedEventHandler(object sender, AllMarketInfoAndStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllMarketInfoAndStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllMarketInfoAndStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SetMatketStatusCompletedEventHandler(object sender, SetMatketStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMatketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMatketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetListCompanyCompletedEventHandler(object sender, GetListCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetNewestWorkingDatesCompletedEventHandler(object sender, GetNewestWorkingDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewestWorkingDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewestWorkingDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetAllStockFromMarketCompletedEventHandler(object sender, GetAllStockFromMarketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStockFromMarketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStockFromMarketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetStockInfoCompletedEventHandler(object sender, GetStockInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetStockDetailCompletedEventHandler(object sender, GetStockDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetStockInfoByLangugeCompletedEventHandler(object sender, GetStockInfoByLangugeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockInfoByLangugeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockInfoByLangugeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetListStockInfosCompletedEventHandler(object sender, GetListStockInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListStockInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListStockInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTransactionsCompletedEventHandler(object sender, GetTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMainMatchedPricesCompletedEventHandler(object sender, GetMainMatchedPricesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMainMatchedPricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMainMatchedPricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTickerInfosCompletedEventHandler(object sender, GetTickerInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTickerInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTickerInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetAllTickerInfosCompletedEventHandler(object sender, GetAllTickerInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTickerInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTickerInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetHOSEPutAdCompletedEventHandler(object sender, GetHOSEPutAdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHOSEPutAdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHOSEPutAdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetHOSEPutExecCompletedEventHandler(object sender, GetHOSEPutExecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHOSEPutExecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHOSEPutExecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StartUpdaterCompletedEventHandler(object sender, StartUpdaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartUpdaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartUpdaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StartUpdaterForMarketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdatingStatusCompletedEventHandler(object sender, UpdatingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StartIntraDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StopUpdaterCompletedEventHandler(object sender, StopUpdaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopUpdaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopUpdaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StopUpdaterForMarketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StopIntraDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetStaticStockInfoCompletedEventHandler(object sender, GetStaticStockInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaticStockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaticStockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetDynamicStockInfoCompletedEventHandler(object sender, GetDynamicStockInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDynamicStockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDynamicStockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591