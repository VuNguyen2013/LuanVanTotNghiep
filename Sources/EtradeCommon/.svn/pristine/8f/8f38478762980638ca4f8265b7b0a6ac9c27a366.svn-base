using System;
using System.ComponentModel;

namespace AccountManager.Entities
{
	/// <summary>
	///		The data structure representation of the 'BrokerAccount' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IBrokerAccount 
	{
		/// <summary>			
		/// BrokerID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "BrokerAccount"</remarks>
		System.String BrokerId { get; set; }
				
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		System.String OriginalBrokerId { get; set; }
			
		
		
		/// <summary>
		/// Name : 
		/// </summary>
		System.String  Name  { get; set; }
		
		/// <summary>
		/// Password : 
		/// </summary>
		System.String  Password  { get; set; }
		
		/// <summary>
		/// AccountType : 
		/// </summary>
		System.Int16  AccountType  { get; set; }
		
		/// <summary>
		/// Actived : 
		/// </summary>
		System.Boolean  Actived  { get; set; }
		
		/// <summary>
		/// MobilePhone : 
		/// </summary>
		System.String  MobilePhone  { get; set; }
		
		/// <summary>
		/// EmailAddr : 
		/// </summary>
		System.String  EmailAddr  { get; set; }
		
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		System.DateTime  CreatedDate  { get; set; }
		
		/// <summary>
		/// CreatedUser : 
		/// </summary>
		System.String  CreatedUser  { get; set; }
		
		/// <summary>
		/// UpdatedDate : 
		/// </summary>
		System.DateTime?  UpdatedDate  { get; set; }
		
		/// <summary>
		/// UpdatedUser : 
		/// </summary>
		System.String  UpdatedUser  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table permissionIdBrokerAmPermissionCollectionFromBrokerPermission
		/// </summary>	
		TList<BrokerAmPermission> PermissionIdBrokerAmPermissionCollection_From_BrokerPermission { get; set; }	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _brokerPermissionBrokerId
		/// </summary>	
		TList<BrokerPermission> BrokerPermissionCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mainCustAccountBrokerId
		/// </summary>	
		TList<MainCustAccount> MainCustAccountCollection {  get;  set;}	

		#endregion Data Properties

	}
}


