using System;
using System.Diagnostics;
using ETradeCommon;

namespace ETradeAutomation
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                if ((args != null) && (args.Length > 0))
                {
                    string argument = args[0];
                    int taskId = int.Parse(argument);
                    if (taskId == (int) Constants.TaskId.ACTIVATION)
                    {
                        LogHandler.Log("Activate service", "ETradeAutomation", TraceEventType.Information);
                        var etradeWebService = new ETradeWebService.ETradeServicesWebServices();
                        etradeWebService.Login("1", "1", 0);//fake login
                    }
                    if (taskId == (int) Constants.TaskId.CONDITION_ORDER)
                    {
                        LogHandler.Log("Start putting condition order", "ETradeAutomation", TraceEventType.Information);
                        var etradeWebService = new ETradeWebService.ETradeServicesWebServices();
                        etradeWebService.PutConditionOrder();
                    }
                    if (taskId == (int) Constants.TaskId.CURRENCIES)
                    {
                        LogHandler.Log("Start getting currencies", "ETradeAutomation", TraceEventType.Information);
                        var currenciesParser = new CurrenciesParser();
                        currenciesParser.Parse();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionHandler.HandleException(ex, ETradeCommon.Constants.EXCEPTION_POLICY);
            }
            
        }
    }
}
