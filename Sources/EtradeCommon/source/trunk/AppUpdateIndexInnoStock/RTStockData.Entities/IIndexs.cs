using System;
using System.ComponentModel;

namespace RTStockData.Entities
{
	/// <summary>
	///		The data structure representation of the 'Indexs' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IIndexs 
	{
		/// <summary>			
		/// VNINDEX_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Indexs"</remarks>
		System.Int32 VnindexId { get; set; }
				
		
		
		/// <summary>
		/// TRADED_DATE : 
		/// </summary>
		System.DateTime?  TradedDate  { get; set; }
		
		/// <summary>
		/// OPEN : 
		/// </summary>
		System.Double?  Open  { get; set; }
		
		/// <summary>
		/// CLOSE : 
		/// </summary>
		System.Double?  Close  { get; set; }
		
		/// <summary>
		/// CHANGE : 
		/// </summary>
		System.Double?  Change  { get; set; }
		
		/// <summary>
		/// UNCHANGE : 
		/// </summary>
		System.Double?  Unchange  { get; set; }
		
		/// <summary>
		/// HIGH : 
		/// </summary>
		System.Double?  High  { get; set; }
		
		/// <summary>
		/// LOW : 
		/// </summary>
		System.Double?  Low  { get; set; }
		
		/// <summary>
		/// UP : 
		/// </summary>
		System.Double?  Up  { get; set; }
		
		/// <summary>
		/// DOWN : 
		/// </summary>
		System.Double?  Down  { get; set; }
		
		/// <summary>
		/// AVERAGE : 
		/// </summary>
		System.Double?  Average  { get; set; }
		
		/// <summary>
		/// VOL : 
		/// </summary>
		System.Double?  Vol  { get; set; }
		
		/// <summary>
		/// VAL : 
		/// </summary>
		System.Double?  Val  { get; set; }
		
		/// <summary>
		/// ATTRIBUTE1 : 
		/// </summary>
		System.String  Attribute1  { get; set; }
		
		/// <summary>
		/// TOTALTRADE : 
		/// </summary>
		System.Double?  Totaltrade  { get; set; }
		
		/// <summary>
		/// ATTRIBUTE3 : 
		/// </summary>
		System.DateTime?  Attribute3  { get; set; }
		
		/// <summary>
		/// Market_ID : 
		/// </summary>
		System.String  MarketId  { get; set; }
		
		/// <summary>
		/// STATUS : 
		/// </summary>
		System.Int16?  Status  { get; set; }
		
		/// <summary>
		/// TRANS : 
		/// </summary>
		System.Int32?  Trans  { get; set; }
		
		/// <summary>
		/// UPVOLUME : 
		/// </summary>
		System.Double?  Upvolume  { get; set; }
		
		/// <summary>
		/// DOWNVOLUME : 
		/// </summary>
		System.Double?  Downvolume  { get; set; }
		
		/// <summary>
		/// NOCHANGEVOLUME : 
		/// </summary>
		System.Double?  Nochangevolume  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties

		#endregion Data Properties

	}
}


