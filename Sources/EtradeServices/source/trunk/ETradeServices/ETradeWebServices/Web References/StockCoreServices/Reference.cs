//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.32559
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.32559.
// 
#pragma warning disable 1591

namespace ETradeWebServices.StockCoreServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.32559")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StockCoreServicesSoap", Namespace="http://tempuri.org/")]
    public partial class StockCoreServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReceiveOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashBalanceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StockCoreServices() {
            this.Url = global::ETradeWebServices.Properties.Settings.Default.ETradeWebServices_StockCoreServices_StockCoreServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReceiveOrderCompletedEventHandler ReceiveOrderCompleted;
        
        /// <remarks/>
        public event GetCashBalanceCompletedEventHandler GetCashBalanceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public short ReceiveOrder(long clientOrderID, string accountNo, string stockSymbol, long price, short volume, char side) {
            object[] results = this.Invoke("ReceiveOrder", new object[] {
                        clientOrderID,
                        accountNo,
                        stockSymbol,
                        price,
                        volume,
                        side});
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveOrderAsync(long clientOrderID, string accountNo, string stockSymbol, long price, short volume, char side) {
            this.ReceiveOrderAsync(clientOrderID, accountNo, stockSymbol, price, volume, side, null);
        }
        
        /// <remarks/>
        public void ReceiveOrderAsync(long clientOrderID, string accountNo, string stockSymbol, long price, short volume, char side, object userState) {
            if ((this.ReceiveOrderOperationCompleted == null)) {
                this.ReceiveOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveOrderOperationCompleted);
            }
            this.InvokeAsync("ReceiveOrder", new object[] {
                        clientOrderID,
                        accountNo,
                        stockSymbol,
                        price,
                        volume,
                        side}, this.ReceiveOrderOperationCompleted, userState);
        }
        
        private void OnReceiveOrderOperationCompleted(object arg) {
            if ((this.ReceiveOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveOrderCompleted(this, new ReceiveOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCashBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CashBalanceData GetCashBalance(string accountNo) {
            object[] results = this.Invoke("GetCashBalance", new object[] {
                        accountNo});
            return ((CashBalanceData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashBalanceAsync(string accountNo) {
            this.GetCashBalanceAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetCashBalanceAsync(string accountNo, object userState) {
            if ((this.GetCashBalanceOperationCompleted == null)) {
                this.GetCashBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashBalanceOperationCompleted);
            }
            this.InvokeAsync("GetCashBalance", new object[] {
                        accountNo}, this.GetCashBalanceOperationCompleted, userState);
        }
        
        private void OnGetCashBalanceOperationCompleted(object arg) {
            if ((this.GetCashBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashBalanceCompleted(this, new GetCashBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.32559")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CashBalanceData {
        
        private long withDrawField;
        
        private long buyCreditField;
        
        private long totalBuyField;
        
        private long totalSellField;
        
        /// <remarks/>
        public long WithDraw {
            get {
                return this.withDrawField;
            }
            set {
                this.withDrawField = value;
            }
        }
        
        /// <remarks/>
        public long BuyCredit {
            get {
                return this.buyCreditField;
            }
            set {
                this.buyCreditField = value;
            }
        }
        
        /// <remarks/>
        public long TotalBuy {
            get {
                return this.totalBuyField;
            }
            set {
                this.totalBuyField = value;
            }
        }
        
        /// <remarks/>
        public long TotalSell {
            get {
                return this.totalSellField;
            }
            set {
                this.totalSellField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.32559")]
    public delegate void ReceiveOrderCompletedEventHandler(object sender, ReceiveOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.32559")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.32559")]
    public delegate void GetCashBalanceCompletedEventHandler(object sender, GetCashBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.32559")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CashBalanceData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashBalanceData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591