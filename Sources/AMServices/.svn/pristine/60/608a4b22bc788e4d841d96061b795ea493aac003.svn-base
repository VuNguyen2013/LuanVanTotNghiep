<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">AccountManager</database>
<procedures>
		
		<procedure owner="dbo" name="BrokerAccount_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the BrokerAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[BrokerID],
					[Name],
					[Password],
					[AccountType],
					[Actived],
					[MobilePhone],
					[EmailAddr],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[BrokerAccount]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="BrokerAccount_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BrokerAccount table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[BrokerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [BrokerID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Password]'
				SET @SQL = @SQL + ', [AccountType]'
				SET @SQL = @SQL + ', [Actived]'
				SET @SQL = @SQL + ', [MobilePhone]'
				SET @SQL = @SQL + ', [EmailAddr]'
				SET @SQL = @SQL + ', [CreatedDate]'
				SET @SQL = @SQL + ', [CreatedUser]'
				SET @SQL = @SQL + ', [UpdatedDate]'
				SET @SQL = @SQL + ', [UpdatedUser]'
				SET @SQL = @SQL + ' FROM [dbo].[BrokerAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [BrokerID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Password],'
				SET @SQL = @SQL + ' [AccountType],'
				SET @SQL = @SQL + ' [Actived],'
				SET @SQL = @SQL + ' [MobilePhone],'
				SET @SQL = @SQL + ' [EmailAddr],'
				SET @SQL = @SQL + ' [CreatedDate],'
				SET @SQL = @SQL + ' [CreatedUser],'
				SET @SQL = @SQL + ' [UpdatedDate],'
				SET @SQL = @SQL + ' [UpdatedUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[BrokerAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="BrokerAccount_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the BrokerAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Password" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@AccountType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@EmailAddr" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[BrokerAccount]
					(
					[BrokerID]
					,[Name]
					,[Password]
					,[AccountType]
					,[Actived]
					,[MobilePhone]
					,[EmailAddr]
					,[CreatedDate]
					,[CreatedUser]
					,[UpdatedDate]
					,[UpdatedUser]
					)
				VALUES
					(
					@BrokerId
					,@Name
					,@Password
					,@AccountType
					,@Actived
					,@MobilePhone
					,@EmailAddr
					,@CreatedDate
					,@CreatedUser
					,@UpdatedDate
					,@UpdatedUser
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAccount_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the BrokerAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalBrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Password" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@AccountType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@EmailAddr" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[BrokerAccount]
				SET
					[BrokerID] = @BrokerId
					,[Name] = @Name
					,[Password] = @Password
					,[AccountType] = @AccountType
					,[Actived] = @Actived
					,[MobilePhone] = @MobilePhone
					,[EmailAddr] = @EmailAddr
					,[CreatedDate] = @CreatedDate
					,[CreatedUser] = @CreatedUser
					,[UpdatedDate] = @UpdatedDate
					,[UpdatedUser] = @UpdatedUser
				WHERE
[BrokerID] = @OriginalBrokerId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAccount_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the BrokerAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[BrokerAccount] WITH (ROWLOCK) 
				WHERE
					[BrokerID] = @BrokerId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAccount_GetByBrokerId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BrokerAccount table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[BrokerID],
					[Name],
					[Password],
					[AccountType],
					[Actived],
					[MobilePhone],
					[EmailAddr],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[BrokerAccount]
				WHERE
					[BrokerID] = @BrokerId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="BrokerAccount_GetByPermissionIdFromBrokerPermission" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[BrokerAccount].[BrokerID]
       ,dbo.[BrokerAccount].[Name]
       ,dbo.[BrokerAccount].[Password]
       ,dbo.[BrokerAccount].[AccountType]
       ,dbo.[BrokerAccount].[Actived]
       ,dbo.[BrokerAccount].[MobilePhone]
       ,dbo.[BrokerAccount].[EmailAddr]
       ,dbo.[BrokerAccount].[CreatedDate]
       ,dbo.[BrokerAccount].[CreatedUser]
       ,dbo.[BrokerAccount].[UpdatedDate]
       ,dbo.[BrokerAccount].[UpdatedUser]
  FROM dbo.[BrokerAccount]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[BrokerPermission] 
                WHERE dbo.[BrokerPermission].[PermissionID] = @PermissionId
                  AND dbo.[BrokerPermission].[BrokerID] = dbo.[BrokerAccount].[BrokerID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAccount_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the BrokerAccount table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Password" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@AccountType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@EmailAddr" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [BrokerID]
	, [Name]
	, [Password]
	, [AccountType]
	, [Actived]
	, [MobilePhone]
	, [EmailAddr]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedDate]
	, [UpdatedUser]
    FROM
	[dbo].[BrokerAccount]
    WHERE 
	 ([BrokerID] = @BrokerId OR @BrokerId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([Password] = @Password OR @Password IS NULL)
	AND ([AccountType] = @AccountType OR @AccountType IS NULL)
	AND ([Actived] = @Actived OR @Actived IS NULL)
	AND ([MobilePhone] = @MobilePhone OR @MobilePhone IS NULL)
	AND ([EmailAddr] = @EmailAddr OR @EmailAddr IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([CreatedUser] = @CreatedUser OR @CreatedUser IS NULL)
	AND ([UpdatedDate] = @UpdatedDate OR @UpdatedDate IS NULL)
	AND ([UpdatedUser] = @UpdatedUser OR @UpdatedUser IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [BrokerID]
	, [Name]
	, [Password]
	, [AccountType]
	, [Actived]
	, [MobilePhone]
	, [EmailAddr]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedDate]
	, [UpdatedUser]
    FROM
	[dbo].[BrokerAccount]
    WHERE 
	 ([BrokerID] = @BrokerId AND @BrokerId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Password] = @Password AND @Password is not null)
	OR ([AccountType] = @AccountType AND @AccountType is not null)
	OR ([Actived] = @Actived AND @Actived is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	OR ([EmailAddr] = @EmailAddr AND @EmailAddr is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([CreatedUser] = @CreatedUser AND @CreatedUser is not null)
	OR ([UpdatedDate] = @UpdatedDate AND @UpdatedDate is not null)
	OR ([UpdatedUser] = @UpdatedUser AND @UpdatedUser is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="BrokerAccount_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BrokerAccount table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [BrokerID]
					, [Name]
					, [Password]
					, [AccountType]
					, [Actived]
					, [MobilePhone]
					, [EmailAddr]
					, [CreatedDate]
					, [CreatedUser]
					, [UpdatedDate]
					, [UpdatedUser]
					FROM [dbo].[BrokerAccount] {0}
				)
				SELECT
				       [BrokerID],
				       [Name],
				       [Password],
				       [AccountType],
				       [Actived],
				       [MobilePhone],
				       [EmailAddr],
				       [CreatedDate],
				       [CreatedUser],
				       [UpdatedDate],
				       [UpdatedUser]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[BrokerAccount] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MainCustAccount_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the MainCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MainCustAccountID],
					[FullName],
					[Email],
					[Phone],
					[Actived],
					[Password],
					[PIN],
					[PassLockReason],
					[PINLockReason],
					[LockReason],
					[TokenID],
					[TokenName],
					[TokenActived],
					[BrokerID],
					[PassIsNew],
					[PINIsNew],
					[PassExpDate],
					[PINExpDate],
					[CustomerType],
					[AuthType],
					[PinType],
					[FailedLoginCount],
					[FailedLoginTime],
					[CreatedDate],
					[CreatedUser],
					[UpdatedUser],
					[UpdatedDate]
				FROM
					[dbo].[MainCustAccount]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MainCustAccount_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the MainCustAccount table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[MainCustAccountID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [MainCustAccountID]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [Actived]'
				SET @SQL = @SQL + ', [Password]'
				SET @SQL = @SQL + ', [PIN]'
				SET @SQL = @SQL + ', [PassLockReason]'
				SET @SQL = @SQL + ', [PINLockReason]'
				SET @SQL = @SQL + ', [LockReason]'
				SET @SQL = @SQL + ', [TokenID]'
				SET @SQL = @SQL + ', [TokenName]'
				SET @SQL = @SQL + ', [TokenActived]'
				SET @SQL = @SQL + ', [BrokerID]'
				SET @SQL = @SQL + ', [PassIsNew]'
				SET @SQL = @SQL + ', [PINIsNew]'
				SET @SQL = @SQL + ', [PassExpDate]'
				SET @SQL = @SQL + ', [PINExpDate]'
				SET @SQL = @SQL + ', [CustomerType]'
				SET @SQL = @SQL + ', [AuthType]'
				SET @SQL = @SQL + ', [PinType]'
				SET @SQL = @SQL + ', [FailedLoginCount]'
				SET @SQL = @SQL + ', [FailedLoginTime]'
				SET @SQL = @SQL + ', [CreatedDate]'
				SET @SQL = @SQL + ', [CreatedUser]'
				SET @SQL = @SQL + ', [UpdatedUser]'
				SET @SQL = @SQL + ', [UpdatedDate]'
				SET @SQL = @SQL + ' FROM [dbo].[MainCustAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [MainCustAccountID],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [Actived],'
				SET @SQL = @SQL + ' [Password],'
				SET @SQL = @SQL + ' [PIN],'
				SET @SQL = @SQL + ' [PassLockReason],'
				SET @SQL = @SQL + ' [PINLockReason],'
				SET @SQL = @SQL + ' [LockReason],'
				SET @SQL = @SQL + ' [TokenID],'
				SET @SQL = @SQL + ' [TokenName],'
				SET @SQL = @SQL + ' [TokenActived],'
				SET @SQL = @SQL + ' [BrokerID],'
				SET @SQL = @SQL + ' [PassIsNew],'
				SET @SQL = @SQL + ' [PINIsNew],'
				SET @SQL = @SQL + ' [PassExpDate],'
				SET @SQL = @SQL + ' [PINExpDate],'
				SET @SQL = @SQL + ' [CustomerType],'
				SET @SQL = @SQL + ' [AuthType],'
				SET @SQL = @SQL + ' [PinType],'
				SET @SQL = @SQL + ' [FailedLoginCount],'
				SET @SQL = @SQL + ' [FailedLoginTime],'
				SET @SQL = @SQL + ' [CreatedDate],'
				SET @SQL = @SQL + ' [CreatedUser],'
				SET @SQL = @SQL + ' [UpdatedUser],'
				SET @SQL = @SQL + ' [UpdatedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MainCustAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MainCustAccount_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the MainCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@FullName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Password" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Pin" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PassLockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PinLockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TokenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TokenName" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TokenActived" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PassIsNew" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PinIsNew" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PassExpDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PinExpDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CustomerType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AuthType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@PinType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@FailedLoginCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FailedLoginTime" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MainCustAccount]
					(
					[MainCustAccountID]
					,[FullName]
					,[Email]
					,[Phone]
					,[Actived]
					,[Password]
					,[PIN]
					,[PassLockReason]
					,[PINLockReason]
					,[LockReason]
					,[TokenID]
					,[TokenName]
					,[TokenActived]
					,[BrokerID]
					,[PassIsNew]
					,[PINIsNew]
					,[PassExpDate]
					,[PINExpDate]
					,[CustomerType]
					,[AuthType]
					,[PinType]
					,[FailedLoginCount]
					,[FailedLoginTime]
					,[CreatedDate]
					,[CreatedUser]
					,[UpdatedUser]
					,[UpdatedDate]
					)
				VALUES
					(
					@MainCustAccountId
					,@FullName
					,@Email
					,@Phone
					,@Actived
					,@Password
					,@Pin
					,@PassLockReason
					,@PinLockReason
					,@LockReason
					,@TokenId
					,@TokenName
					,@TokenActived
					,@BrokerId
					,@PassIsNew
					,@PinIsNew
					,@PassExpDate
					,@PinExpDate
					,@CustomerType
					,@AuthType
					,@PinType
					,@FailedLoginCount
					,@FailedLoginTime
					,@CreatedDate
					,@CreatedUser
					,@UpdatedUser
					,@UpdatedDate
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MainCustAccount_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the MainCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalMainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@FullName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Password" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Pin" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PassLockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PinLockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TokenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TokenName" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TokenActived" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PassIsNew" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PinIsNew" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PassExpDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PinExpDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CustomerType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AuthType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@PinType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@FailedLoginCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FailedLoginTime" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MainCustAccount]
				SET
					[MainCustAccountID] = @MainCustAccountId
					,[FullName] = @FullName
					,[Email] = @Email
					,[Phone] = @Phone
					,[Actived] = @Actived
					,[Password] = @Password
					,[PIN] = @Pin
					,[PassLockReason] = @PassLockReason
					,[PINLockReason] = @PinLockReason
					,[LockReason] = @LockReason
					,[TokenID] = @TokenId
					,[TokenName] = @TokenName
					,[TokenActived] = @TokenActived
					,[BrokerID] = @BrokerId
					,[PassIsNew] = @PassIsNew
					,[PINIsNew] = @PinIsNew
					,[PassExpDate] = @PassExpDate
					,[PINExpDate] = @PinExpDate
					,[CustomerType] = @CustomerType
					,[AuthType] = @AuthType
					,[PinType] = @PinType
					,[FailedLoginCount] = @FailedLoginCount
					,[FailedLoginTime] = @FailedLoginTime
					,[CreatedDate] = @CreatedDate
					,[CreatedUser] = @CreatedUser
					,[UpdatedUser] = @UpdatedUser
					,[UpdatedDate] = @UpdatedDate
				WHERE
[MainCustAccountID] = @OriginalMainCustAccountId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MainCustAccount_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the MainCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MainCustAccount] WITH (ROWLOCK) 
				WHERE
					[MainCustAccountID] = @MainCustAccountId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MainCustAccount_GetByBrokerId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the MainCustAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MainCustAccountID],
					[FullName],
					[Email],
					[Phone],
					[Actived],
					[Password],
					[PIN],
					[PassLockReason],
					[PINLockReason],
					[LockReason],
					[TokenID],
					[TokenName],
					[TokenActived],
					[BrokerID],
					[PassIsNew],
					[PINIsNew],
					[PassExpDate],
					[PINExpDate],
					[CustomerType],
					[AuthType],
					[PinType],
					[FailedLoginCount],
					[FailedLoginTime],
					[CreatedDate],
					[CreatedUser],
					[UpdatedUser],
					[UpdatedDate]
				FROM
					[dbo].[MainCustAccount]
				WHERE
					[BrokerID] = @BrokerId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MainCustAccount_GetByMainCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the MainCustAccount table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MainCustAccountID],
					[FullName],
					[Email],
					[Phone],
					[Actived],
					[Password],
					[PIN],
					[PassLockReason],
					[PINLockReason],
					[LockReason],
					[TokenID],
					[TokenName],
					[TokenActived],
					[BrokerID],
					[PassIsNew],
					[PINIsNew],
					[PassExpDate],
					[PINExpDate],
					[CustomerType],
					[AuthType],
					[PinType],
					[FailedLoginCount],
					[FailedLoginTime],
					[CreatedDate],
					[CreatedUser],
					[UpdatedUser],
					[UpdatedDate]
				FROM
					[dbo].[MainCustAccount]
				WHERE
					[MainCustAccountID] = @MainCustAccountId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MainCustAccount_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the MainCustAccount table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@FullName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Password" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Pin" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PassLockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PinLockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LockReason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TokenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TokenName" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TokenActived" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@PassIsNew" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PinIsNew" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PassExpDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PinExpDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CustomerType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AuthType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@PinType" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@FailedLoginCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FailedLoginTime" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MainCustAccountID]
	, [FullName]
	, [Email]
	, [Phone]
	, [Actived]
	, [Password]
	, [PIN]
	, [PassLockReason]
	, [PINLockReason]
	, [LockReason]
	, [TokenID]
	, [TokenName]
	, [TokenActived]
	, [BrokerID]
	, [PassIsNew]
	, [PINIsNew]
	, [PassExpDate]
	, [PINExpDate]
	, [CustomerType]
	, [AuthType]
	, [PinType]
	, [FailedLoginCount]
	, [FailedLoginTime]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedUser]
	, [UpdatedDate]
    FROM
	[dbo].[MainCustAccount]
    WHERE 
	 ([MainCustAccountID] = @MainCustAccountId OR @MainCustAccountId IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Actived] = @Actived OR @Actived IS NULL)
	AND ([Password] = @Password OR @Password IS NULL)
	AND ([PIN] = @Pin OR @Pin IS NULL)
	AND ([PassLockReason] = @PassLockReason OR @PassLockReason IS NULL)
	AND ([PINLockReason] = @PinLockReason OR @PinLockReason IS NULL)
	AND ([LockReason] = @LockReason OR @LockReason IS NULL)
	AND ([TokenID] = @TokenId OR @TokenId IS NULL)
	AND ([TokenName] = @TokenName OR @TokenName IS NULL)
	AND ([TokenActived] = @TokenActived OR @TokenActived IS NULL)
	AND ([BrokerID] = @BrokerId OR @BrokerId IS NULL)
	AND ([PassIsNew] = @PassIsNew OR @PassIsNew IS NULL)
	AND ([PINIsNew] = @PinIsNew OR @PinIsNew IS NULL)
	AND ([PassExpDate] = @PassExpDate OR @PassExpDate IS NULL)
	AND ([PINExpDate] = @PinExpDate OR @PinExpDate IS NULL)
	AND ([CustomerType] = @CustomerType OR @CustomerType IS NULL)
	AND ([AuthType] = @AuthType OR @AuthType IS NULL)
	AND ([PinType] = @PinType OR @PinType IS NULL)
	AND ([FailedLoginCount] = @FailedLoginCount OR @FailedLoginCount IS NULL)
	AND ([FailedLoginTime] = @FailedLoginTime OR @FailedLoginTime IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([CreatedUser] = @CreatedUser OR @CreatedUser IS NULL)
	AND ([UpdatedUser] = @UpdatedUser OR @UpdatedUser IS NULL)
	AND ([UpdatedDate] = @UpdatedDate OR @UpdatedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MainCustAccountID]
	, [FullName]
	, [Email]
	, [Phone]
	, [Actived]
	, [Password]
	, [PIN]
	, [PassLockReason]
	, [PINLockReason]
	, [LockReason]
	, [TokenID]
	, [TokenName]
	, [TokenActived]
	, [BrokerID]
	, [PassIsNew]
	, [PINIsNew]
	, [PassExpDate]
	, [PINExpDate]
	, [CustomerType]
	, [AuthType]
	, [PinType]
	, [FailedLoginCount]
	, [FailedLoginTime]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedUser]
	, [UpdatedDate]
    FROM
	[dbo].[MainCustAccount]
    WHERE 
	 ([MainCustAccountID] = @MainCustAccountId AND @MainCustAccountId is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Actived] = @Actived AND @Actived is not null)
	OR ([Password] = @Password AND @Password is not null)
	OR ([PIN] = @Pin AND @Pin is not null)
	OR ([PassLockReason] = @PassLockReason AND @PassLockReason is not null)
	OR ([PINLockReason] = @PinLockReason AND @PinLockReason is not null)
	OR ([LockReason] = @LockReason AND @LockReason is not null)
	OR ([TokenID] = @TokenId AND @TokenId is not null)
	OR ([TokenName] = @TokenName AND @TokenName is not null)
	OR ([TokenActived] = @TokenActived AND @TokenActived is not null)
	OR ([BrokerID] = @BrokerId AND @BrokerId is not null)
	OR ([PassIsNew] = @PassIsNew AND @PassIsNew is not null)
	OR ([PINIsNew] = @PinIsNew AND @PinIsNew is not null)
	OR ([PassExpDate] = @PassExpDate AND @PassExpDate is not null)
	OR ([PINExpDate] = @PinExpDate AND @PinExpDate is not null)
	OR ([CustomerType] = @CustomerType AND @CustomerType is not null)
	OR ([AuthType] = @AuthType AND @AuthType is not null)
	OR ([PinType] = @PinType AND @PinType is not null)
	OR ([FailedLoginCount] = @FailedLoginCount AND @FailedLoginCount is not null)
	OR ([FailedLoginTime] = @FailedLoginTime AND @FailedLoginTime is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([CreatedUser] = @CreatedUser AND @CreatedUser is not null)
	OR ([UpdatedUser] = @UpdatedUser AND @UpdatedUser is not null)
	OR ([UpdatedDate] = @UpdatedDate AND @UpdatedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MainCustAccount_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the MainCustAccount table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [MainCustAccountID]
					, [FullName]
					, [Email]
					, [Phone]
					, [Actived]
					, [Password]
					, [PIN]
					, [PassLockReason]
					, [PINLockReason]
					, [LockReason]
					, [TokenID]
					, [TokenName]
					, [TokenActived]
					, [BrokerID]
					, [PassIsNew]
					, [PINIsNew]
					, [PassExpDate]
					, [PINExpDate]
					, [CustomerType]
					, [AuthType]
					, [PinType]
					, [FailedLoginCount]
					, [FailedLoginTime]
					, [CreatedDate]
					, [CreatedUser]
					, [UpdatedUser]
					, [UpdatedDate]
					FROM [dbo].[MainCustAccount] {0}
				)
				SELECT
				       [MainCustAccountID],
				       [FullName],
				       [Email],
				       [Phone],
				       [Actived],
				       [Password],
				       [PIN],
				       [PassLockReason],
				       [PINLockReason],
				       [LockReason],
				       [TokenID],
				       [TokenName],
				       [TokenActived],
				       [BrokerID],
				       [PassIsNew],
				       [PINIsNew],
				       [PassExpDate],
				       [PINExpDate],
				       [CustomerType],
				       [AuthType],
				       [PinType],
				       [FailedLoginCount],
				       [FailedLoginTime],
				       [CreatedDate],
				       [CreatedUser],
				       [UpdatedUser],
				       [UpdatedDate]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MainCustAccount] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="OpenCustAccount_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the OpenCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OpenID],
					[RegisterDate],
					[CardID],
					[CardIssue],
					[PlaceIssue],
					[Name],
					[Birthday],
					[Sex],
					[Occupation],
					[Nationality],
					[Address1],
					[Telephone1],
					[Fax1],
					[Address2],
					[Telephone2],
					[Fax2],
					[Address3],
					[Telephone3],
					[Fax3],
					[Email],
					[BranchCode],
					[BranchName],
					[Custodian],
					[CustomerType],
					[TradeAtCompany],
					[TradeByTelephone],
					[TradeOnline],
					[ExistedAccount]
				FROM
					[dbo].[OpenCustAccount]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="OpenCustAccount_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the OpenCustAccount table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OpenID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OpenID]'
				SET @SQL = @SQL + ', [RegisterDate]'
				SET @SQL = @SQL + ', [CardID]'
				SET @SQL = @SQL + ', [CardIssue]'
				SET @SQL = @SQL + ', [PlaceIssue]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Birthday]'
				SET @SQL = @SQL + ', [Sex]'
				SET @SQL = @SQL + ', [Occupation]'
				SET @SQL = @SQL + ', [Nationality]'
				SET @SQL = @SQL + ', [Address1]'
				SET @SQL = @SQL + ', [Telephone1]'
				SET @SQL = @SQL + ', [Fax1]'
				SET @SQL = @SQL + ', [Address2]'
				SET @SQL = @SQL + ', [Telephone2]'
				SET @SQL = @SQL + ', [Fax2]'
				SET @SQL = @SQL + ', [Address3]'
				SET @SQL = @SQL + ', [Telephone3]'
				SET @SQL = @SQL + ', [Fax3]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [BranchCode]'
				SET @SQL = @SQL + ', [BranchName]'
				SET @SQL = @SQL + ', [Custodian]'
				SET @SQL = @SQL + ', [CustomerType]'
				SET @SQL = @SQL + ', [TradeAtCompany]'
				SET @SQL = @SQL + ', [TradeByTelephone]'
				SET @SQL = @SQL + ', [TradeOnline]'
				SET @SQL = @SQL + ', [ExistedAccount]'
				SET @SQL = @SQL + ' FROM [dbo].[OpenCustAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OpenID],'
				SET @SQL = @SQL + ' [RegisterDate],'
				SET @SQL = @SQL + ' [CardID],'
				SET @SQL = @SQL + ' [CardIssue],'
				SET @SQL = @SQL + ' [PlaceIssue],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Birthday],'
				SET @SQL = @SQL + ' [Sex],'
				SET @SQL = @SQL + ' [Occupation],'
				SET @SQL = @SQL + ' [Nationality],'
				SET @SQL = @SQL + ' [Address1],'
				SET @SQL = @SQL + ' [Telephone1],'
				SET @SQL = @SQL + ' [Fax1],'
				SET @SQL = @SQL + ' [Address2],'
				SET @SQL = @SQL + ' [Telephone2],'
				SET @SQL = @SQL + ' [Fax2],'
				SET @SQL = @SQL + ' [Address3],'
				SET @SQL = @SQL + ' [Telephone3],'
				SET @SQL = @SQL + ' [Fax3],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [BranchCode],'
				SET @SQL = @SQL + ' [BranchName],'
				SET @SQL = @SQL + ' [Custodian],'
				SET @SQL = @SQL + ' [CustomerType],'
				SET @SQL = @SQL + ' [TradeAtCompany],'
				SET @SQL = @SQL + ' [TradeByTelephone],'
				SET @SQL = @SQL + ' [TradeOnline],'
				SET @SQL = @SQL + ' [ExistedAccount]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[OpenCustAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="OpenCustAccount_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the OpenCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OpenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CardId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CardIssue" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PlaceIssue" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Birthday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sex" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Occupation" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Nationality" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Telephone1" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Fax1" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Address2" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Telephone2" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Fax2" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Address3" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Telephone3" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Fax3" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@BranchCode" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@BranchName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Custodian" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomerType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@TradeAtCompany" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeByTelephone" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeOnline" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ExistedAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[OpenCustAccount]
					(
					[OpenID]
					,[RegisterDate]
					,[CardID]
					,[CardIssue]
					,[PlaceIssue]
					,[Name]
					,[Birthday]
					,[Sex]
					,[Occupation]
					,[Nationality]
					,[Address1]
					,[Telephone1]
					,[Fax1]
					,[Address2]
					,[Telephone2]
					,[Fax2]
					,[Address3]
					,[Telephone3]
					,[Fax3]
					,[Email]
					,[BranchCode]
					,[BranchName]
					,[Custodian]
					,[CustomerType]
					,[TradeAtCompany]
					,[TradeByTelephone]
					,[TradeOnline]
					,[ExistedAccount]
					)
				VALUES
					(
					@OpenId
					,@RegisterDate
					,@CardId
					,@CardIssue
					,@PlaceIssue
					,@Name
					,@Birthday
					,@Sex
					,@Occupation
					,@Nationality
					,@Address1
					,@Telephone1
					,@Fax1
					,@Address2
					,@Telephone2
					,@Fax2
					,@Address3
					,@Telephone3
					,@Fax3
					,@Email
					,@BranchCode
					,@BranchName
					,@Custodian
					,@CustomerType
					,@TradeAtCompany
					,@TradeByTelephone
					,@TradeOnline
					,@ExistedAccount
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="OpenCustAccount_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the OpenCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OpenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalOpenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CardId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CardIssue" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PlaceIssue" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Birthday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sex" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Occupation" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Nationality" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Telephone1" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Fax1" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Address2" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Telephone2" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Fax2" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Address3" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Telephone3" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Fax3" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@BranchCode" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@BranchName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Custodian" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomerType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@TradeAtCompany" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeByTelephone" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeOnline" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ExistedAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[OpenCustAccount]
				SET
					[OpenID] = @OpenId
					,[RegisterDate] = @RegisterDate
					,[CardID] = @CardId
					,[CardIssue] = @CardIssue
					,[PlaceIssue] = @PlaceIssue
					,[Name] = @Name
					,[Birthday] = @Birthday
					,[Sex] = @Sex
					,[Occupation] = @Occupation
					,[Nationality] = @Nationality
					,[Address1] = @Address1
					,[Telephone1] = @Telephone1
					,[Fax1] = @Fax1
					,[Address2] = @Address2
					,[Telephone2] = @Telephone2
					,[Fax2] = @Fax2
					,[Address3] = @Address3
					,[Telephone3] = @Telephone3
					,[Fax3] = @Fax3
					,[Email] = @Email
					,[BranchCode] = @BranchCode
					,[BranchName] = @BranchName
					,[Custodian] = @Custodian
					,[CustomerType] = @CustomerType
					,[TradeAtCompany] = @TradeAtCompany
					,[TradeByTelephone] = @TradeByTelephone
					,[TradeOnline] = @TradeOnline
					,[ExistedAccount] = @ExistedAccount
				WHERE
[OpenID] = @OriginalOpenId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="OpenCustAccount_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the OpenCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OpenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[OpenCustAccount] WITH (ROWLOCK) 
				WHERE
					[OpenID] = @OpenId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="OpenCustAccount_GetByOpenId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the OpenCustAccount table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OpenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OpenID],
					[RegisterDate],
					[CardID],
					[CardIssue],
					[PlaceIssue],
					[Name],
					[Birthday],
					[Sex],
					[Occupation],
					[Nationality],
					[Address1],
					[Telephone1],
					[Fax1],
					[Address2],
					[Telephone2],
					[Fax2],
					[Address3],
					[Telephone3],
					[Fax3],
					[Email],
					[BranchCode],
					[BranchName],
					[Custodian],
					[CustomerType],
					[TradeAtCompany],
					[TradeByTelephone],
					[TradeOnline],
					[ExistedAccount]
				FROM
					[dbo].[OpenCustAccount]
				WHERE
					[OpenID] = @OpenId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="OpenCustAccount_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the OpenCustAccount table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CardId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@CardIssue" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PlaceIssue" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Birthday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sex" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Occupation" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Nationality" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Telephone1" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Fax1" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Address2" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Telephone2" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Fax2" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Address3" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Telephone3" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Fax3" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@BranchCode" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@BranchName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Custodian" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomerType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@TradeAtCompany" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeByTelephone" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeOnline" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExistedAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OpenID]
	, [RegisterDate]
	, [CardID]
	, [CardIssue]
	, [PlaceIssue]
	, [Name]
	, [Birthday]
	, [Sex]
	, [Occupation]
	, [Nationality]
	, [Address1]
	, [Telephone1]
	, [Fax1]
	, [Address2]
	, [Telephone2]
	, [Fax2]
	, [Address3]
	, [Telephone3]
	, [Fax3]
	, [Email]
	, [BranchCode]
	, [BranchName]
	, [Custodian]
	, [CustomerType]
	, [TradeAtCompany]
	, [TradeByTelephone]
	, [TradeOnline]
	, [ExistedAccount]
    FROM
	[dbo].[OpenCustAccount]
    WHERE 
	 ([OpenID] = @OpenId OR @OpenId IS NULL)
	AND ([RegisterDate] = @RegisterDate OR @RegisterDate IS NULL)
	AND ([CardID] = @CardId OR @CardId IS NULL)
	AND ([CardIssue] = @CardIssue OR @CardIssue IS NULL)
	AND ([PlaceIssue] = @PlaceIssue OR @PlaceIssue IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([Birthday] = @Birthday OR @Birthday IS NULL)
	AND ([Sex] = @Sex OR @Sex IS NULL)
	AND ([Occupation] = @Occupation OR @Occupation IS NULL)
	AND ([Nationality] = @Nationality OR @Nationality IS NULL)
	AND ([Address1] = @Address1 OR @Address1 IS NULL)
	AND ([Telephone1] = @Telephone1 OR @Telephone1 IS NULL)
	AND ([Fax1] = @Fax1 OR @Fax1 IS NULL)
	AND ([Address2] = @Address2 OR @Address2 IS NULL)
	AND ([Telephone2] = @Telephone2 OR @Telephone2 IS NULL)
	AND ([Fax2] = @Fax2 OR @Fax2 IS NULL)
	AND ([Address3] = @Address3 OR @Address3 IS NULL)
	AND ([Telephone3] = @Telephone3 OR @Telephone3 IS NULL)
	AND ([Fax3] = @Fax3 OR @Fax3 IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([BranchCode] = @BranchCode OR @BranchCode IS NULL)
	AND ([BranchName] = @BranchName OR @BranchName IS NULL)
	AND ([Custodian] = @Custodian OR @Custodian IS NULL)
	AND ([CustomerType] = @CustomerType OR @CustomerType IS NULL)
	AND ([TradeAtCompany] = @TradeAtCompany OR @TradeAtCompany IS NULL)
	AND ([TradeByTelephone] = @TradeByTelephone OR @TradeByTelephone IS NULL)
	AND ([TradeOnline] = @TradeOnline OR @TradeOnline IS NULL)
	AND ([ExistedAccount] = @ExistedAccount OR @ExistedAccount IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OpenID]
	, [RegisterDate]
	, [CardID]
	, [CardIssue]
	, [PlaceIssue]
	, [Name]
	, [Birthday]
	, [Sex]
	, [Occupation]
	, [Nationality]
	, [Address1]
	, [Telephone1]
	, [Fax1]
	, [Address2]
	, [Telephone2]
	, [Fax2]
	, [Address3]
	, [Telephone3]
	, [Fax3]
	, [Email]
	, [BranchCode]
	, [BranchName]
	, [Custodian]
	, [CustomerType]
	, [TradeAtCompany]
	, [TradeByTelephone]
	, [TradeOnline]
	, [ExistedAccount]
    FROM
	[dbo].[OpenCustAccount]
    WHERE 
	 ([OpenID] = @OpenId AND @OpenId is not null)
	OR ([RegisterDate] = @RegisterDate AND @RegisterDate is not null)
	OR ([CardID] = @CardId AND @CardId is not null)
	OR ([CardIssue] = @CardIssue AND @CardIssue is not null)
	OR ([PlaceIssue] = @PlaceIssue AND @PlaceIssue is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Birthday] = @Birthday AND @Birthday is not null)
	OR ([Sex] = @Sex AND @Sex is not null)
	OR ([Occupation] = @Occupation AND @Occupation is not null)
	OR ([Nationality] = @Nationality AND @Nationality is not null)
	OR ([Address1] = @Address1 AND @Address1 is not null)
	OR ([Telephone1] = @Telephone1 AND @Telephone1 is not null)
	OR ([Fax1] = @Fax1 AND @Fax1 is not null)
	OR ([Address2] = @Address2 AND @Address2 is not null)
	OR ([Telephone2] = @Telephone2 AND @Telephone2 is not null)
	OR ([Fax2] = @Fax2 AND @Fax2 is not null)
	OR ([Address3] = @Address3 AND @Address3 is not null)
	OR ([Telephone3] = @Telephone3 AND @Telephone3 is not null)
	OR ([Fax3] = @Fax3 AND @Fax3 is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([BranchCode] = @BranchCode AND @BranchCode is not null)
	OR ([BranchName] = @BranchName AND @BranchName is not null)
	OR ([Custodian] = @Custodian AND @Custodian is not null)
	OR ([CustomerType] = @CustomerType AND @CustomerType is not null)
	OR ([TradeAtCompany] = @TradeAtCompany AND @TradeAtCompany is not null)
	OR ([TradeByTelephone] = @TradeByTelephone AND @TradeByTelephone is not null)
	OR ([TradeOnline] = @TradeOnline AND @TradeOnline is not null)
	OR ([ExistedAccount] = @ExistedAccount AND @ExistedAccount is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="OpenCustAccount_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the OpenCustAccount table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [OpenID]
					, [RegisterDate]
					, [CardID]
					, [CardIssue]
					, [PlaceIssue]
					, [Name]
					, [Birthday]
					, [Sex]
					, [Occupation]
					, [Nationality]
					, [Address1]
					, [Telephone1]
					, [Fax1]
					, [Address2]
					, [Telephone2]
					, [Fax2]
					, [Address3]
					, [Telephone3]
					, [Fax3]
					, [Email]
					, [BranchCode]
					, [BranchName]
					, [Custodian]
					, [CustomerType]
					, [TradeAtCompany]
					, [TradeByTelephone]
					, [TradeOnline]
					, [ExistedAccount]
					FROM [dbo].[OpenCustAccount] {0}
				)
				SELECT
				       [OpenID],
				       [RegisterDate],
				       [CardID],
				       [CardIssue],
				       [PlaceIssue],
				       [Name],
				       [Birthday],
				       [Sex],
				       [Occupation],
				       [Nationality],
				       [Address1],
				       [Telephone1],
				       [Fax1],
				       [Address2],
				       [Telephone2],
				       [Fax2],
				       [Address3],
				       [Telephone3],
				       [Fax3],
				       [Email],
				       [BranchCode],
				       [BranchName],
				       [Custodian],
				       [CustomerType],
				       [TradeAtCompany],
				       [TradeByTelephone],
				       [TradeOnline],
				       [ExistedAccount]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[OpenCustAccount] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Research_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the Research table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ResearchID],
					[UploadedDate],
					[Tittle],
					[Path],
					[Downloads],
					[Actived],
					[UploadedUser]
				FROM
					[dbo].[Research]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Research_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the Research table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ResearchID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ResearchID]'
				SET @SQL = @SQL + ', [UploadedDate]'
				SET @SQL = @SQL + ', [Tittle]'
				SET @SQL = @SQL + ', [Path]'
				SET @SQL = @SQL + ', [Downloads]'
				SET @SQL = @SQL + ', [Actived]'
				SET @SQL = @SQL + ', [UploadedUser]'
				SET @SQL = @SQL + ' FROM [dbo].[Research]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ResearchID],'
				SET @SQL = @SQL + ' [UploadedDate],'
				SET @SQL = @SQL + ' [Tittle],'
				SET @SQL = @SQL + ' [Path],'
				SET @SQL = @SQL + ' [Downloads],'
				SET @SQL = @SQL + ' [Actived],'
				SET @SQL = @SQL + ' [UploadedUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Research]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Research_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the Research table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResearchId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UploadedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Tittle" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Path" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Downloads" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UploadedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Research]
					(
					[ResearchID]
					,[UploadedDate]
					,[Tittle]
					,[Path]
					,[Downloads]
					,[Actived]
					,[UploadedUser]
					)
				VALUES
					(
					@ResearchId
					,@UploadedDate
					,@Tittle
					,@Path
					,@Downloads
					,@Actived
					,@UploadedUser
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Research_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the Research table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResearchId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalResearchId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UploadedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Tittle" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Path" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Downloads" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UploadedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Research]
				SET
					[ResearchID] = @ResearchId
					,[UploadedDate] = @UploadedDate
					,[Tittle] = @Tittle
					,[Path] = @Path
					,[Downloads] = @Downloads
					,[Actived] = @Actived
					,[UploadedUser] = @UploadedUser
				WHERE
[ResearchID] = @OriginalResearchId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Research_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the Research table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResearchId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Research] WITH (ROWLOCK) 
				WHERE
					[ResearchID] = @ResearchId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Research_GetByResearchId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the Research table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResearchId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ResearchID],
					[UploadedDate],
					[Tittle],
					[Path],
					[Downloads],
					[Actived],
					[UploadedUser]
				FROM
					[dbo].[Research]
				WHERE
					[ResearchID] = @ResearchId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Research_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the Research table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResearchId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UploadedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Tittle" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Path" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Downloads" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UploadedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ResearchID]
	, [UploadedDate]
	, [Tittle]
	, [Path]
	, [Downloads]
	, [Actived]
	, [UploadedUser]
    FROM
	[dbo].[Research]
    WHERE 
	 ([ResearchID] = @ResearchId OR @ResearchId IS NULL)
	AND ([UploadedDate] = @UploadedDate OR @UploadedDate IS NULL)
	AND ([Path] = @Path OR @Path IS NULL)
	AND ([Downloads] = @Downloads OR @Downloads IS NULL)
	AND ([Actived] = @Actived OR @Actived IS NULL)
	AND ([UploadedUser] = @UploadedUser OR @UploadedUser IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ResearchID]
	, [UploadedDate]
	, [Tittle]
	, [Path]
	, [Downloads]
	, [Actived]
	, [UploadedUser]
    FROM
	[dbo].[Research]
    WHERE 
	 ([ResearchID] = @ResearchId AND @ResearchId is not null)
	OR ([UploadedDate] = @UploadedDate AND @UploadedDate is not null)
	OR ([Path] = @Path AND @Path is not null)
	OR ([Downloads] = @Downloads AND @Downloads is not null)
	OR ([Actived] = @Actived AND @Actived is not null)
	OR ([UploadedUser] = @UploadedUser AND @UploadedUser is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Research_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the Research table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [ResearchID]
					, [UploadedDate]
					, [Tittle]
					, [Path]
					, [Downloads]
					, [Actived]
					, [UploadedUser]
					FROM [dbo].[Research] {0}
				)
				SELECT
				       [ResearchID],
				       [UploadedDate],
				       [Tittle],
				       [Path],
				       [Downloads],
				       [Actived],
				       [UploadedUser]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Research] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SubCustAccount_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the SubCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SubCustAccountID],
					[Name],
					[Actived],
					[LockAccountReason],
					[MainCustAccountID],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[SubCustAccount]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SubCustAccount_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the SubCustAccount table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SubCustAccountID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SubCustAccountID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Actived]'
				SET @SQL = @SQL + ', [LockAccountReason]'
				SET @SQL = @SQL + ', [MainCustAccountID]'
				SET @SQL = @SQL + ', [CreatedDate]'
				SET @SQL = @SQL + ', [CreatedUser]'
				SET @SQL = @SQL + ', [UpdatedDate]'
				SET @SQL = @SQL + ', [UpdatedUser]'
				SET @SQL = @SQL + ' FROM [dbo].[SubCustAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SubCustAccountID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Actived],'
				SET @SQL = @SQL + ' [LockAccountReason],'
				SET @SQL = @SQL + ' [MainCustAccountID],'
				SET @SQL = @SQL + ' [CreatedDate],'
				SET @SQL = @SQL + ' [CreatedUser],'
				SET @SQL = @SQL + ' [UpdatedDate],'
				SET @SQL = @SQL + ' [UpdatedUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SubCustAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SubCustAccount_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the SubCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LockAccountReason" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SubCustAccount]
					(
					[SubCustAccountID]
					,[Name]
					,[Actived]
					,[LockAccountReason]
					,[MainCustAccountID]
					,[CreatedDate]
					,[CreatedUser]
					,[UpdatedDate]
					,[UpdatedUser]
					)
				VALUES
					(
					@SubCustAccountId
					,@Name
					,@Actived
					,@LockAccountReason
					,@MainCustAccountId
					,@CreatedDate
					,@CreatedUser
					,@UpdatedDate
					,@UpdatedUser
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccount_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the SubCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalSubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LockAccountReason" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SubCustAccount]
				SET
					[SubCustAccountID] = @SubCustAccountId
					,[Name] = @Name
					,[Actived] = @Actived
					,[LockAccountReason] = @LockAccountReason
					,[MainCustAccountID] = @MainCustAccountId
					,[CreatedDate] = @CreatedDate
					,[CreatedUser] = @CreatedUser
					,[UpdatedDate] = @UpdatedDate
					,[UpdatedUser] = @UpdatedUser
				WHERE
[SubCustAccountID] = @OriginalSubCustAccountId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccount_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the SubCustAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SubCustAccount] WITH (ROWLOCK) 
				WHERE
					[SubCustAccountID] = @SubCustAccountId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccount_GetByMainCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the SubCustAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SubCustAccountID],
					[Name],
					[Actived],
					[LockAccountReason],
					[MainCustAccountID],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[SubCustAccount]
				WHERE
					[MainCustAccountID] = @MainCustAccountId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccount_GetBySubCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the SubCustAccount table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SubCustAccountID],
					[Name],
					[Actived],
					[LockAccountReason],
					[MainCustAccountID],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[SubCustAccount]
				WHERE
					[SubCustAccountID] = @SubCustAccountId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SubCustAccount_GetByCustServicesPermissionIdFromSubCustAccountPermission" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[SubCustAccount].[SubCustAccountID]
       ,dbo.[SubCustAccount].[Name]
       ,dbo.[SubCustAccount].[Actived]
       ,dbo.[SubCustAccount].[LockAccountReason]
       ,dbo.[SubCustAccount].[MainCustAccountID]
       ,dbo.[SubCustAccount].[CreatedDate]
       ,dbo.[SubCustAccount].[CreatedUser]
       ,dbo.[SubCustAccount].[UpdatedDate]
       ,dbo.[SubCustAccount].[UpdatedUser]
  FROM dbo.[SubCustAccount]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[SubCustAccountPermission] 
                WHERE dbo.[SubCustAccountPermission].[CustServicesPermissionID] = @CustServicesPermissionId
                  AND dbo.[SubCustAccountPermission].[SubCustAccountID] = dbo.[SubCustAccount].[SubCustAccountID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccount_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the SubCustAccount table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Actived" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LockAccountReason" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SubCustAccountID]
	, [Name]
	, [Actived]
	, [LockAccountReason]
	, [MainCustAccountID]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedDate]
	, [UpdatedUser]
    FROM
	[dbo].[SubCustAccount]
    WHERE 
	 ([SubCustAccountID] = @SubCustAccountId OR @SubCustAccountId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([Actived] = @Actived OR @Actived IS NULL)
	AND ([LockAccountReason] = @LockAccountReason OR @LockAccountReason IS NULL)
	AND ([MainCustAccountID] = @MainCustAccountId OR @MainCustAccountId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([CreatedUser] = @CreatedUser OR @CreatedUser IS NULL)
	AND ([UpdatedDate] = @UpdatedDate OR @UpdatedDate IS NULL)
	AND ([UpdatedUser] = @UpdatedUser OR @UpdatedUser IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SubCustAccountID]
	, [Name]
	, [Actived]
	, [LockAccountReason]
	, [MainCustAccountID]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedDate]
	, [UpdatedUser]
    FROM
	[dbo].[SubCustAccount]
    WHERE 
	 ([SubCustAccountID] = @SubCustAccountId AND @SubCustAccountId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Actived] = @Actived AND @Actived is not null)
	OR ([LockAccountReason] = @LockAccountReason AND @LockAccountReason is not null)
	OR ([MainCustAccountID] = @MainCustAccountId AND @MainCustAccountId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([CreatedUser] = @CreatedUser AND @CreatedUser is not null)
	OR ([UpdatedDate] = @UpdatedDate AND @UpdatedDate is not null)
	OR ([UpdatedUser] = @UpdatedUser AND @UpdatedUser is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SubCustAccount_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the SubCustAccount table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [SubCustAccountID]
					, [Name]
					, [Actived]
					, [LockAccountReason]
					, [MainCustAccountID]
					, [CreatedDate]
					, [CreatedUser]
					, [UpdatedDate]
					, [UpdatedUser]
					FROM [dbo].[SubCustAccount] {0}
				)
				SELECT
				       [SubCustAccountID],
				       [Name],
				       [Actived],
				       [LockAccountReason],
				       [MainCustAccountID],
				       [CreatedDate],
				       [CreatedUser],
				       [UpdatedDate],
				       [UpdatedUser]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SubCustAccount] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Holidays_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the Holidays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Holiday],
					[Note]
				FROM
					[dbo].[Holidays]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Holidays_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the Holidays table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[Holiday]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [Holiday]'
				SET @SQL = @SQL + ', [Note]'
				SET @SQL = @SQL + ' FROM [dbo].[Holidays]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [Holiday],'
				SET @SQL = @SQL + ' [Note]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Holidays]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Holidays_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the Holidays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Holiday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Note" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Holidays]
					(
					[Holiday]
					,[Note]
					)
				VALUES
					(
					@Holiday
					,@Note
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Holidays_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the Holidays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Holiday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@OriginalHoliday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Note" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Holidays]
				SET
					[Holiday] = @Holiday
					,[Note] = @Note
				WHERE
[Holiday] = @OriginalHoliday 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Holidays_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the Holidays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Holiday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Holidays] WITH (ROWLOCK) 
				WHERE
					[Holiday] = @Holiday
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Holidays_GetByHoliday" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the Holidays table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Holiday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Holiday],
					[Note]
				FROM
					[dbo].[Holidays]
				WHERE
					[Holiday] = @Holiday
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Holidays_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the Holidays table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Holiday" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Note" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Holiday]
	, [Note]
    FROM
	[dbo].[Holidays]
    WHERE 
	 ([Holiday] = @Holiday OR @Holiday IS NULL)
	AND ([Note] = @Note OR @Note IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Holiday]
	, [Note]
    FROM
	[dbo].[Holidays]
    WHERE 
	 ([Holiday] = @Holiday AND @Holiday is not null)
	OR ([Note] = @Note AND @Note is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Holidays_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the Holidays table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [Holiday]
					, [Note]
					FROM [dbo].[Holidays] {0}
				)
				SELECT
				       [Holiday],
				       [Note]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Holidays] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustServicesPermission_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the CustServicesPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CustServicesPermissionID],
					[PermissionName]
				FROM
					[dbo].[CustServicesPermission]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustServicesPermission_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the CustServicesPermission table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustServicesPermissionID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustServicesPermissionID]'
				SET @SQL = @SQL + ', [PermissionName]'
				SET @SQL = @SQL + ' FROM [dbo].[CustServicesPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustServicesPermissionID],'
				SET @SQL = @SQL + ' [PermissionName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustServicesPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CustServicesPermission_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the CustServicesPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PermissionName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CustServicesPermission]
					(
					[CustServicesPermissionID]
					,[PermissionName]
					)
				VALUES
					(
					@CustServicesPermissionId
					,@PermissionName
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustServicesPermission_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the CustServicesPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PermissionName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CustServicesPermission]
				SET
					[CustServicesPermissionID] = @CustServicesPermissionId
					,[PermissionName] = @PermissionName
				WHERE
[CustServicesPermissionID] = @OriginalCustServicesPermissionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustServicesPermission_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the CustServicesPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CustServicesPermission] WITH (ROWLOCK) 
				WHERE
					[CustServicesPermissionID] = @CustServicesPermissionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustServicesPermission_GetByCustServicesPermissionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the CustServicesPermission table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CustServicesPermissionID],
					[PermissionName]
				FROM
					[dbo].[CustServicesPermission]
				WHERE
					[CustServicesPermissionID] = @CustServicesPermissionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CustServicesPermission_GetBySubCustAccountIdFromSubCustAccountPermission" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[CustServicesPermission].[CustServicesPermissionID]
       ,dbo.[CustServicesPermission].[PermissionName]
  FROM dbo.[CustServicesPermission]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[SubCustAccountPermission] 
                WHERE dbo.[SubCustAccountPermission].[SubCustAccountID] = @SubCustAccountId
                  AND dbo.[SubCustAccountPermission].[CustServicesPermissionID] = dbo.[CustServicesPermission].[CustServicesPermissionID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="CustServicesPermission_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the CustServicesPermission table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PermissionName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustServicesPermissionID]
	, [PermissionName]
    FROM
	[dbo].[CustServicesPermission]
    WHERE 
	 ([CustServicesPermissionID] = @CustServicesPermissionId OR @CustServicesPermissionId IS NULL)
	AND ([PermissionName] = @PermissionName OR @PermissionName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustServicesPermissionID]
	, [PermissionName]
    FROM
	[dbo].[CustServicesPermission]
    WHERE 
	 ([CustServicesPermissionID] = @CustServicesPermissionId AND @CustServicesPermissionId is not null)
	OR ([PermissionName] = @PermissionName AND @PermissionName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CustServicesPermission_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the CustServicesPermission table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [CustServicesPermissionID]
					, [PermissionName]
					FROM [dbo].[CustServicesPermission] {0}
				)
				SELECT
				       [CustServicesPermissionID],
				       [PermissionName]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CustServicesPermission] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustomerActionHistory_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the CustomerActionHistory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ID],
					[BrokerID],
					[ActionTime],
					[MainCustAccountID],
					[SubCustAccountID],
					[ActionType],
					[Reason]
				FROM
					[dbo].[CustomerActionHistory]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustomerActionHistory_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the CustomerActionHistory table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ID]'
				SET @SQL = @SQL + ', [BrokerID]'
				SET @SQL = @SQL + ', [ActionTime]'
				SET @SQL = @SQL + ', [MainCustAccountID]'
				SET @SQL = @SQL + ', [SubCustAccountID]'
				SET @SQL = @SQL + ', [ActionType]'
				SET @SQL = @SQL + ', [Reason]'
				SET @SQL = @SQL + ' FROM [dbo].[CustomerActionHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ID],'
				SET @SQL = @SQL + ' [BrokerID],'
				SET @SQL = @SQL + ' [ActionTime],'
				SET @SQL = @SQL + ' [MainCustAccountID],'
				SET @SQL = @SQL + ' [SubCustAccountID],'
				SET @SQL = @SQL + ' [ActionType],'
				SET @SQL = @SQL + ' [Reason]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomerActionHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CustomerActionHistory_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the CustomerActionHistory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@ActionTime" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@ActionType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Reason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CustomerActionHistory]
					(
					[BrokerID]
					,[ActionTime]
					,[MainCustAccountID]
					,[SubCustAccountID]
					,[ActionType]
					,[Reason]
					)
				VALUES
					(
					@BrokerId
					,@ActionTime
					,@MainCustAccountId
					,@SubCustAccountId
					,@ActionType
					,@Reason
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomerActionHistory_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the CustomerActionHistory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@ActionTime" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@ActionType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Reason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CustomerActionHistory]
				SET
					[BrokerID] = @BrokerId
					,[ActionTime] = @ActionTime
					,[MainCustAccountID] = @MainCustAccountId
					,[SubCustAccountID] = @SubCustAccountId
					,[ActionType] = @ActionType
					,[Reason] = @Reason
				WHERE
[ID] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomerActionHistory_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the CustomerActionHistory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CustomerActionHistory] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomerActionHistory_GetByMainCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the CustomerActionHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ID],
					[BrokerID],
					[ActionTime],
					[MainCustAccountID],
					[SubCustAccountID],
					[ActionType],
					[Reason]
				FROM
					[dbo].[CustomerActionHistory]
				WHERE
					[MainCustAccountID] = @MainCustAccountId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomerActionHistory_GetBySubCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the CustomerActionHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ID],
					[BrokerID],
					[ActionTime],
					[MainCustAccountID],
					[SubCustAccountID],
					[ActionType],
					[Reason]
				FROM
					[dbo].[CustomerActionHistory]
				WHERE
					[SubCustAccountID] = @SubCustAccountId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomerActionHistory_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the CustomerActionHistory table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ID],
					[BrokerID],
					[ActionTime],
					[MainCustAccountID],
					[SubCustAccountID],
					[ActionType],
					[Reason]
				FROM
					[dbo].[CustomerActionHistory]
				WHERE
					[ID] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CustomerActionHistory_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the CustomerActionHistory table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@ActionTime" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MainCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@ActionType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Reason" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [BrokerID]
	, [ActionTime]
	, [MainCustAccountID]
	, [SubCustAccountID]
	, [ActionType]
	, [Reason]
    FROM
	[dbo].[CustomerActionHistory]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([BrokerID] = @BrokerId OR @BrokerId IS NULL)
	AND ([ActionTime] = @ActionTime OR @ActionTime IS NULL)
	AND ([MainCustAccountID] = @MainCustAccountId OR @MainCustAccountId IS NULL)
	AND ([SubCustAccountID] = @SubCustAccountId OR @SubCustAccountId IS NULL)
	AND ([ActionType] = @ActionType OR @ActionType IS NULL)
	AND ([Reason] = @Reason OR @Reason IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [BrokerID]
	, [ActionTime]
	, [MainCustAccountID]
	, [SubCustAccountID]
	, [ActionType]
	, [Reason]
    FROM
	[dbo].[CustomerActionHistory]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([BrokerID] = @BrokerId AND @BrokerId is not null)
	OR ([ActionTime] = @ActionTime AND @ActionTime is not null)
	OR ([MainCustAccountID] = @MainCustAccountId AND @MainCustAccountId is not null)
	OR ([SubCustAccountID] = @SubCustAccountId AND @SubCustAccountId is not null)
	OR ([ActionType] = @ActionType AND @ActionType is not null)
	OR ([Reason] = @Reason AND @Reason is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CustomerActionHistory_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the CustomerActionHistory table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [ID]
					, [BrokerID]
					, [ActionTime]
					, [MainCustAccountID]
					, [SubCustAccountID]
					, [ActionType]
					, [Reason]
					FROM [dbo].[CustomerActionHistory] {0}
				)
				SELECT
				       [ID],
				       [BrokerID],
				       [ActionTime],
				       [MainCustAccountID],
				       [SubCustAccountID],
				       [ActionType],
				       [Reason]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CustomerActionHistory] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SubCustAccountPermission_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the SubCustAccountPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SubCustAccountID],
					[CustServicesPermissionID]
				FROM
					[dbo].[SubCustAccountPermission]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SubCustAccountPermission_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the SubCustAccountPermission table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SubCustAccountID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SubCustAccountID]'
				SET @SQL = @SQL + ', [CustServicesPermissionID]'
				SET @SQL = @SQL + ' FROM [dbo].[SubCustAccountPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SubCustAccountID],'
				SET @SQL = @SQL + ' [CustServicesPermissionID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SubCustAccountPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SubCustAccountPermission_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the SubCustAccountPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SubCustAccountPermission]
					(
					[SubCustAccountID]
					,[CustServicesPermissionID]
					)
				VALUES
					(
					@SubCustAccountId
					,@CustServicesPermissionId
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccountPermission_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the SubCustAccountPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalSubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SubCustAccountPermission]
				SET
					[SubCustAccountID] = @SubCustAccountId
					,[CustServicesPermissionID] = @CustServicesPermissionId
				WHERE
[SubCustAccountID] = @OriginalSubCustAccountId 
AND [CustServicesPermissionID] = @OriginalCustServicesPermissionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccountPermission_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the SubCustAccountPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SubCustAccountPermission] WITH (ROWLOCK) 
				WHERE
					[SubCustAccountID] = @SubCustAccountId
					AND [CustServicesPermissionID] = @CustServicesPermissionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccountPermission_GetByCustServicesPermissionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the SubCustAccountPermission table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SubCustAccountID],
					[CustServicesPermissionID]
				FROM
					[dbo].[SubCustAccountPermission]
				WHERE
					[CustServicesPermissionID] = @CustServicesPermissionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccountPermission_GetBySubCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the SubCustAccountPermission table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SubCustAccountID],
					[CustServicesPermissionID]
				FROM
					[dbo].[SubCustAccountPermission]
				WHERE
					[SubCustAccountID] = @SubCustAccountId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SubCustAccountPermission_GetBySubCustAccountIdCustServicesPermissionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the SubCustAccountPermission table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SubCustAccountID],
					[CustServicesPermissionID]
				FROM
					[dbo].[SubCustAccountPermission]
				WHERE
					[SubCustAccountID] = @SubCustAccountId
					AND [CustServicesPermissionID] = @CustServicesPermissionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SubCustAccountPermission_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the SubCustAccountPermission table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@CustServicesPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SubCustAccountID]
	, [CustServicesPermissionID]
    FROM
	[dbo].[SubCustAccountPermission]
    WHERE 
	 ([SubCustAccountID] = @SubCustAccountId OR @SubCustAccountId IS NULL)
	AND ([CustServicesPermissionID] = @CustServicesPermissionId OR @CustServicesPermissionId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SubCustAccountID]
	, [CustServicesPermissionID]
    FROM
	[dbo].[SubCustAccountPermission]
    WHERE 
	 ([SubCustAccountID] = @SubCustAccountId AND @SubCustAccountId is not null)
	OR ([CustServicesPermissionID] = @CustServicesPermissionId AND @CustServicesPermissionId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SubCustAccountPermission_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the SubCustAccountPermission table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [SubCustAccountID]
					, [CustServicesPermissionID]
					FROM [dbo].[SubCustAccountPermission] {0}
				)
				SELECT
				       [SubCustAccountID],
				       [CustServicesPermissionID]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SubCustAccountPermission] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="BrokerAMPermission_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the BrokerAMPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PermissionID],
					[PermissionName]
				FROM
					[dbo].[BrokerAMPermission]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="BrokerAMPermission_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BrokerAMPermission table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PermissionID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PermissionID]'
				SET @SQL = @SQL + ', [PermissionName]'
				SET @SQL = @SQL + ' FROM [dbo].[BrokerAMPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PermissionID],'
				SET @SQL = @SQL + ' [PermissionName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[BrokerAMPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="BrokerAMPermission_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the BrokerAMPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PermissionName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[BrokerAMPermission]
					(
					[PermissionID]
					,[PermissionName]
					)
				VALUES
					(
					@PermissionId
					,@PermissionName
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAMPermission_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the BrokerAMPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PermissionName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[BrokerAMPermission]
				SET
					[PermissionID] = @PermissionId
					,[PermissionName] = @PermissionName
				WHERE
[PermissionID] = @OriginalPermissionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAMPermission_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the BrokerAMPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[BrokerAMPermission] WITH (ROWLOCK) 
				WHERE
					[PermissionID] = @PermissionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAMPermission_GetByPermissionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BrokerAMPermission table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PermissionID],
					[PermissionName]
				FROM
					[dbo].[BrokerAMPermission]
				WHERE
					[PermissionID] = @PermissionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="BrokerAMPermission_GetByBrokerIdFromBrokerPermission" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[BrokerAMPermission].[PermissionID]
       ,dbo.[BrokerAMPermission].[PermissionName]
  FROM dbo.[BrokerAMPermission]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[BrokerPermission] 
                WHERE dbo.[BrokerPermission].[BrokerID] = @BrokerId
                  AND dbo.[BrokerPermission].[PermissionID] = dbo.[BrokerAMPermission].[PermissionID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerAMPermission_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the BrokerAMPermission table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PermissionName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PermissionID]
	, [PermissionName]
    FROM
	[dbo].[BrokerAMPermission]
    WHERE 
	 ([PermissionID] = @PermissionId OR @PermissionId IS NULL)
	AND ([PermissionName] = @PermissionName OR @PermissionName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PermissionID]
	, [PermissionName]
    FROM
	[dbo].[BrokerAMPermission]
    WHERE 
	 ([PermissionID] = @PermissionId AND @PermissionId is not null)
	OR ([PermissionName] = @PermissionName AND @PermissionName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="BrokerAMPermission_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BrokerAMPermission table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [PermissionID]
					, [PermissionName]
					FROM [dbo].[BrokerAMPermission] {0}
				)
				SELECT
				       [PermissionID],
				       [PermissionName]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[BrokerAMPermission] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="BrokerPermission_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the BrokerPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[BrokerID],
					[PermissionID]
				FROM
					[dbo].[BrokerPermission]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="BrokerPermission_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BrokerPermission table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[BrokerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [BrokerID]'
				SET @SQL = @SQL + ', [PermissionID]'
				SET @SQL = @SQL + ' FROM [dbo].[BrokerPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [BrokerID],'
				SET @SQL = @SQL + ' [PermissionID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[BrokerPermission]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="BrokerPermission_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the BrokerPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[BrokerPermission]
					(
					[BrokerID]
					,[PermissionID]
					)
				VALUES
					(
					@BrokerId
					,@PermissionId
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerPermission_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the BrokerPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalBrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalPermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[BrokerPermission]
				SET
					[BrokerID] = @BrokerId
					,[PermissionID] = @PermissionId
				WHERE
[BrokerID] = @OriginalBrokerId 
AND [PermissionID] = @OriginalPermissionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerPermission_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the BrokerPermission table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[BrokerPermission] WITH (ROWLOCK) 
				WHERE
					[BrokerID] = @BrokerId
					AND [PermissionID] = @PermissionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerPermission_GetByBrokerId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BrokerPermission table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[BrokerID],
					[PermissionID]
				FROM
					[dbo].[BrokerPermission]
				WHERE
					[BrokerID] = @BrokerId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerPermission_GetByPermissionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BrokerPermission table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[BrokerID],
					[PermissionID]
				FROM
					[dbo].[BrokerPermission]
				WHERE
					[PermissionID] = @PermissionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BrokerPermission_GetByBrokerIdPermissionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BrokerPermission table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[BrokerID],
					[PermissionID]
				FROM
					[dbo].[BrokerPermission]
				WHERE
					[BrokerID] = @BrokerId
					AND [PermissionID] = @PermissionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="BrokerPermission_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the BrokerPermission table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@PermissionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [BrokerID]
	, [PermissionID]
    FROM
	[dbo].[BrokerPermission]
    WHERE 
	 ([BrokerID] = @BrokerId OR @BrokerId IS NULL)
	AND ([PermissionID] = @PermissionId OR @PermissionId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [BrokerID]
	, [PermissionID]
    FROM
	[dbo].[BrokerPermission]
    WHERE 
	 ([BrokerID] = @BrokerId AND @BrokerId is not null)
	OR ([PermissionID] = @PermissionId AND @PermissionId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="BrokerPermission_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BrokerPermission table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [BrokerID]
					, [PermissionID]
					FROM [dbo].[BrokerPermission] {0}
				)
				SELECT
				       [BrokerID],
				       [PermissionID]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[BrokerPermission] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="_BrokerPermission_DeleteByBrokerId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------
-- Date Created: Tuesday, October 19, 2010

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the BrokerPermission table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@BrokerId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				



				DELETE FROM [dbo].[BrokerPermission] WITH (ROWLOCK) 
				WHERE
					[BrokerID] = @BrokerId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="BuyRight_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the BuyRight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[SubCustAccountID],
					[SecSymbol],
					[Market],
					[ExecDate],
					[OwningVol],
					[AllowedVol],
					[RegisteredVol],
					[Right],
					[RateRight],
					[Price],
					[BeginDateToRegister],
					[EndDateToRegister],
					[BeginDateToTransfer],
					[EndDateToTransfer],
					[ReceivedDate],
					[Note],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[BuyRight]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="BuyRight_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BuyRight table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[Id]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [Id]'
				SET @SQL = @SQL + ', [SubCustAccountID]'
				SET @SQL = @SQL + ', [SecSymbol]'
				SET @SQL = @SQL + ', [Market]'
				SET @SQL = @SQL + ', [ExecDate]'
				SET @SQL = @SQL + ', [OwningVol]'
				SET @SQL = @SQL + ', [AllowedVol]'
				SET @SQL = @SQL + ', [RegisteredVol]'
				SET @SQL = @SQL + ', [Right]'
				SET @SQL = @SQL + ', [RateRight]'
				SET @SQL = @SQL + ', [Price]'
				SET @SQL = @SQL + ', [BeginDateToRegister]'
				SET @SQL = @SQL + ', [EndDateToRegister]'
				SET @SQL = @SQL + ', [BeginDateToTransfer]'
				SET @SQL = @SQL + ', [EndDateToTransfer]'
				SET @SQL = @SQL + ', [ReceivedDate]'
				SET @SQL = @SQL + ', [Note]'
				SET @SQL = @SQL + ', [CreatedDate]'
				SET @SQL = @SQL + ', [CreatedUser]'
				SET @SQL = @SQL + ', [UpdatedDate]'
				SET @SQL = @SQL + ', [UpdatedUser]'
				SET @SQL = @SQL + ' FROM [dbo].[BuyRight]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [Id],'
				SET @SQL = @SQL + ' [SubCustAccountID],'
				SET @SQL = @SQL + ' [SecSymbol],'
				SET @SQL = @SQL + ' [Market],'
				SET @SQL = @SQL + ' [ExecDate],'
				SET @SQL = @SQL + ' [OwningVol],'
				SET @SQL = @SQL + ' [AllowedVol],'
				SET @SQL = @SQL + ' [RegisteredVol],'
				SET @SQL = @SQL + ' [Right],'
				SET @SQL = @SQL + ' [RateRight],'
				SET @SQL = @SQL + ' [Price],'
				SET @SQL = @SQL + ' [BeginDateToRegister],'
				SET @SQL = @SQL + ' [EndDateToRegister],'
				SET @SQL = @SQL + ' [BeginDateToTransfer],'
				SET @SQL = @SQL + ' [EndDateToTransfer],'
				SET @SQL = @SQL + ' [ReceivedDate],'
				SET @SQL = @SQL + ' [Note],'
				SET @SQL = @SQL + ' [CreatedDate],'
				SET @SQL = @SQL + ' [CreatedUser],'
				SET @SQL = @SQL + ' [UpdatedDate],'
				SET @SQL = @SQL + ' [UpdatedUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[BuyRight]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="BuyRight_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the BuyRight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@SecSymbol" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@Market" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@ExecDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@OwningVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowedVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RegisteredVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Right" type="decimal" direction="Input" size="13" precision="20" scale="3" param="(20, 3)" nulldefault=""/>
				<parameter name="@RateRight" type="decimal" direction="Input" size="13" precision="20" scale="3" param="(20, 3)" nulldefault=""/>
				<parameter name="@Price" type="decimal" direction="Input" size="9" precision="10" scale="3" param="(10, 3)" nulldefault=""/>
				<parameter name="@BeginDateToRegister" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@EndDateToRegister" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@BeginDateToTransfer" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@EndDateToTransfer" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ReceivedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Note" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[BuyRight]
					(
					[SubCustAccountID]
					,[SecSymbol]
					,[Market]
					,[ExecDate]
					,[OwningVol]
					,[AllowedVol]
					,[RegisteredVol]
					,[Right]
					,[RateRight]
					,[Price]
					,[BeginDateToRegister]
					,[EndDateToRegister]
					,[BeginDateToTransfer]
					,[EndDateToTransfer]
					,[ReceivedDate]
					,[Note]
					,[CreatedDate]
					,[CreatedUser]
					,[UpdatedDate]
					,[UpdatedUser]
					)
				VALUES
					(
					@SubCustAccountId
					,@SecSymbol
					,@Market
					,@ExecDate
					,@OwningVol
					,@AllowedVol
					,@RegisteredVol
					,@Right
					,@RateRight
					,@Price
					,@BeginDateToRegister
					,@EndDateToRegister
					,@BeginDateToTransfer
					,@EndDateToTransfer
					,@ReceivedDate
					,@Note
					,@CreatedDate
					,@CreatedUser
					,@UpdatedDate
					,@UpdatedUser
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BuyRight_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the BuyRight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@SecSymbol" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@Market" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@ExecDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@OwningVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowedVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RegisteredVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Right" type="decimal" direction="Input" size="13" precision="20" scale="3" param="(20, 3)" nulldefault=""/>
				<parameter name="@RateRight" type="decimal" direction="Input" size="13" precision="20" scale="3" param="(20, 3)" nulldefault=""/>
				<parameter name="@Price" type="decimal" direction="Input" size="9" precision="10" scale="3" param="(10, 3)" nulldefault=""/>
				<parameter name="@BeginDateToRegister" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@EndDateToRegister" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@BeginDateToTransfer" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@EndDateToTransfer" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ReceivedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Note" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[BuyRight]
				SET
					[SubCustAccountID] = @SubCustAccountId
					,[SecSymbol] = @SecSymbol
					,[Market] = @Market
					,[ExecDate] = @ExecDate
					,[OwningVol] = @OwningVol
					,[AllowedVol] = @AllowedVol
					,[RegisteredVol] = @RegisteredVol
					,[Right] = @Right
					,[RateRight] = @RateRight
					,[Price] = @Price
					,[BeginDateToRegister] = @BeginDateToRegister
					,[EndDateToRegister] = @EndDateToRegister
					,[BeginDateToTransfer] = @BeginDateToTransfer
					,[EndDateToTransfer] = @EndDateToTransfer
					,[ReceivedDate] = @ReceivedDate
					,[Note] = @Note
					,[CreatedDate] = @CreatedDate
					,[CreatedUser] = @CreatedUser
					,[UpdatedDate] = @UpdatedDate
					,[UpdatedUser] = @UpdatedUser
				WHERE
[Id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BuyRight_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the BuyRight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[BuyRight] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BuyRight_GetBySubCustAccountId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BuyRight table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[Id],
					[SubCustAccountID],
					[SecSymbol],
					[Market],
					[ExecDate],
					[OwningVol],
					[AllowedVol],
					[RegisteredVol],
					[Right],
					[RateRight],
					[Price],
					[BeginDateToRegister],
					[EndDateToRegister],
					[BeginDateToTransfer],
					[EndDateToTransfer],
					[ReceivedDate],
					[Note],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[BuyRight]
				WHERE
					[SubCustAccountID] = @SubCustAccountId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="BuyRight_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the BuyRight table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[SubCustAccountID],
					[SecSymbol],
					[Market],
					[ExecDate],
					[OwningVol],
					[AllowedVol],
					[RegisteredVol],
					[Right],
					[RateRight],
					[Price],
					[BeginDateToRegister],
					[EndDateToRegister],
					[BeginDateToTransfer],
					[EndDateToTransfer],
					[ReceivedDate],
					[Note],
					[CreatedDate],
					[CreatedUser],
					[UpdatedDate],
					[UpdatedUser]
				FROM
					[dbo].[BuyRight]
				WHERE
					[Id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="BuyRight_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the BuyRight table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SubCustAccountId" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@SecSymbol" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@Market" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@ExecDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@OwningVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowedVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@RegisteredVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Right" type="decimal" direction="Input" size="13" precision="20" scale="3" param="(20, 3)" nulldefault="null"/>
				<parameter name="@RateRight" type="decimal" direction="Input" size="13" precision="20" scale="3" param="(20, 3)" nulldefault="null"/>
				<parameter name="@Price" type="decimal" direction="Input" size="9" precision="10" scale="3" param="(10, 3)" nulldefault="null"/>
				<parameter name="@BeginDateToRegister" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@EndDateToRegister" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@BeginDateToTransfer" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@EndDateToTransfer" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ReceivedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Note" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UpdatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdatedUser" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Id]
	, [SubCustAccountID]
	, [SecSymbol]
	, [Market]
	, [ExecDate]
	, [OwningVol]
	, [AllowedVol]
	, [RegisteredVol]
	, [Right]
	, [RateRight]
	, [Price]
	, [BeginDateToRegister]
	, [EndDateToRegister]
	, [BeginDateToTransfer]
	, [EndDateToTransfer]
	, [ReceivedDate]
	, [Note]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedDate]
	, [UpdatedUser]
    FROM
	[dbo].[BuyRight]
    WHERE 
	 ([Id] = @Id OR @Id IS NULL)
	AND ([SubCustAccountID] = @SubCustAccountId OR @SubCustAccountId IS NULL)
	AND ([SecSymbol] = @SecSymbol OR @SecSymbol IS NULL)
	AND ([Market] = @Market OR @Market IS NULL)
	AND ([ExecDate] = @ExecDate OR @ExecDate IS NULL)
	AND ([OwningVol] = @OwningVol OR @OwningVol IS NULL)
	AND ([AllowedVol] = @AllowedVol OR @AllowedVol IS NULL)
	AND ([RegisteredVol] = @RegisteredVol OR @RegisteredVol IS NULL)
	AND ([Right] = @Right OR @Right IS NULL)
	AND ([RateRight] = @RateRight OR @RateRight IS NULL)
	AND ([Price] = @Price OR @Price IS NULL)
	AND ([BeginDateToRegister] = @BeginDateToRegister OR @BeginDateToRegister IS NULL)
	AND ([EndDateToRegister] = @EndDateToRegister OR @EndDateToRegister IS NULL)
	AND ([BeginDateToTransfer] = @BeginDateToTransfer OR @BeginDateToTransfer IS NULL)
	AND ([EndDateToTransfer] = @EndDateToTransfer OR @EndDateToTransfer IS NULL)
	AND ([ReceivedDate] = @ReceivedDate OR @ReceivedDate IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([CreatedUser] = @CreatedUser OR @CreatedUser IS NULL)
	AND ([UpdatedDate] = @UpdatedDate OR @UpdatedDate IS NULL)
	AND ([UpdatedUser] = @UpdatedUser OR @UpdatedUser IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Id]
	, [SubCustAccountID]
	, [SecSymbol]
	, [Market]
	, [ExecDate]
	, [OwningVol]
	, [AllowedVol]
	, [RegisteredVol]
	, [Right]
	, [RateRight]
	, [Price]
	, [BeginDateToRegister]
	, [EndDateToRegister]
	, [BeginDateToTransfer]
	, [EndDateToTransfer]
	, [ReceivedDate]
	, [Note]
	, [CreatedDate]
	, [CreatedUser]
	, [UpdatedDate]
	, [UpdatedUser]
    FROM
	[dbo].[BuyRight]
    WHERE 
	 ([Id] = @Id AND @Id is not null)
	OR ([SubCustAccountID] = @SubCustAccountId AND @SubCustAccountId is not null)
	OR ([SecSymbol] = @SecSymbol AND @SecSymbol is not null)
	OR ([Market] = @Market AND @Market is not null)
	OR ([ExecDate] = @ExecDate AND @ExecDate is not null)
	OR ([OwningVol] = @OwningVol AND @OwningVol is not null)
	OR ([AllowedVol] = @AllowedVol AND @AllowedVol is not null)
	OR ([RegisteredVol] = @RegisteredVol AND @RegisteredVol is not null)
	OR ([Right] = @Right AND @Right is not null)
	OR ([RateRight] = @RateRight AND @RateRight is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([BeginDateToRegister] = @BeginDateToRegister AND @BeginDateToRegister is not null)
	OR ([EndDateToRegister] = @EndDateToRegister AND @EndDateToRegister is not null)
	OR ([BeginDateToTransfer] = @BeginDateToTransfer AND @BeginDateToTransfer is not null)
	OR ([EndDateToTransfer] = @EndDateToTransfer AND @EndDateToTransfer is not null)
	OR ([ReceivedDate] = @ReceivedDate AND @ReceivedDate is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([CreatedUser] = @CreatedUser AND @CreatedUser is not null)
	OR ([UpdatedDate] = @UpdatedDate AND @UpdatedDate is not null)
	OR ([UpdatedUser] = @UpdatedUser AND @UpdatedUser is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="BuyRight_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the BuyRight table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [Id]
					, [SubCustAccountID]
					, [SecSymbol]
					, [Market]
					, [ExecDate]
					, [OwningVol]
					, [AllowedVol]
					, [RegisteredVol]
					, [Right]
					, [RateRight]
					, [Price]
					, [BeginDateToRegister]
					, [EndDateToRegister]
					, [BeginDateToTransfer]
					, [EndDateToTransfer]
					, [ReceivedDate]
					, [Note]
					, [CreatedDate]
					, [CreatedUser]
					, [UpdatedDate]
					, [UpdatedUser]
					FROM [dbo].[BuyRight] {0}
				)
				SELECT
				       [Id],
				       [SubCustAccountID],
				       [SecSymbol],
				       [Market],
				       [ExecDate],
				       [OwningVol],
				       [AllowedVol],
				       [RegisteredVol],
				       [Right],
				       [RateRight],
				       [Price],
				       [BeginDateToRegister],
				       [EndDateToRegister],
				       [BeginDateToTransfer],
				       [EndDateToTransfer],
				       [ReceivedDate],
				       [Note],
				       [CreatedDate],
				       [CreatedUser],
				       [UpdatedDate],
				       [UpdatedUser]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[BuyRight] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Configurations_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the Configurations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Name],
					[Value]
				FROM
					[dbo].[Configurations]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Configurations_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the Configurations table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[Name]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Value]'
				SET @SQL = @SQL + ' FROM [dbo].[Configurations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Value]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Configurations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Configurations_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the Configurations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Value" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Configurations]
					(
					[Name]
					,[Value]
					)
				VALUES
					(
					@Name
					,@Value
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Configurations_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the Configurations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@OriginalName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Value" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Configurations]
				SET
					[Name] = @Name
					,[Value] = @Value
				WHERE
[Name] = @OriginalName 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Configurations_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the Configurations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Configurations] WITH (ROWLOCK) 
				WHERE
					[Name] = @Name
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Configurations_GetByName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the Configurations table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Name],
					[Value]
				FROM
					[dbo].[Configurations]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Configurations_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the Configurations table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Value" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Name]
	, [Value]
    FROM
	[dbo].[Configurations]
    WHERE 
	 ([Name] = @Name OR @Name IS NULL)
	AND ([Value] = @Value OR @Value IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Name]
	, [Value]
    FROM
	[dbo].[Configurations]
    WHERE 
	 ([Name] = @Name AND @Name is not null)
	OR ([Value] = @Value AND @Value is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Configurations_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the Configurations table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [Name]
					, [Value]
					FROM [dbo].[Configurations] {0}
				)
				SELECT
				       [Name],
				       [Value]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Configurations] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="WorkingDays_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets all records from the WorkingDays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DateId],
					[IsWorkingDay]
				FROM
					[dbo].[WorkingDays]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="WorkingDays_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the WorkingDays table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[DateId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [DateId]'
				SET @SQL = @SQL + ', [IsWorkingDay]'
				SET @SQL = @SQL + ' FROM [dbo].[WorkingDays]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [DateId],'
				SET @SQL = @SQL + ' [IsWorkingDay]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WorkingDays]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="WorkingDays_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Inserts a record into the WorkingDays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsWorkingDay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[WorkingDays]
					(
					[DateId]
					,[IsWorkingDay]
					)
				VALUES
					(
					@DateId
					,@IsWorkingDay
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WorkingDays_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Updates a record in the WorkingDays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalDateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsWorkingDay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[WorkingDays]
				SET
					[DateId] = @DateId
					,[IsWorkingDay] = @IsWorkingDay
				WHERE
[DateId] = @OriginalDateId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WorkingDays_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Deletes a record in the WorkingDays table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[WorkingDays] WITH (ROWLOCK) 
				WHERE
					[DateId] = @DateId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WorkingDays_GetByDateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Select records from the WorkingDays table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DateId],
					[IsWorkingDay]
				FROM
					[dbo].[WorkingDays]
				WHERE
					[DateId] = @DateId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="WorkingDays_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Finds records in the WorkingDays table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsWorkingDay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DateId]
	, [IsWorkingDay]
    FROM
	[dbo].[WorkingDays]
    WHERE 
	 ([DateId] = @DateId OR @DateId IS NULL)
	AND ([IsWorkingDay] = @IsWorkingDay OR @IsWorkingDay IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DateId]
	, [IsWorkingDay]
    FROM
	[dbo].[WorkingDays]
    WHERE 
	 ([DateId] = @DateId AND @DateId is not null)
	OR ([IsWorkingDay] = @IsWorkingDay AND @IsWorkingDay is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="WorkingDays_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Saturday, January 15, 2011

-- Created By: OTS Co., Ltd. (http://ots.vn)
-- Purpose: Gets records from the WorkingDays table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [DateId]
					, [IsWorkingDay]
					FROM [dbo].[WorkingDays] {0}
				)
				SELECT
				       [DateId],
				       [IsWorkingDay]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[WorkingDays] {0};
				
				END
			]]></body>
		</procedure>
		
</procedures>
</root>
