using System;
using System.ComponentModel;

namespace RTStockData.Entities
{
	/// <summary>
	///		The data structure representation of the 'upcom_stocks' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IUpcomStocks 
	{
		/// <summary>			
		/// ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "upcom_stocks"</remarks>
		System.Int64 Id { get; set; }
				
		
		
		/// <summary>
		/// TradeDate : 
		/// </summary>
		System.DateTime?  TradeDate  { get; set; }
		
		/// <summary>
		/// Stockno : 
		/// </summary>
		System.Int16?  Stockno  { get; set; }
		
		/// <summary>
		/// StockSymbol : 
		/// </summary>
		System.String  StockSymbol  { get; set; }
		
		/// <summary>
		/// StockType : 
		/// </summary>
		System.String  StockType  { get; set; }
		
		/// <summary>
		/// Ceiling : 
		/// </summary>
		System.Int64?  Ceiling  { get; set; }
		
		/// <summary>
		/// Floor : 
		/// </summary>
		System.Int64?  Floor  { get; set; }
		
		/// <summary>
		/// SecurityName : 
		/// </summary>
		System.String  SecurityName  { get; set; }
		
		/// <summary>
		/// PriorClosePrice : 
		/// </summary>
		System.Int64?  PriorClosePrice  { get; set; }
		
		/// <summary>
		/// Last : 
		/// </summary>
		System.Int64?  Last  { get; set; }
		
		/// <summary>
		/// LastVol : 
		/// </summary>
		System.Int64?  LastVol  { get; set; }
		
		/// <summary>
		/// LastVal : 
		/// </summary>
		System.Int64?  LastVal  { get; set; }
		
		/// <summary>
		/// Highest : 
		/// </summary>
		System.Int64?  Highest  { get; set; }
		
		/// <summary>
		/// Average : 
		/// </summary>
		System.Int64?  Average  { get; set; }
		
		/// <summary>
		/// Lowest : 
		/// </summary>
		System.Int64?  Lowest  { get; set; }
		
		/// <summary>
		/// Totalshares : 
		/// </summary>
		System.Int64?  Totalshares  { get; set; }
		
		/// <summary>
		/// TotalValue : 
		/// </summary>
		System.Int64?  TotalValue  { get; set; }
		
		/// <summary>
		/// Best1Bid : 
		/// </summary>
		System.Int64?  Best1Bid  { get; set; }
		
		/// <summary>
		/// Best1BidVolume : 
		/// </summary>
		System.Int64?  Best1BidVolume  { get; set; }
		
		/// <summary>
		/// Best2Bid : 
		/// </summary>
		System.Int64?  Best2Bid  { get; set; }
		
		/// <summary>
		/// Best2BidVolume : 
		/// </summary>
		System.Int64?  Best2BidVolume  { get; set; }
		
		/// <summary>
		/// Best3Bid : 
		/// </summary>
		System.Int64?  Best3Bid  { get; set; }
		
		/// <summary>
		/// Best3BidVolume : 
		/// </summary>
		System.Int64?  Best3BidVolume  { get; set; }
		
		/// <summary>
		/// Best1Offer : 
		/// </summary>
		System.Int64?  Best1Offer  { get; set; }
		
		/// <summary>
		/// Best1OfferVolume : 
		/// </summary>
		System.Int64?  Best1OfferVolume  { get; set; }
		
		/// <summary>
		/// Best2Offer : 
		/// </summary>
		System.Int64?  Best2Offer  { get; set; }
		
		/// <summary>
		/// Best2OfferVolume : 
		/// </summary>
		System.Int64?  Best2OfferVolume  { get; set; }
		
		/// <summary>
		/// Best3Offer : 
		/// </summary>
		System.Int64?  Best3Offer  { get; set; }
		
		/// <summary>
		/// Best3OfferVolume : 
		/// </summary>
		System.Int64?  Best3OfferVolume  { get; set; }
		
		/// <summary>
		/// NM_TOTAL_TRADED_QTTY : 
		/// </summary>
		System.Int64?  NmTotalTradedQtty  { get; set; }
		
		/// <summary>
		/// PREV_PRIOR_PRICE : 
		/// </summary>
		System.Int64?  PrevPriorPrice  { get; set; }
		
		/// <summary>
		/// SELL_COUNT : 
		/// </summary>
		System.Int64?  SellCount  { get; set; }
		
		/// <summary>
		/// BUY_COUNT : 
		/// </summary>
		System.Int64?  BuyCount  { get; set; }
		
		/// <summary>
		/// NM_TOTAL_TRADED_VALUE : 
		/// </summary>
		System.Int64?  NmTotalTradedValue  { get; set; }
		
		/// <summary>
		/// TOTAL_BID_QTTY : 
		/// </summary>
		System.Int64?  TotalBidQtty  { get; set; }
		
		/// <summary>
		/// TOTAL_SELL_TRADING_QTTY : 
		/// </summary>
		System.Int64?  TotalSellTradingQtty  { get; set; }
		
		/// <summary>
		/// TOTAL_OFFER_QTTY : 
		/// </summary>
		System.Int64?  TotalOfferQtty  { get; set; }
		
		/// <summary>
		/// AU_TOTAL_TRADED_QTTY : 
		/// </summary>
		System.Int64?  AuTotalTradedQtty  { get; set; }
		
		/// <summary>
		/// TOTAL_BUY_TRADING_QTTY : 
		/// </summary>
		System.Int64?  TotalBuyTradingQtty  { get; set; }
		
		/// <summary>
		/// BID_COUNT : 
		/// </summary>
		System.Int64?  BidCount  { get; set; }
		
		/// <summary>
		/// OFFER_COUNT : 
		/// </summary>
		System.Int64?  OfferCount  { get; set; }
		
		/// <summary>
		/// BUY_FOREIGN_QTTY : 
		/// </summary>
		System.Int64?  BuyForeignQtty  { get; set; }
		
		/// <summary>
		/// BUY_FOREIGN_VALUE : 
		/// </summary>
		System.Int64?  BuyForeignValue  { get; set; }
		
		/// <summary>
		/// SELL_FOREIGN_QTTY : 
		/// </summary>
		System.Int64?  SellForeignQtty  { get; set; }
		
		/// <summary>
		/// SELL_FOREIGN_VALUE : 
		/// </summary>
		System.Int64?  SellForeignValue  { get; set; }
		
		/// <summary>
		/// REMAIN_FOREIGN_QTTY : 
		/// </summary>
		System.Int64?  RemainForeignQtty  { get; set; }
		
		/// <summary>
		/// PT_MATCH_PRICE : 
		/// </summary>
		System.Int64?  PtMatchPrice  { get; set; }
		
		/// <summary>
		/// PT_MATCH_QTTY : 
		/// </summary>
		System.Int64?  PtMatchQtty  { get; set; }
		
		/// <summary>
		/// PT_TOTAL_TRADED_QTTY : 
		/// </summary>
		System.Int64?  PtTotalTradedQtty  { get; set; }
		
		/// <summary>
		/// PT_TOTAL_TRADED_VALUE : 
		/// </summary>
		System.Int64?  PtTotalTradedValue  { get; set; }
		
		/// <summary>
		/// TOTAL_LISTING_QTTY : 
		/// </summary>
		System.Int64?  TotalListingQtty  { get; set; }
		
		/// <summary>
		/// OPEN_PRICE : 
		/// </summary>
		System.Int64?  OpenPrice  { get; set; }
		
		/// <summary>
		/// CLOSE_PRICE : 
		/// </summary>
		System.Int64?  ClosePrice  { get; set; }
		
		/// <summary>
		/// AVERAGE_PRICE : 
		/// </summary>
		System.Int64?  AveragePrice  { get; set; }
		
		/// <summary>
		/// STATUS : 
		/// </summary>
		System.String  Status  { get; set; }
		
		/// <summary>
		/// Sequence : 
		/// </summary>
		System.Int64?  Sequence  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties

		#endregion Data Properties

	}
}


