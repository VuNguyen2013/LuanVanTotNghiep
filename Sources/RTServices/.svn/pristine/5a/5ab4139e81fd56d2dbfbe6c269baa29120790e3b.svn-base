<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">RTStockData</database>
<procedures>


    <procedure owner="dbo" name="IndexVN30_History_Get_List" >
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the IndexVN30_History table
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters/>
      <body>
        <![CDATA[
				
				SELECT
					[ID],
					[TradeDate],
					[Index],
					[TotalShares],
					[TotalValues],
					[Up],
					[Down],
					[NoChange],
					[Time],
					[Change],
					[PerChange]
				FROM
					[dbo].[IndexVN30_History] WHERE CONVERT(VARCHAR(10),[TradeDate],120) > CONVERT(VARCHAR(10),GETDATE() - 20,120) ORDER BY TradeDate 
					
				SELECT @@ROWCOUNT
			]]>
      </body>
    </procedure>


    <procedure owner="dbo" name="IndexVN30_History_GetPaged" >
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the IndexVN30_History table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters>
        <parameter name="@WhereClause" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
        <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
        <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
        <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" />
      </parameters>
      <body>
        <![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[IndexVN30_History]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Index], O.[TotalShares], O.[TotalValues], O.[Up], O.[Down], O.[NoChange], O.[Time], O.[Change], O.[PerChange]
				FROM
				    [dbo].[IndexVN30_History] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[IndexVN30_History]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]>
      </body>
    </procedure>

    <procedure owner="dbo" name="IndexVN30_History_Insert" grant="">
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the IndexVN30_History table
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters>
        <parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
        <parameter name="@Index" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@TotalShares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@TotalValues" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Up" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Down" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@NoChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Change" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@PerChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      </parameters>
      <body>
        <![CDATA[
				
				INSERT INTO [dbo].[IndexVN30_History]
					(
					[TradeDate]
					,[Index]
					,[TotalShares]
					,[TotalValues]
					,[Up]
					,[Down]
					,[NoChange]
					,[Time]
					,[Change]
					,[PerChange]
					)
				VALUES
					(
					@TradeDate
					,@Index
					,@TotalShares
					,@TotalValues
					,@Up
					,@Down
					,@NoChange
					,@Time
					,@Change
					,@PerChange
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]>
      </body>
    </procedure>
    <procedure owner="dbo" name="IndexVN30_History_Update" grant="">
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the IndexVN30_History table
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters>
        <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
        <parameter name="@Index" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@TotalShares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@TotalValues" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Up" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Down" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@NoChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@Change" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@PerChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      </parameters>
      <body>
        <![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[IndexVN30_History]
				SET
					[TradeDate] = @TradeDate
					,[Index] = @Index
					,[TotalShares] = @TotalShares
					,[TotalValues] = @TotalValues
					,[Up] = @Up
					,[Down] = @Down
					,[NoChange] = @NoChange
					,[Time] = @Time
					,[Change] = @Change
					,[PerChange] = @PerChange
				WHERE
[ID] = @Id 
				
			]]>
      </body>
    </procedure>
    <procedure owner="dbo" name="IndexVN30_History_Delete" grant="">
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the IndexVN30_History table
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters>
        <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      </parameters>
      <body>
        <![CDATA[
				DELETE FROM [dbo].[IndexVN30_History] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]>
      </body>
    </procedure>
    <procedure owner="dbo" name="IndexVN30_History_GetById" >
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the IndexVN30_History table through an index
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters>
        <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      </parameters>
      <body>
        <![CDATA[
				SELECT
					[ID],
					[TradeDate],
					[Index],
					[TotalShares],
					[TotalValues],
					[Up],
					[Down],
					[NoChange],
					[Time],
					[Change],
					[PerChange]
				FROM
					[dbo].[IndexVN30_History]
				WHERE
					[ID] = @Id
				SELECT @@ROWCOUNT
					
			]]>
      </body>

    </procedure>
    <procedure owner="dbo" name="IndexVN30_History_Find" >
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the IndexVN30_History table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters>
        <parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
        <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
        <parameter name="@Index" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@TotalShares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@TotalValues" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@Up" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@Down" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@NoChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@Change" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@PerChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      </parameters>
      <body>
        <![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Index]
	, [TotalShares]
	, [TotalValues]
	, [Up]
	, [Down]
	, [NoChange]
	, [Time]
	, [Change]
	, [PerChange]
    FROM
	[dbo].[IndexVN30_History]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([Index] = @Index OR @Index IS NULL)
	AND ([TotalShares] = @TotalShares OR @TotalShares IS NULL)
	AND ([TotalValues] = @TotalValues OR @TotalValues IS NULL)
	AND ([Up] = @Up OR @Up IS NULL)
	AND ([Down] = @Down OR @Down IS NULL)
	AND ([NoChange] = @NoChange OR @NoChange IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([Change] = @Change OR @Change IS NULL)
	AND ([PerChange] = @PerChange OR @PerChange IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Index]
	, [TotalShares]
	, [TotalValues]
	, [Up]
	, [Down]
	, [NoChange]
	, [Time]
	, [Change]
	, [PerChange]
    FROM
	[dbo].[IndexVN30_History]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([Index] = @Index AND @Index is not null)
	OR ([TotalShares] = @TotalShares AND @TotalShares is not null)
	OR ([TotalValues] = @TotalValues AND @TotalValues is not null)
	OR ([Up] = @Up AND @Up is not null)
	OR ([Down] = @Down AND @Down is not null)
	OR ([NoChange] = @NoChange AND @NoChange is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([Change] = @Change AND @Change is not null)
	OR ([PerChange] = @PerChange AND @PerChange is not null)
	SELECT @@ROWCOUNT			
  END
				]]>
      </body>
    </procedure>


    <procedure owner="dbo" name="IndexVN30_History_Find_Dynamic"  skip="true">
      <comment>
        <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the IndexVN30_History table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]>
      </comment>
      <parameters/>
      <body>
        <![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[IndexVN30_History] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Index], O.[TotalShares], O.[TotalValues], O.[Up], O.[Down], O.[NoChange], O.[Time], O.[Change], O.[PerChange]
				FROM
				    [dbo].[IndexVN30_History] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[IndexVN30_History] {0};
				
				DROP TABLE #PageIndex
				END
			]]>
      </body>
    </procedure>


  
  
		<procedure owner="dbo" name="NearestWorkingDates_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NearestWorkingDates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MarketId],
					[T],
					[T1],
					[T2],
					[T3]
				FROM
					[dbo].[NearestWorkingDates]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="NearestWorkingDates_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NearestWorkingDates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MarketId] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MarketId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MarketId]'
				SET @SQL = @SQL + ' FROM [dbo].[NearestWorkingDates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MarketId], O.[T], O.[T1], O.[T2], O.[T3]
				FROM
				    [dbo].[NearestWorkingDates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MarketId] = PageIndex.[MarketId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NearestWorkingDates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="NearestWorkingDates_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NearestWorkingDates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@T" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@T1" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@T2" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@T3" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[NearestWorkingDates]
					(
					[MarketId]
					,[T]
					,[T1]
					,[T2]
					,[T3]
					)
				VALUES
					(
					@MarketId
					,@T
					,@T1
					,@T2
					,@T3
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NearestWorkingDates_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NearestWorkingDates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalMarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@T" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@T1" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@T2" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@T3" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[NearestWorkingDates]
				SET
					[MarketId] = @MarketId
					,[T] = @T
					,[T1] = @T1
					,[T2] = @T2
					,[T3] = @T3
				WHERE
[MarketId] = @OriginalMarketId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NearestWorkingDates_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NearestWorkingDates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[NearestWorkingDates] WITH (ROWLOCK) 
				WHERE
					[MarketId] = @MarketId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NearestWorkingDates_GetByMarketId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NearestWorkingDates table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MarketId],
					[T],
					[T1],
					[T2],
					[T3]
				FROM
					[dbo].[NearestWorkingDates]
				WHERE
					[MarketId] = @MarketId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="NearestWorkingDates_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NearestWorkingDates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@T" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@T1" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@T2" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@T3" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MarketId]
	, [T]
	, [T1]
	, [T2]
	, [T3]
    FROM
	[dbo].[NearestWorkingDates]
    WHERE 
	 ([MarketId] = @MarketId OR @MarketId IS NULL)
	AND ([T] = @T OR @T IS NULL)
	AND ([T1] = @T1 OR @T1 IS NULL)
	AND ([T2] = @T2 OR @T2 IS NULL)
	AND ([T3] = @T3 OR @T3 IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MarketId]
	, [T]
	, [T1]
	, [T2]
	, [T3]
    FROM
	[dbo].[NearestWorkingDates]
    WHERE 
	 ([MarketId] = @MarketId AND @MarketId is not null)
	OR ([T] = @T AND @T is not null)
	OR ([T1] = @T1 AND @T1 is not null)
	OR ([T2] = @T2 AND @T2 is not null)
	OR ([T3] = @T3 AND @T3 is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="NearestWorkingDates_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NearestWorkingDates table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MarketId] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MarketId] )
				SELECT TOP {3} [MarketId]
				FROM [dbo].[NearestWorkingDates] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MarketId], O.[T], O.[T1], O.[T2], O.[T3]
				FROM
				    [dbo].[NearestWorkingDates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MarketId] = PageIndex.[MarketId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[NearestWorkingDates] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CompanyInfo_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CompanyInfo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CompanyId],
					[Code],
					[ShortName],
					[Phone],
					[Email],
					[Fax],
					[Website],
					[LastModified],
					[IsPublished],
					[AuthorId],
					[SectorId],
					[MarketId],
					[PageView],
					[IndustryGroup]
				FROM
					[dbo].[CompanyInfo]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CompanyInfo_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CompanyInfo table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CompanyId] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CompanyId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CompanyId]'
				SET @SQL = @SQL + ' FROM [dbo].[CompanyInfo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CompanyId], O.[Code], O.[ShortName], O.[Phone], O.[Email], O.[Fax], O.[Website], O.[LastModified], O.[IsPublished], O.[AuthorId], O.[SectorId], O.[MarketId], O.[PageView], O.[IndustryGroup]
				FROM
				    [dbo].[CompanyInfo] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CompanyId] = PageIndex.[CompanyId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CompanyInfo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CompanyInfo_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CompanyInfo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Code" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ShortName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Fax" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Website" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@IsPublished" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AuthorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SectorId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IndustryGroup" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CompanyInfo]
					(
					[Code]
					,[ShortName]
					,[Phone]
					,[Email]
					,[Fax]
					,[Website]
					,[LastModified]
					,[IsPublished]
					,[AuthorId]
					,[SectorId]
					,[MarketId]
					,[PageView]
					,[IndustryGroup]
					)
				VALUES
					(
					@Code
					,@ShortName
					,@Phone
					,@Email
					,@Fax
					,@Website
					,@LastModified
					,@IsPublished
					,@AuthorId
					,@SectorId
					,@MarketId
					,@PageView
					,@IndustryGroup
					)
				
				-- Get the identity value
				SET @CompanyId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CompanyInfo_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CompanyInfo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Code" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ShortName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Fax" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Website" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@IsPublished" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AuthorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SectorId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IndustryGroup" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CompanyInfo]
				SET
					[Code] = @Code
					,[ShortName] = @ShortName
					,[Phone] = @Phone
					,[Email] = @Email
					,[Fax] = @Fax
					,[Website] = @Website
					,[LastModified] = @LastModified
					,[IsPublished] = @IsPublished
					,[AuthorId] = @AuthorId
					,[SectorId] = @SectorId
					,[MarketId] = @MarketId
					,[PageView] = @PageView
					,[IndustryGroup] = @IndustryGroup
				WHERE
[CompanyId] = @CompanyId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CompanyInfo_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CompanyInfo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CompanyInfo] WITH (ROWLOCK) 
				WHERE
					[CompanyId] = @CompanyId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CompanyInfo_GetByCompanyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CompanyInfo table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CompanyId],
					[Code],
					[ShortName],
					[Phone],
					[Email],
					[Fax],
					[Website],
					[LastModified],
					[IsPublished],
					[AuthorId],
					[SectorId],
					[MarketId],
					[PageView],
					[IndustryGroup]
				FROM
					[dbo].[CompanyInfo]
				WHERE
					[CompanyId] = @CompanyId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CompanyInfo_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CompanyInfo table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Code" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@ShortName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Email" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Fax" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Website" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@IsPublished" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AuthorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SectorId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MarketId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryGroup" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CompanyId]
	, [Code]
	, [ShortName]
	, [Phone]
	, [Email]
	, [Fax]
	, [Website]
	, [LastModified]
	, [IsPublished]
	, [AuthorId]
	, [SectorId]
	, [MarketId]
	, [PageView]
	, [IndustryGroup]
    FROM
	[dbo].[CompanyInfo]
    WHERE 
	 ([CompanyId] = @CompanyId OR @CompanyId IS NULL)
	AND ([Code] = @Code OR @Code IS NULL)
	AND ([ShortName] = @ShortName OR @ShortName IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([Fax] = @Fax OR @Fax IS NULL)
	AND ([Website] = @Website OR @Website IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([IsPublished] = @IsPublished OR @IsPublished IS NULL)
	AND ([AuthorId] = @AuthorId OR @AuthorId IS NULL)
	AND ([SectorId] = @SectorId OR @SectorId IS NULL)
	AND ([MarketId] = @MarketId OR @MarketId IS NULL)
	AND ([PageView] = @PageView OR @PageView IS NULL)
	AND ([IndustryGroup] = @IndustryGroup OR @IndustryGroup IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CompanyId]
	, [Code]
	, [ShortName]
	, [Phone]
	, [Email]
	, [Fax]
	, [Website]
	, [LastModified]
	, [IsPublished]
	, [AuthorId]
	, [SectorId]
	, [MarketId]
	, [PageView]
	, [IndustryGroup]
    FROM
	[dbo].[CompanyInfo]
    WHERE 
	 ([CompanyId] = @CompanyId AND @CompanyId is not null)
	OR ([Code] = @Code AND @Code is not null)
	OR ([ShortName] = @ShortName AND @ShortName is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([Website] = @Website AND @Website is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([IsPublished] = @IsPublished AND @IsPublished is not null)
	OR ([AuthorId] = @AuthorId AND @AuthorId is not null)
	OR ([SectorId] = @SectorId AND @SectorId is not null)
	OR ([MarketId] = @MarketId AND @MarketId is not null)
	OR ([PageView] = @PageView AND @PageView is not null)
	OR ([IndustryGroup] = @IndustryGroup AND @IndustryGroup is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CompanyInfo_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CompanyInfo table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CompanyId] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CompanyId] )
				SELECT TOP {3} [CompanyId]
				FROM [dbo].[CompanyInfo] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CompanyId], O.[Code], O.[ShortName], O.[Phone], O.[Email], O.[Fax], O.[Website], O.[LastModified], O.[IsPublished], O.[AuthorId], O.[SectorId], O.[MarketId], O.[PageView], O.[IndustryGroup]
				FROM
				    [dbo].[CompanyInfo] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CompanyId] = PageIndex.[CompanyId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CompanyInfo] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="security_realtime_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the security_realtime table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[Stockno],
					[StockSymbol],
					[StockType],
					[Ceiling],
					[Floor],
					[BigLotValue],
					[SecurityName],
					[SectorNo],
					[Designated],
					[SUSPENSION],
					[Delist],
					[HaltResumeFlag],
					[SPLIT],
					[Benefit],
					[Meeting],
					[Notice],
					[ClientidRequired],
					[CouponRate],
					[IssueDate],
					[MatureDate],
					[AvrPrice],
					[ParValue],
					[SDCFlag],
					[PriorClosePrice],
					[PriorCloseDate],
					[ProjectOpen],
					[OpenPrice],
					[Last],
					[LastVol],
					[LastVal],
					[Highest],
					[Lowest],
					[Totalshares],
					[TotalValue],
					[AccumulateDeal],
					[BigDeal],
					[BigVolume],
					[BigValue],
					[OddDeal],
					[OddVolume],
					[OddValue],
					[Best1Bid],
					[Best1BidVolume],
					[Best2Bid],
					[Best2BidVolume],
					[Best3Bid],
					[Best3BidVolume],
					[Best1Offer],
					[Best1OfferVolume],
					[Best2Offer],
					[Best2OfferVolume],
					[Best3Offer],
					[Best3OfferVolume],
					[BoardLost],
					[TotalRoom],
					[CurrentRoom],
					[StartRoom],
					[Sequence],
          [IsVn30]
				FROM
					[dbo].[security_realtime]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="security_realtime_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the security_realtime table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[security_realtime]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[Stockno], O.[StockSymbol], O.[StockType], O.[Ceiling], O.[Floor], O.[BigLotValue], O.[SecurityName], O.[SectorNo], O.[Designated], O.[SUSPENSION], O.[Delist], O.[HaltResumeFlag], O.[SPLIT], O.[Benefit], O.[Meeting], O.[Notice], O.[ClientidRequired], O.[CouponRate], O.[IssueDate], O.[MatureDate], O.[AvrPrice], O.[ParValue], O.[SDCFlag], O.[PriorClosePrice], O.[PriorCloseDate], O.[ProjectOpen], O.[OpenPrice], O.[Last], O.[LastVol], O.[LastVal], O.[Highest], O.[Lowest], O.[Totalshares], O.[TotalValue], O.[AccumulateDeal], O.[BigDeal], O.[BigVolume], O.[BigValue], O.[OddDeal], O.[OddVolume], O.[OddValue], O.[Best1Bid], O.[Best1BidVolume], O.[Best2Bid], O.[Best2BidVolume], O.[Best3Bid], O.[Best3BidVolume], O.[Best1Offer], O.[Best1OfferVolume], O.[Best2Offer], O.[Best2OfferVolume], O.[Best3Offer], O.[Best3OfferVolume], O.[BoardLost], O.[TotalRoom], O.[CurrentRoom], O.[StartRoom], O.[Sequence],O.[IsVn30]
				FROM
				    [dbo].[security_realtime] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[security_realtime]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="security_realtime_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the security_realtime table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BigLotValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SecurityName" type="varchar" direction="Input" size="25" precision="0" scale="0" param="(25)" nulldefault=""/>
				<parameter name="@SectorNo" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Designated" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Suspension" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Delist" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@HaltResumeFlag" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Split" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Benefit" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Meeting" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Notice" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@ClientidRequired" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@CouponRate" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@IssueDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
				<parameter name="@MatureDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
				<parameter name="@AvrPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParValue" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@SdcFlag" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PriorCloseDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
				<parameter name="@ProjectOpen" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulateDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@BigDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@BigVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BigValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OddDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@OddVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OddValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BoardLost" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrentRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@StartRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@IsVn30" type="bit" direction="Input" size="1" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[security_realtime]
					(
					[TradeDate]
					,[Stockno]
					,[StockSymbol]
					,[StockType]
					,[Ceiling]
					,[Floor]
					,[BigLotValue]
					,[SecurityName]
					,[SectorNo]
					,[Designated]
					,[SUSPENSION]
					,[Delist]
					,[HaltResumeFlag]
					,[SPLIT]
					,[Benefit]
					,[Meeting]
					,[Notice]
					,[ClientidRequired]
					,[CouponRate]
					,[IssueDate]
					,[MatureDate]
					,[AvrPrice]
					,[ParValue]
					,[SDCFlag]
					,[PriorClosePrice]
					,[PriorCloseDate]
					,[ProjectOpen]
					,[OpenPrice]
					,[Last]
					,[LastVol]
					,[LastVal]
					,[Highest]
					,[Lowest]
					,[Totalshares]
					,[TotalValue]
					,[AccumulateDeal]
					,[BigDeal]
					,[BigVolume]
					,[BigValue]
					,[OddDeal]
					,[OddVolume]
					,[OddValue]
					,[Best1Bid]
					,[Best1BidVolume]
					,[Best2Bid]
					,[Best2BidVolume]
					,[Best3Bid]
					,[Best3BidVolume]
					,[Best1Offer]
					,[Best1OfferVolume]
					,[Best2Offer]
					,[Best2OfferVolume]
					,[Best3Offer]
					,[Best3OfferVolume]
					,[BoardLost]
					,[TotalRoom]
					,[CurrentRoom]
					,[StartRoom]
					,[Sequence]
          ,[IsVn30]
					)
				VALUES
					(
					@TradeDate
					,@Stockno
					,@StockSymbol
					,@StockType
					,@Ceiling
					,@Floor
					,@BigLotValue
					,@SecurityName
					,@SectorNo
					,@Designated
					,@Suspension
					,@Delist
					,@HaltResumeFlag
					,@Split
					,@Benefit
					,@Meeting
					,@Notice
					,@ClientidRequired
					,@CouponRate
					,@IssueDate
					,@MatureDate
					,@AvrPrice
					,@ParValue
					,@SdcFlag
					,@PriorClosePrice
					,@PriorCloseDate
					,@ProjectOpen
					,@OpenPrice
					,@Last
					,@LastVol
					,@LastVal
					,@Highest
					,@Lowest
					,@Totalshares
					,@TotalValue
					,@AccumulateDeal
					,@BigDeal
					,@BigVolume
					,@BigValue
					,@OddDeal
					,@OddVolume
					,@OddValue
					,@Best1Bid
					,@Best1BidVolume
					,@Best2Bid
					,@Best2BidVolume
					,@Best3Bid
					,@Best3BidVolume
					,@Best1Offer
					,@Best1OfferVolume
					,@Best2Offer
					,@Best2OfferVolume
					,@Best3Offer
					,@Best3OfferVolume
					,@BoardLost
					,@TotalRoom
					,@CurrentRoom
					,@StartRoom
					,@Sequence
          ,@IsVn30
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="security_realtime_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the security_realtime table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BigLotValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SecurityName" type="varchar" direction="Input" size="25" precision="0" scale="0" param="(25)" nulldefault=""/>
				<parameter name="@SectorNo" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Designated" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Suspension" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Delist" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@HaltResumeFlag" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Split" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Benefit" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Meeting" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Notice" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@ClientidRequired" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@CouponRate" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@IssueDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
				<parameter name="@MatureDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
				<parameter name="@AvrPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParValue" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@SdcFlag" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PriorCloseDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
				<parameter name="@ProjectOpen" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulateDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@BigDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@BigVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BigValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OddDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@OddVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OddValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BoardLost" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrentRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@StartRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
        <parameter name="@IsVn30" type="bit" direction="Input" size="1" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[security_realtime]
				SET
					[TradeDate] = @TradeDate
					,[Stockno] = @Stockno
					,[StockSymbol] = @StockSymbol
					,[StockType] = @StockType
					,[Ceiling] = @Ceiling
					,[Floor] = @Floor
					,[BigLotValue] = @BigLotValue
					,[SecurityName] = @SecurityName
					,[SectorNo] = @SectorNo
					,[Designated] = @Designated
					,[SUSPENSION] = @Suspension
					,[Delist] = @Delist
					,[HaltResumeFlag] = @HaltResumeFlag
					,[SPLIT] = @Split
					,[Benefit] = @Benefit
					,[Meeting] = @Meeting
					,[Notice] = @Notice
					,[ClientidRequired] = @ClientidRequired
					,[CouponRate] = @CouponRate
					,[IssueDate] = @IssueDate
					,[MatureDate] = @MatureDate
					,[AvrPrice] = @AvrPrice
					,[ParValue] = @ParValue
					,[SDCFlag] = @SdcFlag
					,[PriorClosePrice] = @PriorClosePrice
					,[PriorCloseDate] = @PriorCloseDate
					,[ProjectOpen] = @ProjectOpen
					,[OpenPrice] = @OpenPrice
					,[Last] = @Last
					,[LastVol] = @LastVol
					,[LastVal] = @LastVal
					,[Highest] = @Highest
					,[Lowest] = @Lowest
					,[Totalshares] = @Totalshares
					,[TotalValue] = @TotalValue
					,[AccumulateDeal] = @AccumulateDeal
					,[BigDeal] = @BigDeal
					,[BigVolume] = @BigVolume
					,[BigValue] = @BigValue
					,[OddDeal] = @OddDeal
					,[OddVolume] = @OddVolume
					,[OddValue] = @OddValue
					,[Best1Bid] = @Best1Bid
					,[Best1BidVolume] = @Best1BidVolume
					,[Best2Bid] = @Best2Bid
					,[Best2BidVolume] = @Best2BidVolume
					,[Best3Bid] = @Best3Bid
					,[Best3BidVolume] = @Best3BidVolume
					,[Best1Offer] = @Best1Offer
					,[Best1OfferVolume] = @Best1OfferVolume
					,[Best2Offer] = @Best2Offer
					,[Best2OfferVolume] = @Best2OfferVolume
					,[Best3Offer] = @Best3Offer
					,[Best3OfferVolume] = @Best3OfferVolume
					,[BoardLost] = @BoardLost
					,[TotalRoom] = @TotalRoom
					,[CurrentRoom] = @CurrentRoom
					,[StartRoom] = @StartRoom
					,[Sequence] = @Sequence
          ,[IsVn30] = @IsVn30
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="security_realtime_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the security_realtime table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[security_realtime] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="security_realtime_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the security_realtime table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[Stockno],
					[StockSymbol],
					[StockType],
					[Ceiling],
					[Floor],
					[BigLotValue],
					[SecurityName],
					[SectorNo],
					[Designated],
					[SUSPENSION],
					[Delist],
					[HaltResumeFlag],
					[SPLIT],
					[Benefit],
					[Meeting],
					[Notice],
					[ClientidRequired],
					[CouponRate],
					[IssueDate],
					[MatureDate],
					[AvrPrice],
					[ParValue],
					[SDCFlag],
					[PriorClosePrice],
					[PriorCloseDate],
					[ProjectOpen],
					[OpenPrice],
					[Last],
					[LastVol],
					[LastVal],
					[Highest],
					[Lowest],
					[Totalshares],
					[TotalValue],
					[AccumulateDeal],
					[BigDeal],
					[BigVolume],
					[BigValue],
					[OddDeal],
					[OddVolume],
					[OddValue],
					[Best1Bid],
					[Best1BidVolume],
					[Best2Bid],
					[Best2BidVolume],
					[Best3Bid],
					[Best3BidVolume],
					[Best1Offer],
					[Best1OfferVolume],
					[Best2Offer],
					[Best2OfferVolume],
					[Best3Offer],
					[Best3OfferVolume],
					[BoardLost],
					[TotalRoom],
					[CurrentRoom],
					[StartRoom],
					[Sequence],
          [IsVn30]
				FROM
					[dbo].[security_realtime]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="security_realtime_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the security_realtime table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BigLotValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SecurityName" type="varchar" direction="Input" size="25" precision="0" scale="0" param="(25)" nulldefault="null"/>
				<parameter name="@SectorNo" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Designated" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Suspension" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Delist" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@HaltResumeFlag" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Split" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Benefit" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Meeting" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Notice" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@ClientidRequired" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@CouponRate" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@IssueDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
				<parameter name="@MatureDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
				<parameter name="@AvrPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParValue" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@SdcFlag" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PriorCloseDate" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
				<parameter name="@ProjectOpen" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulateDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@BigDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@BigVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BigValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OddDeal" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@OddVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OddValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BoardLost" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrentRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartRoom" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
        <parameter name="@IsVn30" type="bit" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body>
    <![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [Stockno]
	, [StockSymbol]
	, [StockType]
	, [Ceiling]
	, [Floor]
	, [BigLotValue]
	, [SecurityName]
	, [SectorNo]
	, [Designated]
	, [SUSPENSION]
	, [Delist]
	, [HaltResumeFlag]
	, [SPLIT]
	, [Benefit]
	, [Meeting]
	, [Notice]
	, [ClientidRequired]
	, [CouponRate]
	, [IssueDate]
	, [MatureDate]
	, [AvrPrice]
	, [ParValue]
	, [SDCFlag]
	, [PriorClosePrice]
	, [PriorCloseDate]
	, [ProjectOpen]
	, [OpenPrice]
	, [Last]
	, [LastVol]
	, [LastVal]
	, [Highest]
	, [Lowest]
	, [Totalshares]
	, [TotalValue]
	, [AccumulateDeal]
	, [BigDeal]
	, [BigVolume]
	, [BigValue]
	, [OddDeal]
	, [OddVolume]
	, [OddValue]
	, [Best1Bid]
	, [Best1BidVolume]
	, [Best2Bid]
	, [Best2BidVolume]
	, [Best3Bid]
	, [Best3BidVolume]
	, [Best1Offer]
	, [Best1OfferVolume]
	, [Best2Offer]
	, [Best2OfferVolume]
	, [Best3Offer]
	, [Best3OfferVolume]
	, [BoardLost]
	, [TotalRoom]
	, [CurrentRoom]
	, [StartRoom]
	, [Sequence]
  , [IsVn30]
    FROM
	[dbo].[security_realtime]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([Stockno] = @Stockno OR @Stockno IS NULL)
	AND ([StockSymbol] = @StockSymbol OR @StockSymbol IS NULL)
	AND ([StockType] = @StockType OR @StockType IS NULL)
	AND ([Ceiling] = @Ceiling OR @Ceiling IS NULL)
	AND ([Floor] = @Floor OR @Floor IS NULL)
	AND ([BigLotValue] = @BigLotValue OR @BigLotValue IS NULL)
	AND ([SecurityName] = @SecurityName OR @SecurityName IS NULL)
	AND ([SectorNo] = @SectorNo OR @SectorNo IS NULL)
	AND ([Designated] = @Designated OR @Designated IS NULL)
	AND ([SUSPENSION] = @Suspension OR @Suspension IS NULL)
	AND ([Delist] = @Delist OR @Delist IS NULL)
	AND ([HaltResumeFlag] = @HaltResumeFlag OR @HaltResumeFlag IS NULL)
	AND ([SPLIT] = @Split OR @Split IS NULL)
	AND ([Benefit] = @Benefit OR @Benefit IS NULL)
	AND ([Meeting] = @Meeting OR @Meeting IS NULL)
	AND ([Notice] = @Notice OR @Notice IS NULL)
	AND ([ClientidRequired] = @ClientidRequired OR @ClientidRequired IS NULL)
	AND ([CouponRate] = @CouponRate OR @CouponRate IS NULL)
	AND ([IssueDate] = @IssueDate OR @IssueDate IS NULL)
	AND ([MatureDate] = @MatureDate OR @MatureDate IS NULL)
	AND ([AvrPrice] = @AvrPrice OR @AvrPrice IS NULL)
	AND ([ParValue] = @ParValue OR @ParValue IS NULL)
	AND ([SDCFlag] = @SdcFlag OR @SdcFlag IS NULL)
	AND ([PriorClosePrice] = @PriorClosePrice OR @PriorClosePrice IS NULL)
	AND ([PriorCloseDate] = @PriorCloseDate OR @PriorCloseDate IS NULL)
	AND ([ProjectOpen] = @ProjectOpen OR @ProjectOpen IS NULL)
	AND ([OpenPrice] = @OpenPrice OR @OpenPrice IS NULL)
	AND ([Last] = @Last OR @Last IS NULL)
	AND ([LastVol] = @LastVol OR @LastVol IS NULL)
	AND ([LastVal] = @LastVal OR @LastVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Totalshares] = @Totalshares OR @Totalshares IS NULL)
	AND ([TotalValue] = @TotalValue OR @TotalValue IS NULL)
	AND ([AccumulateDeal] = @AccumulateDeal OR @AccumulateDeal IS NULL)
	AND ([BigDeal] = @BigDeal OR @BigDeal IS NULL)
	AND ([BigVolume] = @BigVolume OR @BigVolume IS NULL)
	AND ([BigValue] = @BigValue OR @BigValue IS NULL)
	AND ([OddDeal] = @OddDeal OR @OddDeal IS NULL)
	AND ([OddVolume] = @OddVolume OR @OddVolume IS NULL)
	AND ([OddValue] = @OddValue OR @OddValue IS NULL)
	AND ([Best1Bid] = @Best1Bid OR @Best1Bid IS NULL)
	AND ([Best1BidVolume] = @Best1BidVolume OR @Best1BidVolume IS NULL)
	AND ([Best2Bid] = @Best2Bid OR @Best2Bid IS NULL)
	AND ([Best2BidVolume] = @Best2BidVolume OR @Best2BidVolume IS NULL)
	AND ([Best3Bid] = @Best3Bid OR @Best3Bid IS NULL)
	AND ([Best3BidVolume] = @Best3BidVolume OR @Best3BidVolume IS NULL)
	AND ([Best1Offer] = @Best1Offer OR @Best1Offer IS NULL)
	AND ([Best1OfferVolume] = @Best1OfferVolume OR @Best1OfferVolume IS NULL)
	AND ([Best2Offer] = @Best2Offer OR @Best2Offer IS NULL)
	AND ([Best2OfferVolume] = @Best2OfferVolume OR @Best2OfferVolume IS NULL)
	AND ([Best3Offer] = @Best3Offer OR @Best3Offer IS NULL)
	AND ([Best3OfferVolume] = @Best3OfferVolume OR @Best3OfferVolume IS NULL)
	AND ([BoardLost] = @BoardLost OR @BoardLost IS NULL)
	AND ([TotalRoom] = @TotalRoom OR @TotalRoom IS NULL)
	AND ([CurrentRoom] = @CurrentRoom OR @CurrentRoom IS NULL)
	AND ([StartRoom] = @StartRoom OR @StartRoom IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
  AND ([IsVn30] = @IsVn30 OR @IsVn30 IS NULL)
  
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [Stockno]
	, [StockSymbol]
	, [StockType]
	, [Ceiling]
	, [Floor]
	, [BigLotValue]
	, [SecurityName]
	, [SectorNo]
	, [Designated]
	, [SUSPENSION]
	, [Delist]
	, [HaltResumeFlag]
	, [SPLIT]
	, [Benefit]
	, [Meeting]
	, [Notice]
	, [ClientidRequired]
	, [CouponRate]
	, [IssueDate]
	, [MatureDate]
	, [AvrPrice]
	, [ParValue]
	, [SDCFlag]
	, [PriorClosePrice]
	, [PriorCloseDate]
	, [ProjectOpen]
	, [OpenPrice]
	, [Last]
	, [LastVol]
	, [LastVal]
	, [Highest]
	, [Lowest]
	, [Totalshares]
	, [TotalValue]
	, [AccumulateDeal]
	, [BigDeal]
	, [BigVolume]
	, [BigValue]
	, [OddDeal]
	, [OddVolume]
	, [OddValue]
	, [Best1Bid]
	, [Best1BidVolume]
	, [Best2Bid]
	, [Best2BidVolume]
	, [Best3Bid]
	, [Best3BidVolume]
	, [Best1Offer]
	, [Best1OfferVolume]
	, [Best2Offer]
	, [Best2OfferVolume]
	, [Best3Offer]
	, [Best3OfferVolume]
	, [BoardLost]
	, [TotalRoom]
	, [CurrentRoom]
	, [StartRoom]
	, [Sequence]
  , [IsVn30]
    FROM
	[dbo].[security_realtime]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([Stockno] = @Stockno AND @Stockno is not null)
	OR ([StockSymbol] = @StockSymbol AND @StockSymbol is not null)
	OR ([StockType] = @StockType AND @StockType is not null)
	OR ([Ceiling] = @Ceiling AND @Ceiling is not null)
	OR ([Floor] = @Floor AND @Floor is not null)
	OR ([BigLotValue] = @BigLotValue AND @BigLotValue is not null)
	OR ([SecurityName] = @SecurityName AND @SecurityName is not null)
	OR ([SectorNo] = @SectorNo AND @SectorNo is not null)
	OR ([Designated] = @Designated AND @Designated is not null)
	OR ([SUSPENSION] = @Suspension AND @Suspension is not null)
	OR ([Delist] = @Delist AND @Delist is not null)
	OR ([HaltResumeFlag] = @HaltResumeFlag AND @HaltResumeFlag is not null)
	OR ([SPLIT] = @Split AND @Split is not null)
	OR ([Benefit] = @Benefit AND @Benefit is not null)
	OR ([Meeting] = @Meeting AND @Meeting is not null)
	OR ([Notice] = @Notice AND @Notice is not null)
	OR ([ClientidRequired] = @ClientidRequired AND @ClientidRequired is not null)
	OR ([CouponRate] = @CouponRate AND @CouponRate is not null)
	OR ([IssueDate] = @IssueDate AND @IssueDate is not null)
	OR ([MatureDate] = @MatureDate AND @MatureDate is not null)
	OR ([AvrPrice] = @AvrPrice AND @AvrPrice is not null)
	OR ([ParValue] = @ParValue AND @ParValue is not null)
	OR ([SDCFlag] = @SdcFlag AND @SdcFlag is not null)
	OR ([PriorClosePrice] = @PriorClosePrice AND @PriorClosePrice is not null)
	OR ([PriorCloseDate] = @PriorCloseDate AND @PriorCloseDate is not null)
	OR ([ProjectOpen] = @ProjectOpen AND @ProjectOpen is not null)
	OR ([OpenPrice] = @OpenPrice AND @OpenPrice is not null)
	OR ([Last] = @Last AND @Last is not null)
	OR ([LastVol] = @LastVol AND @LastVol is not null)
	OR ([LastVal] = @LastVal AND @LastVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Totalshares] = @Totalshares AND @Totalshares is not null)
	OR ([TotalValue] = @TotalValue AND @TotalValue is not null)
	OR ([AccumulateDeal] = @AccumulateDeal AND @AccumulateDeal is not null)
	OR ([BigDeal] = @BigDeal AND @BigDeal is not null)
	OR ([BigVolume] = @BigVolume AND @BigVolume is not null)
	OR ([BigValue] = @BigValue AND @BigValue is not null)
	OR ([OddDeal] = @OddDeal AND @OddDeal is not null)
	OR ([OddVolume] = @OddVolume AND @OddVolume is not null)
	OR ([OddValue] = @OddValue AND @OddValue is not null)
	OR ([Best1Bid] = @Best1Bid AND @Best1Bid is not null)
	OR ([Best1BidVolume] = @Best1BidVolume AND @Best1BidVolume is not null)
	OR ([Best2Bid] = @Best2Bid AND @Best2Bid is not null)
	OR ([Best2BidVolume] = @Best2BidVolume AND @Best2BidVolume is not null)
	OR ([Best3Bid] = @Best3Bid AND @Best3Bid is not null)
	OR ([Best3BidVolume] = @Best3BidVolume AND @Best3BidVolume is not null)
	OR ([Best1Offer] = @Best1Offer AND @Best1Offer is not null)
	OR ([Best1OfferVolume] = @Best1OfferVolume AND @Best1OfferVolume is not null)
	OR ([Best2Offer] = @Best2Offer AND @Best2Offer is not null)
	OR ([Best2OfferVolume] = @Best2OfferVolume AND @Best2OfferVolume is not null)
	OR ([Best3Offer] = @Best3Offer AND @Best3Offer is not null)
	OR ([Best3OfferVolume] = @Best3OfferVolume AND @Best3OfferVolume is not null)
	OR ([BoardLost] = @BoardLost AND @BoardLost is not null)
	OR ([TotalRoom] = @TotalRoom AND @TotalRoom is not null)
	OR ([CurrentRoom] = @CurrentRoom AND @CurrentRoom is not null)
	OR ([StartRoom] = @StartRoom AND @StartRoom is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
  OR ([IsVn30] = @IsVn30 AND @IsVn30 is not null)
  
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="security_realtime_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the security_realtime table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[security_realtime] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[Stockno], O.[StockSymbol], O.[StockType], O.[Ceiling], O.[Floor], O.[BigLotValue], O.[SecurityName], O.[SectorNo], O.[Designated], O.[SUSPENSION], O.[Delist], O.[HaltResumeFlag], O.[SPLIT], O.[Benefit], O.[Meeting], O.[Notice], O.[ClientidRequired], O.[CouponRate], O.[IssueDate], O.[MatureDate], O.[AvrPrice], O.[ParValue], O.[SDCFlag], O.[PriorClosePrice], O.[PriorCloseDate], O.[ProjectOpen], O.[OpenPrice], O.[Last], O.[LastVol], O.[LastVal], O.[Highest], O.[Lowest], O.[Totalshares], O.[TotalValue], O.[AccumulateDeal], O.[BigDeal], O.[BigVolume], O.[BigValue], O.[OddDeal], O.[OddVolume], O.[OddValue], O.[Best1Bid], O.[Best1BidVolume], O.[Best2Bid], O.[Best2BidVolume], O.[Best3Bid], O.[Best3BidVolume], O.[Best1Offer], O.[Best1OfferVolume], O.[Best2Offer], O.[Best2OfferVolume], O.[Best3Offer], O.[Best3OfferVolume], O.[BoardLost], O.[TotalRoom], O.[CurrentRoom], O.[StartRoom], O.[Sequence], O.[IsVn30]
				FROM
				    [dbo].[security_realtime] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[security_realtime] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Matched_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Matched table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ID],
					[Code],
					[TradedDate],
					[Ceiling],
					[Floor],
					[RefPrice],
					[ClosePrice],
					[Change],
					[Percent],
					[Volume],
					[PutThrough],
					[ForeignBuy],
					[ForeignSell],
					[OpenPrice],
					[HighestPrice],
					[LowestPrice],
					[Market_id],
					[Value]
				FROM
					[dbo].[Matched]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Matched_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Matched table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[Matched]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ID], O.[Code], O.[TradedDate], O.[Ceiling], O.[Floor], O.[RefPrice], O.[ClosePrice], O.[Change], O.[Percent], O.[Volume], O.[PutThrough], O.[ForeignBuy], O.[ForeignSell], O.[OpenPrice], O.[HighestPrice], O.[LowestPrice], O.[Market_id], O.[Value]
				FROM
				    [dbo].[Matched] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Matched]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Matched_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Matched table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Code" type="nchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@TradedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Ceiling" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@RefPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ClosePrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Change" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Percent" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Volume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@PutThrough" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ForeignBuy" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ForeignSell" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@HighestPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@LowestPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketId" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Value" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Matched]
					(
					[Code]
					,[TradedDate]
					,[Ceiling]
					,[Floor]
					,[RefPrice]
					,[ClosePrice]
					,[Change]
					,[Percent]
					,[Volume]
					,[PutThrough]
					,[ForeignBuy]
					,[ForeignSell]
					,[OpenPrice]
					,[HighestPrice]
					,[LowestPrice]
					,[Market_id]
					,[Value]
					)
				VALUES
					(
					@Code
					,@TradedDate
					,@Ceiling
					,@Floor
					,@RefPrice
					,@ClosePrice
					,@Change
					,@Percent
					,@Volume
					,@PutThrough
					,@ForeignBuy
					,@ForeignSell
					,@OpenPrice
					,@HighestPrice
					,@LowestPrice
					,@MarketId
					,@Value
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Matched_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Matched table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Code" type="nchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@TradedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Ceiling" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@RefPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ClosePrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Change" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Percent" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Volume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@PutThrough" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ForeignBuy" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ForeignSell" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@HighestPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@LowestPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketId" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Value" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Matched]
				SET
					[Code] = @Code
					,[TradedDate] = @TradedDate
					,[Ceiling] = @Ceiling
					,[Floor] = @Floor
					,[RefPrice] = @RefPrice
					,[ClosePrice] = @ClosePrice
					,[Change] = @Change
					,[Percent] = @Percent
					,[Volume] = @Volume
					,[PutThrough] = @PutThrough
					,[ForeignBuy] = @ForeignBuy
					,[ForeignSell] = @ForeignSell
					,[OpenPrice] = @OpenPrice
					,[HighestPrice] = @HighestPrice
					,[LowestPrice] = @LowestPrice
					,[Market_id] = @MarketId
					,[Value] = @Value
				WHERE
[ID] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Matched_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Matched table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Matched] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Matched_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Matched table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ID],
					[Code],
					[TradedDate],
					[Ceiling],
					[Floor],
					[RefPrice],
					[ClosePrice],
					[Change],
					[Percent],
					[Volume],
					[PutThrough],
					[ForeignBuy],
					[ForeignSell],
					[OpenPrice],
					[HighestPrice],
					[LowestPrice],
					[Market_id],
					[Value]
				FROM
					[dbo].[Matched]
				WHERE
					[ID] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Matched_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Matched table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Code" type="nchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@TradedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Ceiling" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Floor" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@RefPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClosePrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Change" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Percent" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Volume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@PutThrough" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@ForeignBuy" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@ForeignSell" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@HighestPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@LowestPrice" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@MarketId" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@Value" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [Code]
	, [TradedDate]
	, [Ceiling]
	, [Floor]
	, [RefPrice]
	, [ClosePrice]
	, [Change]
	, [Percent]
	, [Volume]
	, [PutThrough]
	, [ForeignBuy]
	, [ForeignSell]
	, [OpenPrice]
	, [HighestPrice]
	, [LowestPrice]
	, [Market_id]
	, [Value]
    FROM
	[dbo].[Matched]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([Code] = @Code OR @Code IS NULL)
	AND ([TradedDate] = @TradedDate OR @TradedDate IS NULL)
	AND ([Ceiling] = @Ceiling OR @Ceiling IS NULL)
	AND ([Floor] = @Floor OR @Floor IS NULL)
	AND ([RefPrice] = @RefPrice OR @RefPrice IS NULL)
	AND ([ClosePrice] = @ClosePrice OR @ClosePrice IS NULL)
	AND ([Change] = @Change OR @Change IS NULL)
	AND ([Percent] = @Percent OR @Percent IS NULL)
	AND ([Volume] = @Volume OR @Volume IS NULL)
	AND ([PutThrough] = @PutThrough OR @PutThrough IS NULL)
	AND ([ForeignBuy] = @ForeignBuy OR @ForeignBuy IS NULL)
	AND ([ForeignSell] = @ForeignSell OR @ForeignSell IS NULL)
	AND ([OpenPrice] = @OpenPrice OR @OpenPrice IS NULL)
	AND ([HighestPrice] = @HighestPrice OR @HighestPrice IS NULL)
	AND ([LowestPrice] = @LowestPrice OR @LowestPrice IS NULL)
	AND ([Market_id] = @MarketId OR @MarketId IS NULL)
	AND ([Value] = @Value OR @Value IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [Code]
	, [TradedDate]
	, [Ceiling]
	, [Floor]
	, [RefPrice]
	, [ClosePrice]
	, [Change]
	, [Percent]
	, [Volume]
	, [PutThrough]
	, [ForeignBuy]
	, [ForeignSell]
	, [OpenPrice]
	, [HighestPrice]
	, [LowestPrice]
	, [Market_id]
	, [Value]
    FROM
	[dbo].[Matched]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([Code] = @Code AND @Code is not null)
	OR ([TradedDate] = @TradedDate AND @TradedDate is not null)
	OR ([Ceiling] = @Ceiling AND @Ceiling is not null)
	OR ([Floor] = @Floor AND @Floor is not null)
	OR ([RefPrice] = @RefPrice AND @RefPrice is not null)
	OR ([ClosePrice] = @ClosePrice AND @ClosePrice is not null)
	OR ([Change] = @Change AND @Change is not null)
	OR ([Percent] = @Percent AND @Percent is not null)
	OR ([Volume] = @Volume AND @Volume is not null)
	OR ([PutThrough] = @PutThrough AND @PutThrough is not null)
	OR ([ForeignBuy] = @ForeignBuy AND @ForeignBuy is not null)
	OR ([ForeignSell] = @ForeignSell AND @ForeignSell is not null)
	OR ([OpenPrice] = @OpenPrice AND @OpenPrice is not null)
	OR ([HighestPrice] = @HighestPrice AND @HighestPrice is not null)
	OR ([LowestPrice] = @LowestPrice AND @LowestPrice is not null)
	OR ([Market_id] = @MarketId AND @MarketId is not null)
	OR ([Value] = @Value AND @Value is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Matched_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Matched table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[Matched] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ID], O.[Code], O.[TradedDate], O.[Ceiling], O.[Floor], O.[RefPrice], O.[ClosePrice], O.[Change], O.[Percent], O.[Volume], O.[PutThrough], O.[ForeignBuy], O.[ForeignSell], O.[OpenPrice], O.[HighestPrice], O.[LowestPrice], O.[Market_id], O.[Value]
				FROM
				    [dbo].[Matched] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Matched] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="upcom_stocks_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the upcom_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ID],
					[TradeDate],
					[Stockno],
					[StockSymbol],
					[StockType],
					[Ceiling],
					[Floor],
					[SecurityName],
					[PriorClosePrice],
					[Last],
					[LastVol],
					[LastVal],
					[Highest],
					[Average],
					[Lowest],
					[Totalshares],
					[TotalValue],
					[Best1Bid],
					[Best1BidVolume],
					[Best2Bid],
					[Best2BidVolume],
					[Best3Bid],
					[Best3BidVolume],
					[Best1Offer],
					[Best1OfferVolume],
					[Best2Offer],
					[Best2OfferVolume],
					[Best3Offer],
					[Best3OfferVolume],
					[NM_TOTAL_TRADED_QTTY],
					[PREV_PRIOR_PRICE],
					[SELL_COUNT],
					[BUY_COUNT],
					[NM_TOTAL_TRADED_VALUE],
					[TOTAL_BID_QTTY],
					[TOTAL_SELL_TRADING_QTTY],
					[TOTAL_OFFER_QTTY],
					[AU_TOTAL_TRADED_QTTY],
					[TOTAL_BUY_TRADING_QTTY],
					[BID_COUNT],
					[OFFER_COUNT],
					[BUY_FOREIGN_QTTY],
					[BUY_FOREIGN_VALUE],
					[SELL_FOREIGN_QTTY],
					[SELL_FOREIGN_VALUE],
					[REMAIN_FOREIGN_QTTY],
					[PT_MATCH_PRICE],
					[PT_MATCH_QTTY],
					[PT_TOTAL_TRADED_QTTY],
					[PT_TOTAL_TRADED_VALUE],
					[TOTAL_LISTING_QTTY],
					[OPEN_PRICE],
					[CLOSE_PRICE],
					[AVERAGE_PRICE],
					[STATUS],
					[Sequence]
				FROM
					[dbo].[upcom_stocks]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="upcom_stocks_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the upcom_stocks table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[upcom_stocks]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Stockno], O.[StockSymbol], O.[StockType], O.[Ceiling], O.[Floor], O.[SecurityName], O.[PriorClosePrice], O.[Last], O.[LastVol], O.[LastVal], O.[Highest], O.[Average], O.[Lowest], O.[Totalshares], O.[TotalValue], O.[Best1Bid], O.[Best1BidVolume], O.[Best2Bid], O.[Best2BidVolume], O.[Best3Bid], O.[Best3BidVolume], O.[Best1Offer], O.[Best1OfferVolume], O.[Best2Offer], O.[Best2OfferVolume], O.[Best3Offer], O.[Best3OfferVolume], O.[NM_TOTAL_TRADED_QTTY], O.[PREV_PRIOR_PRICE], O.[SELL_COUNT], O.[BUY_COUNT], O.[NM_TOTAL_TRADED_VALUE], O.[TOTAL_BID_QTTY], O.[TOTAL_SELL_TRADING_QTTY], O.[TOTAL_OFFER_QTTY], O.[AU_TOTAL_TRADED_QTTY], O.[TOTAL_BUY_TRADING_QTTY], O.[BID_COUNT], O.[OFFER_COUNT], O.[BUY_FOREIGN_QTTY], O.[BUY_FOREIGN_VALUE], O.[SELL_FOREIGN_QTTY], O.[SELL_FOREIGN_VALUE], O.[REMAIN_FOREIGN_QTTY], O.[PT_MATCH_PRICE], O.[PT_MATCH_QTTY], O.[PT_TOTAL_TRADED_QTTY], O.[PT_TOTAL_TRADED_VALUE], O.[TOTAL_LISTING_QTTY], O.[OPEN_PRICE], O.[CLOSE_PRICE], O.[AVERAGE_PRICE], O.[STATUS], O.[Sequence]
				FROM
				    [dbo].[upcom_stocks] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[upcom_stocks]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="upcom_stocks_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the upcom_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SecurityName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Average" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PrevPriorPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBidQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalSellTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalOfferQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AuTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBuyTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BidCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OfferCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RemainForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalListingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AveragePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[upcom_stocks]
					(
					[TradeDate]
					,[Stockno]
					,[StockSymbol]
					,[StockType]
					,[Ceiling]
					,[Floor]
					,[SecurityName]
					,[PriorClosePrice]
					,[Last]
					,[LastVol]
					,[LastVal]
					,[Highest]
					,[Average]
					,[Lowest]
					,[Totalshares]
					,[TotalValue]
					,[Best1Bid]
					,[Best1BidVolume]
					,[Best2Bid]
					,[Best2BidVolume]
					,[Best3Bid]
					,[Best3BidVolume]
					,[Best1Offer]
					,[Best1OfferVolume]
					,[Best2Offer]
					,[Best2OfferVolume]
					,[Best3Offer]
					,[Best3OfferVolume]
					,[NM_TOTAL_TRADED_QTTY]
					,[PREV_PRIOR_PRICE]
					,[SELL_COUNT]
					,[BUY_COUNT]
					,[NM_TOTAL_TRADED_VALUE]
					,[TOTAL_BID_QTTY]
					,[TOTAL_SELL_TRADING_QTTY]
					,[TOTAL_OFFER_QTTY]
					,[AU_TOTAL_TRADED_QTTY]
					,[TOTAL_BUY_TRADING_QTTY]
					,[BID_COUNT]
					,[OFFER_COUNT]
					,[BUY_FOREIGN_QTTY]
					,[BUY_FOREIGN_VALUE]
					,[SELL_FOREIGN_QTTY]
					,[SELL_FOREIGN_VALUE]
					,[REMAIN_FOREIGN_QTTY]
					,[PT_MATCH_PRICE]
					,[PT_MATCH_QTTY]
					,[PT_TOTAL_TRADED_QTTY]
					,[PT_TOTAL_TRADED_VALUE]
					,[TOTAL_LISTING_QTTY]
					,[OPEN_PRICE]
					,[CLOSE_PRICE]
					,[AVERAGE_PRICE]
					,[STATUS]
					,[Sequence]
					)
				VALUES
					(
					@TradeDate
					,@Stockno
					,@StockSymbol
					,@StockType
					,@Ceiling
					,@Floor
					,@SecurityName
					,@PriorClosePrice
					,@Last
					,@LastVol
					,@LastVal
					,@Highest
					,@Average
					,@Lowest
					,@Totalshares
					,@TotalValue
					,@Best1Bid
					,@Best1BidVolume
					,@Best2Bid
					,@Best2BidVolume
					,@Best3Bid
					,@Best3BidVolume
					,@Best1Offer
					,@Best1OfferVolume
					,@Best2Offer
					,@Best2OfferVolume
					,@Best3Offer
					,@Best3OfferVolume
					,@NmTotalTradedQtty
					,@PrevPriorPrice
					,@SellCount
					,@BuyCount
					,@NmTotalTradedValue
					,@TotalBidQtty
					,@TotalSellTradingQtty
					,@TotalOfferQtty
					,@AuTotalTradedQtty
					,@TotalBuyTradingQtty
					,@BidCount
					,@OfferCount
					,@BuyForeignQtty
					,@BuyForeignValue
					,@SellForeignQtty
					,@SellForeignValue
					,@RemainForeignQtty
					,@PtMatchPrice
					,@PtMatchQtty
					,@PtTotalTradedQtty
					,@PtTotalTradedValue
					,@TotalListingQtty
					,@OpenPrice
					,@ClosePrice
					,@AveragePrice
					,@Status
					,@Sequence
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_stocks_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the upcom_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SecurityName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Average" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PrevPriorPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBidQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalSellTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalOfferQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AuTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBuyTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BidCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OfferCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RemainForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalListingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AveragePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[upcom_stocks]
				SET
					[TradeDate] = @TradeDate
					,[Stockno] = @Stockno
					,[StockSymbol] = @StockSymbol
					,[StockType] = @StockType
					,[Ceiling] = @Ceiling
					,[Floor] = @Floor
					,[SecurityName] = @SecurityName
					,[PriorClosePrice] = @PriorClosePrice
					,[Last] = @Last
					,[LastVol] = @LastVol
					,[LastVal] = @LastVal
					,[Highest] = @Highest
					,[Average] = @Average
					,[Lowest] = @Lowest
					,[Totalshares] = @Totalshares
					,[TotalValue] = @TotalValue
					,[Best1Bid] = @Best1Bid
					,[Best1BidVolume] = @Best1BidVolume
					,[Best2Bid] = @Best2Bid
					,[Best2BidVolume] = @Best2BidVolume
					,[Best3Bid] = @Best3Bid
					,[Best3BidVolume] = @Best3BidVolume
					,[Best1Offer] = @Best1Offer
					,[Best1OfferVolume] = @Best1OfferVolume
					,[Best2Offer] = @Best2Offer
					,[Best2OfferVolume] = @Best2OfferVolume
					,[Best3Offer] = @Best3Offer
					,[Best3OfferVolume] = @Best3OfferVolume
					,[NM_TOTAL_TRADED_QTTY] = @NmTotalTradedQtty
					,[PREV_PRIOR_PRICE] = @PrevPriorPrice
					,[SELL_COUNT] = @SellCount
					,[BUY_COUNT] = @BuyCount
					,[NM_TOTAL_TRADED_VALUE] = @NmTotalTradedValue
					,[TOTAL_BID_QTTY] = @TotalBidQtty
					,[TOTAL_SELL_TRADING_QTTY] = @TotalSellTradingQtty
					,[TOTAL_OFFER_QTTY] = @TotalOfferQtty
					,[AU_TOTAL_TRADED_QTTY] = @AuTotalTradedQtty
					,[TOTAL_BUY_TRADING_QTTY] = @TotalBuyTradingQtty
					,[BID_COUNT] = @BidCount
					,[OFFER_COUNT] = @OfferCount
					,[BUY_FOREIGN_QTTY] = @BuyForeignQtty
					,[BUY_FOREIGN_VALUE] = @BuyForeignValue
					,[SELL_FOREIGN_QTTY] = @SellForeignQtty
					,[SELL_FOREIGN_VALUE] = @SellForeignValue
					,[REMAIN_FOREIGN_QTTY] = @RemainForeignQtty
					,[PT_MATCH_PRICE] = @PtMatchPrice
					,[PT_MATCH_QTTY] = @PtMatchQtty
					,[PT_TOTAL_TRADED_QTTY] = @PtTotalTradedQtty
					,[PT_TOTAL_TRADED_VALUE] = @PtTotalTradedValue
					,[TOTAL_LISTING_QTTY] = @TotalListingQtty
					,[OPEN_PRICE] = @OpenPrice
					,[CLOSE_PRICE] = @ClosePrice
					,[AVERAGE_PRICE] = @AveragePrice
					,[STATUS] = @Status
					,[Sequence] = @Sequence
				WHERE
[ID] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_stocks_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the upcom_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[upcom_stocks] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_stocks_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the upcom_stocks table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ID],
					[TradeDate],
					[Stockno],
					[StockSymbol],
					[StockType],
					[Ceiling],
					[Floor],
					[SecurityName],
					[PriorClosePrice],
					[Last],
					[LastVol],
					[LastVal],
					[Highest],
					[Average],
					[Lowest],
					[Totalshares],
					[TotalValue],
					[Best1Bid],
					[Best1BidVolume],
					[Best2Bid],
					[Best2BidVolume],
					[Best3Bid],
					[Best3BidVolume],
					[Best1Offer],
					[Best1OfferVolume],
					[Best2Offer],
					[Best2OfferVolume],
					[Best3Offer],
					[Best3OfferVolume],
					[NM_TOTAL_TRADED_QTTY],
					[PREV_PRIOR_PRICE],
					[SELL_COUNT],
					[BUY_COUNT],
					[NM_TOTAL_TRADED_VALUE],
					[TOTAL_BID_QTTY],
					[TOTAL_SELL_TRADING_QTTY],
					[TOTAL_OFFER_QTTY],
					[AU_TOTAL_TRADED_QTTY],
					[TOTAL_BUY_TRADING_QTTY],
					[BID_COUNT],
					[OFFER_COUNT],
					[BUY_FOREIGN_QTTY],
					[BUY_FOREIGN_VALUE],
					[SELL_FOREIGN_QTTY],
					[SELL_FOREIGN_VALUE],
					[REMAIN_FOREIGN_QTTY],
					[PT_MATCH_PRICE],
					[PT_MATCH_QTTY],
					[PT_TOTAL_TRADED_QTTY],
					[PT_TOTAL_TRADED_VALUE],
					[TOTAL_LISTING_QTTY],
					[OPEN_PRICE],
					[CLOSE_PRICE],
					[AVERAGE_PRICE],
					[STATUS],
					[Sequence]
				FROM
					[dbo].[upcom_stocks]
				WHERE
					[ID] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="upcom_stocks_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the upcom_stocks table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SecurityName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Average" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@NmTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrevPriorPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SellCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BuyCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@NmTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalBidQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalSellTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalOfferQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AuTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalBuyTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BidCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OfferCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BuyForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BuyForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SellForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SellForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@RemainForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtMatchPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtMatchQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalListingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AveragePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Stockno]
	, [StockSymbol]
	, [StockType]
	, [Ceiling]
	, [Floor]
	, [SecurityName]
	, [PriorClosePrice]
	, [Last]
	, [LastVol]
	, [LastVal]
	, [Highest]
	, [Average]
	, [Lowest]
	, [Totalshares]
	, [TotalValue]
	, [Best1Bid]
	, [Best1BidVolume]
	, [Best2Bid]
	, [Best2BidVolume]
	, [Best3Bid]
	, [Best3BidVolume]
	, [Best1Offer]
	, [Best1OfferVolume]
	, [Best2Offer]
	, [Best2OfferVolume]
	, [Best3Offer]
	, [Best3OfferVolume]
	, [NM_TOTAL_TRADED_QTTY]
	, [PREV_PRIOR_PRICE]
	, [SELL_COUNT]
	, [BUY_COUNT]
	, [NM_TOTAL_TRADED_VALUE]
	, [TOTAL_BID_QTTY]
	, [TOTAL_SELL_TRADING_QTTY]
	, [TOTAL_OFFER_QTTY]
	, [AU_TOTAL_TRADED_QTTY]
	, [TOTAL_BUY_TRADING_QTTY]
	, [BID_COUNT]
	, [OFFER_COUNT]
	, [BUY_FOREIGN_QTTY]
	, [BUY_FOREIGN_VALUE]
	, [SELL_FOREIGN_QTTY]
	, [SELL_FOREIGN_VALUE]
	, [REMAIN_FOREIGN_QTTY]
	, [PT_MATCH_PRICE]
	, [PT_MATCH_QTTY]
	, [PT_TOTAL_TRADED_QTTY]
	, [PT_TOTAL_TRADED_VALUE]
	, [TOTAL_LISTING_QTTY]
	, [OPEN_PRICE]
	, [CLOSE_PRICE]
	, [AVERAGE_PRICE]
	, [STATUS]
	, [Sequence]
    FROM
	[dbo].[upcom_stocks]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([Stockno] = @Stockno OR @Stockno IS NULL)
	AND ([StockSymbol] = @StockSymbol OR @StockSymbol IS NULL)
	AND ([StockType] = @StockType OR @StockType IS NULL)
	AND ([Ceiling] = @Ceiling OR @Ceiling IS NULL)
	AND ([Floor] = @Floor OR @Floor IS NULL)
	AND ([SecurityName] = @SecurityName OR @SecurityName IS NULL)
	AND ([PriorClosePrice] = @PriorClosePrice OR @PriorClosePrice IS NULL)
	AND ([Last] = @Last OR @Last IS NULL)
	AND ([LastVol] = @LastVol OR @LastVol IS NULL)
	AND ([LastVal] = @LastVal OR @LastVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Average] = @Average OR @Average IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Totalshares] = @Totalshares OR @Totalshares IS NULL)
	AND ([TotalValue] = @TotalValue OR @TotalValue IS NULL)
	AND ([Best1Bid] = @Best1Bid OR @Best1Bid IS NULL)
	AND ([Best1BidVolume] = @Best1BidVolume OR @Best1BidVolume IS NULL)
	AND ([Best2Bid] = @Best2Bid OR @Best2Bid IS NULL)
	AND ([Best2BidVolume] = @Best2BidVolume OR @Best2BidVolume IS NULL)
	AND ([Best3Bid] = @Best3Bid OR @Best3Bid IS NULL)
	AND ([Best3BidVolume] = @Best3BidVolume OR @Best3BidVolume IS NULL)
	AND ([Best1Offer] = @Best1Offer OR @Best1Offer IS NULL)
	AND ([Best1OfferVolume] = @Best1OfferVolume OR @Best1OfferVolume IS NULL)
	AND ([Best2Offer] = @Best2Offer OR @Best2Offer IS NULL)
	AND ([Best2OfferVolume] = @Best2OfferVolume OR @Best2OfferVolume IS NULL)
	AND ([Best3Offer] = @Best3Offer OR @Best3Offer IS NULL)
	AND ([Best3OfferVolume] = @Best3OfferVolume OR @Best3OfferVolume IS NULL)
	AND ([NM_TOTAL_TRADED_QTTY] = @NmTotalTradedQtty OR @NmTotalTradedQtty IS NULL)
	AND ([PREV_PRIOR_PRICE] = @PrevPriorPrice OR @PrevPriorPrice IS NULL)
	AND ([SELL_COUNT] = @SellCount OR @SellCount IS NULL)
	AND ([BUY_COUNT] = @BuyCount OR @BuyCount IS NULL)
	AND ([NM_TOTAL_TRADED_VALUE] = @NmTotalTradedValue OR @NmTotalTradedValue IS NULL)
	AND ([TOTAL_BID_QTTY] = @TotalBidQtty OR @TotalBidQtty IS NULL)
	AND ([TOTAL_SELL_TRADING_QTTY] = @TotalSellTradingQtty OR @TotalSellTradingQtty IS NULL)
	AND ([TOTAL_OFFER_QTTY] = @TotalOfferQtty OR @TotalOfferQtty IS NULL)
	AND ([AU_TOTAL_TRADED_QTTY] = @AuTotalTradedQtty OR @AuTotalTradedQtty IS NULL)
	AND ([TOTAL_BUY_TRADING_QTTY] = @TotalBuyTradingQtty OR @TotalBuyTradingQtty IS NULL)
	AND ([BID_COUNT] = @BidCount OR @BidCount IS NULL)
	AND ([OFFER_COUNT] = @OfferCount OR @OfferCount IS NULL)
	AND ([BUY_FOREIGN_QTTY] = @BuyForeignQtty OR @BuyForeignQtty IS NULL)
	AND ([BUY_FOREIGN_VALUE] = @BuyForeignValue OR @BuyForeignValue IS NULL)
	AND ([SELL_FOREIGN_QTTY] = @SellForeignQtty OR @SellForeignQtty IS NULL)
	AND ([SELL_FOREIGN_VALUE] = @SellForeignValue OR @SellForeignValue IS NULL)
	AND ([REMAIN_FOREIGN_QTTY] = @RemainForeignQtty OR @RemainForeignQtty IS NULL)
	AND ([PT_MATCH_PRICE] = @PtMatchPrice OR @PtMatchPrice IS NULL)
	AND ([PT_MATCH_QTTY] = @PtMatchQtty OR @PtMatchQtty IS NULL)
	AND ([PT_TOTAL_TRADED_QTTY] = @PtTotalTradedQtty OR @PtTotalTradedQtty IS NULL)
	AND ([PT_TOTAL_TRADED_VALUE] = @PtTotalTradedValue OR @PtTotalTradedValue IS NULL)
	AND ([TOTAL_LISTING_QTTY] = @TotalListingQtty OR @TotalListingQtty IS NULL)
	AND ([OPEN_PRICE] = @OpenPrice OR @OpenPrice IS NULL)
	AND ([CLOSE_PRICE] = @ClosePrice OR @ClosePrice IS NULL)
	AND ([AVERAGE_PRICE] = @AveragePrice OR @AveragePrice IS NULL)
	AND ([STATUS] = @Status OR @Status IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Stockno]
	, [StockSymbol]
	, [StockType]
	, [Ceiling]
	, [Floor]
	, [SecurityName]
	, [PriorClosePrice]
	, [Last]
	, [LastVol]
	, [LastVal]
	, [Highest]
	, [Average]
	, [Lowest]
	, [Totalshares]
	, [TotalValue]
	, [Best1Bid]
	, [Best1BidVolume]
	, [Best2Bid]
	, [Best2BidVolume]
	, [Best3Bid]
	, [Best3BidVolume]
	, [Best1Offer]
	, [Best1OfferVolume]
	, [Best2Offer]
	, [Best2OfferVolume]
	, [Best3Offer]
	, [Best3OfferVolume]
	, [NM_TOTAL_TRADED_QTTY]
	, [PREV_PRIOR_PRICE]
	, [SELL_COUNT]
	, [BUY_COUNT]
	, [NM_TOTAL_TRADED_VALUE]
	, [TOTAL_BID_QTTY]
	, [TOTAL_SELL_TRADING_QTTY]
	, [TOTAL_OFFER_QTTY]
	, [AU_TOTAL_TRADED_QTTY]
	, [TOTAL_BUY_TRADING_QTTY]
	, [BID_COUNT]
	, [OFFER_COUNT]
	, [BUY_FOREIGN_QTTY]
	, [BUY_FOREIGN_VALUE]
	, [SELL_FOREIGN_QTTY]
	, [SELL_FOREIGN_VALUE]
	, [REMAIN_FOREIGN_QTTY]
	, [PT_MATCH_PRICE]
	, [PT_MATCH_QTTY]
	, [PT_TOTAL_TRADED_QTTY]
	, [PT_TOTAL_TRADED_VALUE]
	, [TOTAL_LISTING_QTTY]
	, [OPEN_PRICE]
	, [CLOSE_PRICE]
	, [AVERAGE_PRICE]
	, [STATUS]
	, [Sequence]
    FROM
	[dbo].[upcom_stocks]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([Stockno] = @Stockno AND @Stockno is not null)
	OR ([StockSymbol] = @StockSymbol AND @StockSymbol is not null)
	OR ([StockType] = @StockType AND @StockType is not null)
	OR ([Ceiling] = @Ceiling AND @Ceiling is not null)
	OR ([Floor] = @Floor AND @Floor is not null)
	OR ([SecurityName] = @SecurityName AND @SecurityName is not null)
	OR ([PriorClosePrice] = @PriorClosePrice AND @PriorClosePrice is not null)
	OR ([Last] = @Last AND @Last is not null)
	OR ([LastVol] = @LastVol AND @LastVol is not null)
	OR ([LastVal] = @LastVal AND @LastVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Average] = @Average AND @Average is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Totalshares] = @Totalshares AND @Totalshares is not null)
	OR ([TotalValue] = @TotalValue AND @TotalValue is not null)
	OR ([Best1Bid] = @Best1Bid AND @Best1Bid is not null)
	OR ([Best1BidVolume] = @Best1BidVolume AND @Best1BidVolume is not null)
	OR ([Best2Bid] = @Best2Bid AND @Best2Bid is not null)
	OR ([Best2BidVolume] = @Best2BidVolume AND @Best2BidVolume is not null)
	OR ([Best3Bid] = @Best3Bid AND @Best3Bid is not null)
	OR ([Best3BidVolume] = @Best3BidVolume AND @Best3BidVolume is not null)
	OR ([Best1Offer] = @Best1Offer AND @Best1Offer is not null)
	OR ([Best1OfferVolume] = @Best1OfferVolume AND @Best1OfferVolume is not null)
	OR ([Best2Offer] = @Best2Offer AND @Best2Offer is not null)
	OR ([Best2OfferVolume] = @Best2OfferVolume AND @Best2OfferVolume is not null)
	OR ([Best3Offer] = @Best3Offer AND @Best3Offer is not null)
	OR ([Best3OfferVolume] = @Best3OfferVolume AND @Best3OfferVolume is not null)
	OR ([NM_TOTAL_TRADED_QTTY] = @NmTotalTradedQtty AND @NmTotalTradedQtty is not null)
	OR ([PREV_PRIOR_PRICE] = @PrevPriorPrice AND @PrevPriorPrice is not null)
	OR ([SELL_COUNT] = @SellCount AND @SellCount is not null)
	OR ([BUY_COUNT] = @BuyCount AND @BuyCount is not null)
	OR ([NM_TOTAL_TRADED_VALUE] = @NmTotalTradedValue AND @NmTotalTradedValue is not null)
	OR ([TOTAL_BID_QTTY] = @TotalBidQtty AND @TotalBidQtty is not null)
	OR ([TOTAL_SELL_TRADING_QTTY] = @TotalSellTradingQtty AND @TotalSellTradingQtty is not null)
	OR ([TOTAL_OFFER_QTTY] = @TotalOfferQtty AND @TotalOfferQtty is not null)
	OR ([AU_TOTAL_TRADED_QTTY] = @AuTotalTradedQtty AND @AuTotalTradedQtty is not null)
	OR ([TOTAL_BUY_TRADING_QTTY] = @TotalBuyTradingQtty AND @TotalBuyTradingQtty is not null)
	OR ([BID_COUNT] = @BidCount AND @BidCount is not null)
	OR ([OFFER_COUNT] = @OfferCount AND @OfferCount is not null)
	OR ([BUY_FOREIGN_QTTY] = @BuyForeignQtty AND @BuyForeignQtty is not null)
	OR ([BUY_FOREIGN_VALUE] = @BuyForeignValue AND @BuyForeignValue is not null)
	OR ([SELL_FOREIGN_QTTY] = @SellForeignQtty AND @SellForeignQtty is not null)
	OR ([SELL_FOREIGN_VALUE] = @SellForeignValue AND @SellForeignValue is not null)
	OR ([REMAIN_FOREIGN_QTTY] = @RemainForeignQtty AND @RemainForeignQtty is not null)
	OR ([PT_MATCH_PRICE] = @PtMatchPrice AND @PtMatchPrice is not null)
	OR ([PT_MATCH_QTTY] = @PtMatchQtty AND @PtMatchQtty is not null)
	OR ([PT_TOTAL_TRADED_QTTY] = @PtTotalTradedQtty AND @PtTotalTradedQtty is not null)
	OR ([PT_TOTAL_TRADED_VALUE] = @PtTotalTradedValue AND @PtTotalTradedValue is not null)
	OR ([TOTAL_LISTING_QTTY] = @TotalListingQtty AND @TotalListingQtty is not null)
	OR ([OPEN_PRICE] = @OpenPrice AND @OpenPrice is not null)
	OR ([CLOSE_PRICE] = @ClosePrice AND @ClosePrice is not null)
	OR ([AVERAGE_PRICE] = @AveragePrice AND @AveragePrice is not null)
	OR ([STATUS] = @Status AND @Status is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="upcom_stocks_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the upcom_stocks table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[upcom_stocks] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Stockno], O.[StockSymbol], O.[StockType], O.[Ceiling], O.[Floor], O.[SecurityName], O.[PriorClosePrice], O.[Last], O.[LastVol], O.[LastVal], O.[Highest], O.[Average], O.[Lowest], O.[Totalshares], O.[TotalValue], O.[Best1Bid], O.[Best1BidVolume], O.[Best2Bid], O.[Best2BidVolume], O.[Best3Bid], O.[Best3BidVolume], O.[Best1Offer], O.[Best1OfferVolume], O.[Best2Offer], O.[Best2OfferVolume], O.[Best3Offer], O.[Best3OfferVolume], O.[NM_TOTAL_TRADED_QTTY], O.[PREV_PRIOR_PRICE], O.[SELL_COUNT], O.[BUY_COUNT], O.[NM_TOTAL_TRADED_VALUE], O.[TOTAL_BID_QTTY], O.[TOTAL_SELL_TRADING_QTTY], O.[TOTAL_OFFER_QTTY], O.[AU_TOTAL_TRADED_QTTY], O.[TOTAL_BUY_TRADING_QTTY], O.[BID_COUNT], O.[OFFER_COUNT], O.[BUY_FOREIGN_QTTY], O.[BUY_FOREIGN_VALUE], O.[SELL_FOREIGN_QTTY], O.[SELL_FOREIGN_VALUE], O.[REMAIN_FOREIGN_QTTY], O.[PT_MATCH_PRICE], O.[PT_MATCH_QTTY], O.[PT_TOTAL_TRADED_QTTY], O.[PT_TOTAL_TRADED_VALUE], O.[TOTAL_LISTING_QTTY], O.[OPEN_PRICE], O.[CLOSE_PRICE], O.[AVERAGE_PRICE], O.[STATUS], O.[Sequence]
				FROM
				    [dbo].[upcom_stocks] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[upcom_stocks] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="totalmarket_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the totalmarket table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[SetIndex],
					[TotalTrade],
					[Totalshare],
					[TotalValue],
					[UpVolume],
					[DownVolume],
					[NoChangeVolume],
					[Advances],
					[Declines],
					[Nochange],
					[Marketid],
					[Filler],
					[Time],
					[Status]
				FROM
					[dbo].[totalmarket]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="totalmarket_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the totalmarket table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[totalmarket]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[SetIndex], O.[TotalTrade], O.[Totalshare], O.[TotalValue], O.[UpVolume], O.[DownVolume], O.[NoChangeVolume], O.[Advances], O.[Declines], O.[Nochange], O.[Marketid], O.[Filler], O.[Time], O.[Status]
				FROM
				    [dbo].[totalmarket] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[totalmarket]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="totalmarket_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the totalmarket table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SetIndex" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@UpVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@DownVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NoChangeVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Advances" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Declines" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Marketid" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Filler" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[totalmarket]
					(
					[TradeDate]
					,[SetIndex]
					,[TotalTrade]
					,[Totalshare]
					,[TotalValue]
					,[UpVolume]
					,[DownVolume]
					,[NoChangeVolume]
					,[Advances]
					,[Declines]
					,[Nochange]
					,[Marketid]
					,[Filler]
					,[Time]
					,[Status]
					)
				VALUES
					(
					@TradeDate
					,@SetIndex
					,@TotalTrade
					,@Totalshare
					,@TotalValue
					,@UpVolume
					,@DownVolume
					,@NoChangeVolume
					,@Advances
					,@Declines
					,@Nochange
					,@Marketid
					,@Filler
					,@Time
					,@Status
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="totalmarket_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the totalmarket table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SetIndex" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@UpVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@DownVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NoChangeVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Advances" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Declines" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Marketid" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Filler" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[totalmarket]
				SET
					[TradeDate] = @TradeDate
					,[SetIndex] = @SetIndex
					,[TotalTrade] = @TotalTrade
					,[Totalshare] = @Totalshare
					,[TotalValue] = @TotalValue
					,[UpVolume] = @UpVolume
					,[DownVolume] = @DownVolume
					,[NoChangeVolume] = @NoChangeVolume
					,[Advances] = @Advances
					,[Declines] = @Declines
					,[Nochange] = @Nochange
					,[Marketid] = @Marketid
					,[Filler] = @Filler
					,[Time] = @Time
					,[Status] = @Status
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="totalmarket_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the totalmarket table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[totalmarket] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="totalmarket_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the totalmarket table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[SetIndex],
					[TotalTrade],
					[Totalshare],
					[TotalValue],
					[UpVolume],
					[DownVolume],
					[NoChangeVolume],
					[Advances],
					[Declines],
					[Nochange],
					[Marketid],
					[Filler],
					[Time],
					[Status]
				FROM
					[dbo].[totalmarket]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="totalmarket_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the totalmarket table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SetIndex" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@DownVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@NoChangeVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Advances" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Declines" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Nochange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Marketid" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Filler" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [SetIndex]
	, [TotalTrade]
	, [Totalshare]
	, [TotalValue]
	, [UpVolume]
	, [DownVolume]
	, [NoChangeVolume]
	, [Advances]
	, [Declines]
	, [Nochange]
	, [Marketid]
	, [Filler]
	, [Time]
	, [Status]
    FROM
	[dbo].[totalmarket]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([SetIndex] = @SetIndex OR @SetIndex IS NULL)
	AND ([TotalTrade] = @TotalTrade OR @TotalTrade IS NULL)
	AND ([Totalshare] = @Totalshare OR @Totalshare IS NULL)
	AND ([TotalValue] = @TotalValue OR @TotalValue IS NULL)
	AND ([UpVolume] = @UpVolume OR @UpVolume IS NULL)
	AND ([DownVolume] = @DownVolume OR @DownVolume IS NULL)
	AND ([NoChangeVolume] = @NoChangeVolume OR @NoChangeVolume IS NULL)
	AND ([Advances] = @Advances OR @Advances IS NULL)
	AND ([Declines] = @Declines OR @Declines IS NULL)
	AND ([Nochange] = @Nochange OR @Nochange IS NULL)
	AND ([Marketid] = @Marketid OR @Marketid IS NULL)
	AND ([Filler] = @Filler OR @Filler IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [SetIndex]
	, [TotalTrade]
	, [Totalshare]
	, [TotalValue]
	, [UpVolume]
	, [DownVolume]
	, [NoChangeVolume]
	, [Advances]
	, [Declines]
	, [Nochange]
	, [Marketid]
	, [Filler]
	, [Time]
	, [Status]
    FROM
	[dbo].[totalmarket]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([SetIndex] = @SetIndex AND @SetIndex is not null)
	OR ([TotalTrade] = @TotalTrade AND @TotalTrade is not null)
	OR ([Totalshare] = @Totalshare AND @Totalshare is not null)
	OR ([TotalValue] = @TotalValue AND @TotalValue is not null)
	OR ([UpVolume] = @UpVolume AND @UpVolume is not null)
	OR ([DownVolume] = @DownVolume AND @DownVolume is not null)
	OR ([NoChangeVolume] = @NoChangeVolume AND @NoChangeVolume is not null)
	OR ([Advances] = @Advances AND @Advances is not null)
	OR ([Declines] = @Declines AND @Declines is not null)
	OR ([Nochange] = @Nochange AND @Nochange is not null)
	OR ([Marketid] = @Marketid AND @Marketid is not null)
	OR ([Filler] = @Filler AND @Filler is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([Status] = @Status AND @Status is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="totalmarket_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the totalmarket table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[totalmarket] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[SetIndex], O.[TotalTrade], O.[Totalshare], O.[TotalValue], O.[UpVolume], O.[DownVolume], O.[NoChangeVolume], O.[Advances], O.[Declines], O.[Nochange], O.[Marketid], O.[Filler], O.[Time], O.[Status]
				FROM
				    [dbo].[totalmarket] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[totalmarket] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="le_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the le table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[StockNo],
					[Price],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Turn],
					[Time]
				FROM
					[dbo].[le]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="le_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the le table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[le]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockNo], O.[Price], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Turn], O.[Time]
				FROM
				    [dbo].[le] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[le]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="le_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the le table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockNo" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Price" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Turn" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[le]
					(
					[TradeDate]
					,[StockNo]
					,[Price]
					,[AccumulatedVol]
					,[AccumulatedVal]
					,[Highest]
					,[Lowest]
					,[Turn]
					,[Time]
					)
				VALUES
					(
					@TradeDate
					,@StockNo
					,@Price
					,@AccumulatedVol
					,@AccumulatedVal
					,@Highest
					,@Lowest
					,@Turn
					,@Time
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="le_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the le table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockNo" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Price" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Turn" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[le]
				SET
					[TradeDate] = @TradeDate
					,[StockNo] = @StockNo
					,[Price] = @Price
					,[AccumulatedVol] = @AccumulatedVol
					,[AccumulatedVal] = @AccumulatedVal
					,[Highest] = @Highest
					,[Lowest] = @Lowest
					,[Turn] = @Turn
					,[Time] = @Time
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="le_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the le table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[le] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="le_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the le table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[StockNo],
					[Price],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Turn],
					[Time]
				FROM
					[dbo].[le]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="le_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the le table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@StockNo" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Price" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Turn" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockNo]
	, [Price]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Turn]
	, [Time]
    FROM
	[dbo].[le]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([StockNo] = @StockNo OR @StockNo IS NULL)
	AND ([Price] = @Price OR @Price IS NULL)
	AND ([AccumulatedVol] = @AccumulatedVol OR @AccumulatedVol IS NULL)
	AND ([AccumulatedVal] = @AccumulatedVal OR @AccumulatedVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Turn] = @Turn OR @Turn IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockNo]
	, [Price]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Turn]
	, [Time]
    FROM
	[dbo].[le]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([StockNo] = @StockNo AND @StockNo is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([AccumulatedVol] = @AccumulatedVol AND @AccumulatedVol is not null)
	OR ([AccumulatedVal] = @AccumulatedVal AND @AccumulatedVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Turn] = @Turn AND @Turn is not null)
	OR ([Time] = @Time AND @Time is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="le_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the le table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[le] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockNo], O.[Price], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Turn], O.[Time]
				FROM
				    [dbo].[le] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[le] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="upcom_market_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the upcom_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[SetIndex],
					[TotalTrade],
					[Totalshare],
					[TotalValue],
					[Advances],
					[Nochange],
					[Declines],
					[Time],
					[OpenIndex]
				FROM
					[dbo].[upcom_market]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="upcom_market_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the upcom_market table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[upcom_market]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[SetIndex], O.[TotalTrade], O.[Totalshare], O.[TotalValue], O.[Advances], O.[Nochange], O.[Declines], O.[Time], O.[OpenIndex]
				FROM
				    [dbo].[upcom_market] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[upcom_market]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="upcom_market_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the upcom_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SetIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Advances" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochange" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Declines" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[upcom_market]
					(
					[TradeDate]
					,[SetIndex]
					,[TotalTrade]
					,[Totalshare]
					,[TotalValue]
					,[Advances]
					,[Nochange]
					,[Declines]
					,[Time]
					,[OpenIndex]
					)
				VALUES
					(
					@TradeDate
					,@SetIndex
					,@TotalTrade
					,@Totalshare
					,@TotalValue
					,@Advances
					,@Nochange
					,@Declines
					,@Time
					,@OpenIndex
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_market_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the upcom_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SetIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Advances" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochange" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Declines" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[upcom_market]
				SET
					[TradeDate] = @TradeDate
					,[SetIndex] = @SetIndex
					,[TotalTrade] = @TotalTrade
					,[Totalshare] = @Totalshare
					,[TotalValue] = @TotalValue
					,[Advances] = @Advances
					,[Nochange] = @Nochange
					,[Declines] = @Declines
					,[Time] = @Time
					,[OpenIndex] = @OpenIndex
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_market_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the upcom_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[upcom_market] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_market_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the upcom_market table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[SetIndex],
					[TotalTrade],
					[Totalshare],
					[TotalValue],
					[Advances],
					[Nochange],
					[Declines],
					[Time],
					[OpenIndex]
				FROM
					[dbo].[upcom_market]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="upcom_market_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the upcom_market table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SetIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Advances" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Nochange" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Declines" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [SetIndex]
	, [TotalTrade]
	, [Totalshare]
	, [TotalValue]
	, [Advances]
	, [Nochange]
	, [Declines]
	, [Time]
	, [OpenIndex]
    FROM
	[dbo].[upcom_market]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([SetIndex] = @SetIndex OR @SetIndex IS NULL)
	AND ([TotalTrade] = @TotalTrade OR @TotalTrade IS NULL)
	AND ([Totalshare] = @Totalshare OR @Totalshare IS NULL)
	AND ([TotalValue] = @TotalValue OR @TotalValue IS NULL)
	AND ([Advances] = @Advances OR @Advances IS NULL)
	AND ([Nochange] = @Nochange OR @Nochange IS NULL)
	AND ([Declines] = @Declines OR @Declines IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([OpenIndex] = @OpenIndex OR @OpenIndex IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [SetIndex]
	, [TotalTrade]
	, [Totalshare]
	, [TotalValue]
	, [Advances]
	, [Nochange]
	, [Declines]
	, [Time]
	, [OpenIndex]
    FROM
	[dbo].[upcom_market]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([SetIndex] = @SetIndex AND @SetIndex is not null)
	OR ([TotalTrade] = @TotalTrade AND @TotalTrade is not null)
	OR ([Totalshare] = @Totalshare AND @Totalshare is not null)
	OR ([TotalValue] = @TotalValue AND @TotalValue is not null)
	OR ([Advances] = @Advances AND @Advances is not null)
	OR ([Nochange] = @Nochange AND @Nochange is not null)
	OR ([Declines] = @Declines AND @Declines is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([OpenIndex] = @OpenIndex AND @OpenIndex is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="upcom_market_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the upcom_market table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[upcom_market] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[SetIndex], O.[TotalTrade], O.[Totalshare], O.[TotalValue], O.[Advances], O.[Nochange], O.[Declines], O.[Time], O.[OpenIndex]
				FROM
				    [dbo].[upcom_market] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[upcom_market] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hastc_market_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the hastc_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[SetIndex],
					[TotalTrade],
					[Totalshare],
					[TotalValue],
					[Advances],
					[Nochange],
					[Declines],
					[Time],
					[OpenIndex]
				FROM
					[dbo].[hastc_market]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hastc_market_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hastc_market table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[hastc_market]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[SetIndex], O.[TotalTrade], O.[Totalshare], O.[TotalValue], O.[Advances], O.[Nochange], O.[Declines], O.[Time], O.[OpenIndex]
				FROM
				    [dbo].[hastc_market] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[hastc_market]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="hastc_market_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the hastc_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SetIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Advances" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochange" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Declines" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[hastc_market]
					(
					[TradeDate]
					,[SetIndex]
					,[TotalTrade]
					,[Totalshare]
					,[TotalValue]
					,[Advances]
					,[Nochange]
					,[Declines]
					,[Time]
					,[OpenIndex]
					)
				VALUES
					(
					@TradeDate
					,@SetIndex
					,@TotalTrade
					,@Totalshare
					,@TotalValue
					,@Advances
					,@Nochange
					,@Declines
					,@Time
					,@OpenIndex
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_market_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the hastc_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SetIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Advances" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochange" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Declines" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[hastc_market]
				SET
					[TradeDate] = @TradeDate
					,[SetIndex] = @SetIndex
					,[TotalTrade] = @TotalTrade
					,[Totalshare] = @Totalshare
					,[TotalValue] = @TotalValue
					,[Advances] = @Advances
					,[Nochange] = @Nochange
					,[Declines] = @Declines
					,[Time] = @Time
					,[OpenIndex] = @OpenIndex
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_market_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the hastc_market table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[hastc_market] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_market_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the hastc_market table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[SetIndex],
					[TotalTrade],
					[Totalshare],
					[TotalValue],
					[Advances],
					[Nochange],
					[Declines],
					[Time],
					[OpenIndex]
				FROM
					[dbo].[hastc_market]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="hastc_market_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the hastc_market table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SetIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalTrade" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Totalshare" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Advances" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Nochange" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Declines" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenIndex" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [SetIndex]
	, [TotalTrade]
	, [Totalshare]
	, [TotalValue]
	, [Advances]
	, [Nochange]
	, [Declines]
	, [Time]
	, [OpenIndex]
    FROM
	[dbo].[hastc_market]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([SetIndex] = @SetIndex OR @SetIndex IS NULL)
	AND ([TotalTrade] = @TotalTrade OR @TotalTrade IS NULL)
	AND ([Totalshare] = @Totalshare OR @Totalshare IS NULL)
	AND ([TotalValue] = @TotalValue OR @TotalValue IS NULL)
	AND ([Advances] = @Advances OR @Advances IS NULL)
	AND ([Nochange] = @Nochange OR @Nochange IS NULL)
	AND ([Declines] = @Declines OR @Declines IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([OpenIndex] = @OpenIndex OR @OpenIndex IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [SetIndex]
	, [TotalTrade]
	, [Totalshare]
	, [TotalValue]
	, [Advances]
	, [Nochange]
	, [Declines]
	, [Time]
	, [OpenIndex]
    FROM
	[dbo].[hastc_market]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([SetIndex] = @SetIndex AND @SetIndex is not null)
	OR ([TotalTrade] = @TotalTrade AND @TotalTrade is not null)
	OR ([Totalshare] = @Totalshare AND @Totalshare is not null)
	OR ([TotalValue] = @TotalValue AND @TotalValue is not null)
	OR ([Advances] = @Advances AND @Advances is not null)
	OR ([Nochange] = @Nochange AND @Nochange is not null)
	OR ([Declines] = @Declines AND @Declines is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([OpenIndex] = @OpenIndex AND @OpenIndex is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="hastc_market_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hastc_market table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[hastc_market] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[SetIndex], O.[TotalTrade], O.[Totalshare], O.[TotalValue], O.[Advances], O.[Nochange], O.[Declines], O.[Time], O.[OpenIndex]
				FROM
				    [dbo].[hastc_market] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[hastc_market] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Language_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Language table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[LanguageId],
					[LanguageName],
					[LanguageCode],
					[Order]
				FROM
					[dbo].[Language]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Language_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Language table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LanguageId] nvarchar(10) COLLATE database_default  
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([LanguageId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [LanguageId]'
				SET @SQL = @SQL + ' FROM [dbo].[Language]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[LanguageId], O.[LanguageName], O.[LanguageCode], O.[Order]
				FROM
				    [dbo].[Language] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[LanguageId] = PageIndex.[LanguageId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Language]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Language_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Language table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@LanguageName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@LanguageCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Order" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Language]
					(
					[LanguageId]
					,[LanguageName]
					,[LanguageCode]
					,[Order]
					)
				VALUES
					(
					@LanguageId
					,@LanguageName
					,@LanguageCode
					,@Order
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Language_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Language table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@OriginalLanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@LanguageName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@LanguageCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Order" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Language]
				SET
					[LanguageId] = @LanguageId
					,[LanguageName] = @LanguageName
					,[LanguageCode] = @LanguageCode
					,[Order] = @Order
				WHERE
[LanguageId] = @OriginalLanguageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Language_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Language table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Language] WITH (ROWLOCK) 
				WHERE
					[LanguageId] = @LanguageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Language_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Language table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[LanguageId],
					[LanguageName],
					[LanguageCode],
					[Order]
				FROM
					[dbo].[Language]
				WHERE
					[LanguageId] = @LanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Language_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Language table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@LanguageName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@LanguageCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Order" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LanguageId]
	, [LanguageName]
	, [LanguageCode]
	, [Order]
    FROM
	[dbo].[Language]
    WHERE 
	 ([LanguageId] = @LanguageId OR @LanguageId IS NULL)
	AND ([LanguageName] = @LanguageName OR @LanguageName IS NULL)
	AND ([LanguageCode] = @LanguageCode OR @LanguageCode IS NULL)
	AND ([Order] = @Order OR @Order IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LanguageId]
	, [LanguageName]
	, [LanguageCode]
	, [Order]
    FROM
	[dbo].[Language]
    WHERE 
	 ([LanguageId] = @LanguageId AND @LanguageId is not null)
	OR ([LanguageName] = @LanguageName AND @LanguageName is not null)
	OR ([LanguageCode] = @LanguageCode AND @LanguageCode is not null)
	OR ([Order] = @Order AND @Order is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Language_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Language table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LanguageId] nvarchar(10) COLLATE database_default  
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [LanguageId] )
				SELECT TOP {3} [LanguageId]
				FROM [dbo].[Language] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[LanguageId], O.[LanguageName], O.[LanguageCode], O.[Order]
				FROM
				    [dbo].[Language] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[LanguageId] = PageIndex.[LanguageId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Language] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hastc_stocks_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the hastc_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ID],
					[TradeDate],
					[Stockno],
					[StockSymbol],
					[StockType],
					[Ceiling],
					[Floor],
					[SecurityName],
					[PriorClosePrice],
					[Last],
					[LastVol],
					[LastVal],
					[Highest],
					[Average],
					[Lowest],
					[Totalshares],
					[TotalValue],
					[Best1Bid],
					[Best1BidVolume],
					[Best2Bid],
					[Best2BidVolume],
					[Best3Bid],
					[Best3BidVolume],
					[Best1Offer],
					[Best1OfferVolume],
					[Best2Offer],
					[Best2OfferVolume],
					[Best3Offer],
					[Best3OfferVolume],
					[NM_TOTAL_TRADED_QTTY],
					[PREV_PRIOR_PRICE],
					[SELL_COUNT],
					[BUY_COUNT],
					[NM_TOTAL_TRADED_VALUE],
					[TOTAL_BID_QTTY],
					[TOTAL_SELL_TRADING_QTTY],
					[TOTAL_OFFER_QTTY],
					[TOTAL_BUY_TRADING_QTTY],
					[BID_COUNT],
					[OFFER_COUNT],
					[BUY_FOREIGN_QTTY],
					[BUY_FOREIGN_VALUE],
					[SELL_FOREIGN_QTTY],
					[SELL_FOREIGN_VALUE],
					[REMAIN_FOREIGN_QTTY],
					[PT_MATCH_PRICE],
					[PT_MATCH_QTTY],
					[PT_TOTAL_TRADED_QTTY],
					[PT_TOTAL_TRADED_VALUE],
					[TOTAL_LISTING_QTTY],
					[OPEN_PRICE],
					[CLOSE_PRICE],
					[AVERAGE_PRICE],
					[STATUS],
					[Sequence]
				FROM
					[dbo].[hastc_stocks]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hastc_stocks_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hastc_stocks table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[hastc_stocks]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Stockno], O.[StockSymbol], O.[StockType], O.[Ceiling], O.[Floor], O.[SecurityName], O.[PriorClosePrice], O.[Last], O.[LastVol], O.[LastVal], O.[Highest], O.[Average], O.[Lowest], O.[Totalshares], O.[TotalValue], O.[Best1Bid], O.[Best1BidVolume], O.[Best2Bid], O.[Best2BidVolume], O.[Best3Bid], O.[Best3BidVolume], O.[Best1Offer], O.[Best1OfferVolume], O.[Best2Offer], O.[Best2OfferVolume], O.[Best3Offer], O.[Best3OfferVolume], O.[NM_TOTAL_TRADED_QTTY], O.[PREV_PRIOR_PRICE], O.[SELL_COUNT], O.[BUY_COUNT], O.[NM_TOTAL_TRADED_VALUE], O.[TOTAL_BID_QTTY], O.[TOTAL_SELL_TRADING_QTTY], O.[TOTAL_OFFER_QTTY], O.[TOTAL_BUY_TRADING_QTTY], O.[BID_COUNT], O.[OFFER_COUNT], O.[BUY_FOREIGN_QTTY], O.[BUY_FOREIGN_VALUE], O.[SELL_FOREIGN_QTTY], O.[SELL_FOREIGN_VALUE], O.[REMAIN_FOREIGN_QTTY], O.[PT_MATCH_PRICE], O.[PT_MATCH_QTTY], O.[PT_TOTAL_TRADED_QTTY], O.[PT_TOTAL_TRADED_VALUE], O.[TOTAL_LISTING_QTTY], O.[OPEN_PRICE], O.[CLOSE_PRICE], O.[AVERAGE_PRICE], O.[STATUS], O.[Sequence]
				FROM
				    [dbo].[hastc_stocks] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[hastc_stocks]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="hastc_stocks_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the hastc_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SecurityName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Average" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PrevPriorPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBidQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalSellTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalOfferQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBuyTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BidCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OfferCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RemainForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalListingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AveragePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[hastc_stocks]
					(
					[TradeDate]
					,[Stockno]
					,[StockSymbol]
					,[StockType]
					,[Ceiling]
					,[Floor]
					,[SecurityName]
					,[PriorClosePrice]
					,[Last]
					,[LastVol]
					,[LastVal]
					,[Highest]
					,[Average]
					,[Lowest]
					,[Totalshares]
					,[TotalValue]
					,[Best1Bid]
					,[Best1BidVolume]
					,[Best2Bid]
					,[Best2BidVolume]
					,[Best3Bid]
					,[Best3BidVolume]
					,[Best1Offer]
					,[Best1OfferVolume]
					,[Best2Offer]
					,[Best2OfferVolume]
					,[Best3Offer]
					,[Best3OfferVolume]
					,[NM_TOTAL_TRADED_QTTY]
					,[PREV_PRIOR_PRICE]
					,[SELL_COUNT]
					,[BUY_COUNT]
					,[NM_TOTAL_TRADED_VALUE]
					,[TOTAL_BID_QTTY]
					,[TOTAL_SELL_TRADING_QTTY]
					,[TOTAL_OFFER_QTTY]
					,[TOTAL_BUY_TRADING_QTTY]
					,[BID_COUNT]
					,[OFFER_COUNT]
					,[BUY_FOREIGN_QTTY]
					,[BUY_FOREIGN_VALUE]
					,[SELL_FOREIGN_QTTY]
					,[SELL_FOREIGN_VALUE]
					,[REMAIN_FOREIGN_QTTY]
					,[PT_MATCH_PRICE]
					,[PT_MATCH_QTTY]
					,[PT_TOTAL_TRADED_QTTY]
					,[PT_TOTAL_TRADED_VALUE]
					,[TOTAL_LISTING_QTTY]
					,[OPEN_PRICE]
					,[CLOSE_PRICE]
					,[AVERAGE_PRICE]
					,[STATUS]
					,[Sequence]
					)
				VALUES
					(
					@TradeDate
					,@Stockno
					,@StockSymbol
					,@StockType
					,@Ceiling
					,@Floor
					,@SecurityName
					,@PriorClosePrice
					,@Last
					,@LastVol
					,@LastVal
					,@Highest
					,@Average
					,@Lowest
					,@Totalshares
					,@TotalValue
					,@Best1Bid
					,@Best1BidVolume
					,@Best2Bid
					,@Best2BidVolume
					,@Best3Bid
					,@Best3BidVolume
					,@Best1Offer
					,@Best1OfferVolume
					,@Best2Offer
					,@Best2OfferVolume
					,@Best3Offer
					,@Best3OfferVolume
					,@NmTotalTradedQtty
					,@PrevPriorPrice
					,@SellCount
					,@BuyCount
					,@NmTotalTradedValue
					,@TotalBidQtty
					,@TotalSellTradingQtty
					,@TotalOfferQtty
					,@TotalBuyTradingQtty
					,@BidCount
					,@OfferCount
					,@BuyForeignQtty
					,@BuyForeignValue
					,@SellForeignQtty
					,@SellForeignValue
					,@RemainForeignQtty
					,@PtMatchPrice
					,@PtMatchQtty
					,@PtTotalTradedQtty
					,@PtTotalTradedValue
					,@TotalListingQtty
					,@OpenPrice
					,@ClosePrice
					,@AveragePrice
					,@Status
					,@Sequence
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_stocks_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the hastc_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SecurityName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Average" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PrevPriorPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@NmTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBidQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalSellTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalOfferQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalBuyTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BidCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OfferCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@BuyForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@SellForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RemainForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtMatchQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PtTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalListingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AveragePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[hastc_stocks]
				SET
					[TradeDate] = @TradeDate
					,[Stockno] = @Stockno
					,[StockSymbol] = @StockSymbol
					,[StockType] = @StockType
					,[Ceiling] = @Ceiling
					,[Floor] = @Floor
					,[SecurityName] = @SecurityName
					,[PriorClosePrice] = @PriorClosePrice
					,[Last] = @Last
					,[LastVol] = @LastVol
					,[LastVal] = @LastVal
					,[Highest] = @Highest
					,[Average] = @Average
					,[Lowest] = @Lowest
					,[Totalshares] = @Totalshares
					,[TotalValue] = @TotalValue
					,[Best1Bid] = @Best1Bid
					,[Best1BidVolume] = @Best1BidVolume
					,[Best2Bid] = @Best2Bid
					,[Best2BidVolume] = @Best2BidVolume
					,[Best3Bid] = @Best3Bid
					,[Best3BidVolume] = @Best3BidVolume
					,[Best1Offer] = @Best1Offer
					,[Best1OfferVolume] = @Best1OfferVolume
					,[Best2Offer] = @Best2Offer
					,[Best2OfferVolume] = @Best2OfferVolume
					,[Best3Offer] = @Best3Offer
					,[Best3OfferVolume] = @Best3OfferVolume
					,[NM_TOTAL_TRADED_QTTY] = @NmTotalTradedQtty
					,[PREV_PRIOR_PRICE] = @PrevPriorPrice
					,[SELL_COUNT] = @SellCount
					,[BUY_COUNT] = @BuyCount
					,[NM_TOTAL_TRADED_VALUE] = @NmTotalTradedValue
					,[TOTAL_BID_QTTY] = @TotalBidQtty
					,[TOTAL_SELL_TRADING_QTTY] = @TotalSellTradingQtty
					,[TOTAL_OFFER_QTTY] = @TotalOfferQtty
					,[TOTAL_BUY_TRADING_QTTY] = @TotalBuyTradingQtty
					,[BID_COUNT] = @BidCount
					,[OFFER_COUNT] = @OfferCount
					,[BUY_FOREIGN_QTTY] = @BuyForeignQtty
					,[BUY_FOREIGN_VALUE] = @BuyForeignValue
					,[SELL_FOREIGN_QTTY] = @SellForeignQtty
					,[SELL_FOREIGN_VALUE] = @SellForeignValue
					,[REMAIN_FOREIGN_QTTY] = @RemainForeignQtty
					,[PT_MATCH_PRICE] = @PtMatchPrice
					,[PT_MATCH_QTTY] = @PtMatchQtty
					,[PT_TOTAL_TRADED_QTTY] = @PtTotalTradedQtty
					,[PT_TOTAL_TRADED_VALUE] = @PtTotalTradedValue
					,[TOTAL_LISTING_QTTY] = @TotalListingQtty
					,[OPEN_PRICE] = @OpenPrice
					,[CLOSE_PRICE] = @ClosePrice
					,[AVERAGE_PRICE] = @AveragePrice
					,[STATUS] = @Status
					,[Sequence] = @Sequence
				WHERE
[ID] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_stocks_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the hastc_stocks table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[hastc_stocks] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_stocks_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the hastc_stocks table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ID],
					[TradeDate],
					[Stockno],
					[StockSymbol],
					[StockType],
					[Ceiling],
					[Floor],
					[SecurityName],
					[PriorClosePrice],
					[Last],
					[LastVol],
					[LastVal],
					[Highest],
					[Average],
					[Lowest],
					[Totalshares],
					[TotalValue],
					[Best1Bid],
					[Best1BidVolume],
					[Best2Bid],
					[Best2BidVolume],
					[Best3Bid],
					[Best3BidVolume],
					[Best1Offer],
					[Best1OfferVolume],
					[Best2Offer],
					[Best2OfferVolume],
					[Best3Offer],
					[Best3OfferVolume],
					[NM_TOTAL_TRADED_QTTY],
					[PREV_PRIOR_PRICE],
					[SELL_COUNT],
					[BUY_COUNT],
					[NM_TOTAL_TRADED_VALUE],
					[TOTAL_BID_QTTY],
					[TOTAL_SELL_TRADING_QTTY],
					[TOTAL_OFFER_QTTY],
					[TOTAL_BUY_TRADING_QTTY],
					[BID_COUNT],
					[OFFER_COUNT],
					[BUY_FOREIGN_QTTY],
					[BUY_FOREIGN_VALUE],
					[SELL_FOREIGN_QTTY],
					[SELL_FOREIGN_VALUE],
					[REMAIN_FOREIGN_QTTY],
					[PT_MATCH_PRICE],
					[PT_MATCH_QTTY],
					[PT_TOTAL_TRADED_QTTY],
					[PT_TOTAL_TRADED_VALUE],
					[TOTAL_LISTING_QTTY],
					[OPEN_PRICE],
					[CLOSE_PRICE],
					[AVERAGE_PRICE],
					[STATUS],
					[Sequence]
				FROM
					[dbo].[hastc_stocks]
				WHERE
					[ID] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="hastc_stocks_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the hastc_stocks table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Stockno" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@StockType" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Ceiling" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Floor" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SecurityName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PriorClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Last" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastVol" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Average" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Totalshares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3Bid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3BidVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best1OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best2OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3Offer" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Best3OfferVolume" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@NmTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrevPriorPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SellCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BuyCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@NmTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalBidQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalSellTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalOfferQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalBuyTradingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BidCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OfferCount" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BuyForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@BuyForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SellForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@SellForeignValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@RemainForeignQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtMatchPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtMatchQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtTotalTradedQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PtTotalTradedValue" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalListingQtty" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenPrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClosePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AveragePrice" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="varchar" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Sequence" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Stockno]
	, [StockSymbol]
	, [StockType]
	, [Ceiling]
	, [Floor]
	, [SecurityName]
	, [PriorClosePrice]
	, [Last]
	, [LastVol]
	, [LastVal]
	, [Highest]
	, [Average]
	, [Lowest]
	, [Totalshares]
	, [TotalValue]
	, [Best1Bid]
	, [Best1BidVolume]
	, [Best2Bid]
	, [Best2BidVolume]
	, [Best3Bid]
	, [Best3BidVolume]
	, [Best1Offer]
	, [Best1OfferVolume]
	, [Best2Offer]
	, [Best2OfferVolume]
	, [Best3Offer]
	, [Best3OfferVolume]
	, [NM_TOTAL_TRADED_QTTY]
	, [PREV_PRIOR_PRICE]
	, [SELL_COUNT]
	, [BUY_COUNT]
	, [NM_TOTAL_TRADED_VALUE]
	, [TOTAL_BID_QTTY]
	, [TOTAL_SELL_TRADING_QTTY]
	, [TOTAL_OFFER_QTTY]
	, [TOTAL_BUY_TRADING_QTTY]
	, [BID_COUNT]
	, [OFFER_COUNT]
	, [BUY_FOREIGN_QTTY]
	, [BUY_FOREIGN_VALUE]
	, [SELL_FOREIGN_QTTY]
	, [SELL_FOREIGN_VALUE]
	, [REMAIN_FOREIGN_QTTY]
	, [PT_MATCH_PRICE]
	, [PT_MATCH_QTTY]
	, [PT_TOTAL_TRADED_QTTY]
	, [PT_TOTAL_TRADED_VALUE]
	, [TOTAL_LISTING_QTTY]
	, [OPEN_PRICE]
	, [CLOSE_PRICE]
	, [AVERAGE_PRICE]
	, [STATUS]
	, [Sequence]
    FROM
	[dbo].[hastc_stocks]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([Stockno] = @Stockno OR @Stockno IS NULL)
	AND ([StockSymbol] = @StockSymbol OR @StockSymbol IS NULL)
	AND ([StockType] = @StockType OR @StockType IS NULL)
	AND ([Ceiling] = @Ceiling OR @Ceiling IS NULL)
	AND ([Floor] = @Floor OR @Floor IS NULL)
	AND ([SecurityName] = @SecurityName OR @SecurityName IS NULL)
	AND ([PriorClosePrice] = @PriorClosePrice OR @PriorClosePrice IS NULL)
	AND ([Last] = @Last OR @Last IS NULL)
	AND ([LastVol] = @LastVol OR @LastVol IS NULL)
	AND ([LastVal] = @LastVal OR @LastVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Average] = @Average OR @Average IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Totalshares] = @Totalshares OR @Totalshares IS NULL)
	AND ([TotalValue] = @TotalValue OR @TotalValue IS NULL)
	AND ([Best1Bid] = @Best1Bid OR @Best1Bid IS NULL)
	AND ([Best1BidVolume] = @Best1BidVolume OR @Best1BidVolume IS NULL)
	AND ([Best2Bid] = @Best2Bid OR @Best2Bid IS NULL)
	AND ([Best2BidVolume] = @Best2BidVolume OR @Best2BidVolume IS NULL)
	AND ([Best3Bid] = @Best3Bid OR @Best3Bid IS NULL)
	AND ([Best3BidVolume] = @Best3BidVolume OR @Best3BidVolume IS NULL)
	AND ([Best1Offer] = @Best1Offer OR @Best1Offer IS NULL)
	AND ([Best1OfferVolume] = @Best1OfferVolume OR @Best1OfferVolume IS NULL)
	AND ([Best2Offer] = @Best2Offer OR @Best2Offer IS NULL)
	AND ([Best2OfferVolume] = @Best2OfferVolume OR @Best2OfferVolume IS NULL)
	AND ([Best3Offer] = @Best3Offer OR @Best3Offer IS NULL)
	AND ([Best3OfferVolume] = @Best3OfferVolume OR @Best3OfferVolume IS NULL)
	AND ([NM_TOTAL_TRADED_QTTY] = @NmTotalTradedQtty OR @NmTotalTradedQtty IS NULL)
	AND ([PREV_PRIOR_PRICE] = @PrevPriorPrice OR @PrevPriorPrice IS NULL)
	AND ([SELL_COUNT] = @SellCount OR @SellCount IS NULL)
	AND ([BUY_COUNT] = @BuyCount OR @BuyCount IS NULL)
	AND ([NM_TOTAL_TRADED_VALUE] = @NmTotalTradedValue OR @NmTotalTradedValue IS NULL)
	AND ([TOTAL_BID_QTTY] = @TotalBidQtty OR @TotalBidQtty IS NULL)
	AND ([TOTAL_SELL_TRADING_QTTY] = @TotalSellTradingQtty OR @TotalSellTradingQtty IS NULL)
	AND ([TOTAL_OFFER_QTTY] = @TotalOfferQtty OR @TotalOfferQtty IS NULL)
	AND ([TOTAL_BUY_TRADING_QTTY] = @TotalBuyTradingQtty OR @TotalBuyTradingQtty IS NULL)
	AND ([BID_COUNT] = @BidCount OR @BidCount IS NULL)
	AND ([OFFER_COUNT] = @OfferCount OR @OfferCount IS NULL)
	AND ([BUY_FOREIGN_QTTY] = @BuyForeignQtty OR @BuyForeignQtty IS NULL)
	AND ([BUY_FOREIGN_VALUE] = @BuyForeignValue OR @BuyForeignValue IS NULL)
	AND ([SELL_FOREIGN_QTTY] = @SellForeignQtty OR @SellForeignQtty IS NULL)
	AND ([SELL_FOREIGN_VALUE] = @SellForeignValue OR @SellForeignValue IS NULL)
	AND ([REMAIN_FOREIGN_QTTY] = @RemainForeignQtty OR @RemainForeignQtty IS NULL)
	AND ([PT_MATCH_PRICE] = @PtMatchPrice OR @PtMatchPrice IS NULL)
	AND ([PT_MATCH_QTTY] = @PtMatchQtty OR @PtMatchQtty IS NULL)
	AND ([PT_TOTAL_TRADED_QTTY] = @PtTotalTradedQtty OR @PtTotalTradedQtty IS NULL)
	AND ([PT_TOTAL_TRADED_VALUE] = @PtTotalTradedValue OR @PtTotalTradedValue IS NULL)
	AND ([TOTAL_LISTING_QTTY] = @TotalListingQtty OR @TotalListingQtty IS NULL)
	AND ([OPEN_PRICE] = @OpenPrice OR @OpenPrice IS NULL)
	AND ([CLOSE_PRICE] = @ClosePrice OR @ClosePrice IS NULL)
	AND ([AVERAGE_PRICE] = @AveragePrice OR @AveragePrice IS NULL)
	AND ([STATUS] = @Status OR @Status IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Stockno]
	, [StockSymbol]
	, [StockType]
	, [Ceiling]
	, [Floor]
	, [SecurityName]
	, [PriorClosePrice]
	, [Last]
	, [LastVol]
	, [LastVal]
	, [Highest]
	, [Average]
	, [Lowest]
	, [Totalshares]
	, [TotalValue]
	, [Best1Bid]
	, [Best1BidVolume]
	, [Best2Bid]
	, [Best2BidVolume]
	, [Best3Bid]
	, [Best3BidVolume]
	, [Best1Offer]
	, [Best1OfferVolume]
	, [Best2Offer]
	, [Best2OfferVolume]
	, [Best3Offer]
	, [Best3OfferVolume]
	, [NM_TOTAL_TRADED_QTTY]
	, [PREV_PRIOR_PRICE]
	, [SELL_COUNT]
	, [BUY_COUNT]
	, [NM_TOTAL_TRADED_VALUE]
	, [TOTAL_BID_QTTY]
	, [TOTAL_SELL_TRADING_QTTY]
	, [TOTAL_OFFER_QTTY]
	, [TOTAL_BUY_TRADING_QTTY]
	, [BID_COUNT]
	, [OFFER_COUNT]
	, [BUY_FOREIGN_QTTY]
	, [BUY_FOREIGN_VALUE]
	, [SELL_FOREIGN_QTTY]
	, [SELL_FOREIGN_VALUE]
	, [REMAIN_FOREIGN_QTTY]
	, [PT_MATCH_PRICE]
	, [PT_MATCH_QTTY]
	, [PT_TOTAL_TRADED_QTTY]
	, [PT_TOTAL_TRADED_VALUE]
	, [TOTAL_LISTING_QTTY]
	, [OPEN_PRICE]
	, [CLOSE_PRICE]
	, [AVERAGE_PRICE]
	, [STATUS]
	, [Sequence]
    FROM
	[dbo].[hastc_stocks]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([Stockno] = @Stockno AND @Stockno is not null)
	OR ([StockSymbol] = @StockSymbol AND @StockSymbol is not null)
	OR ([StockType] = @StockType AND @StockType is not null)
	OR ([Ceiling] = @Ceiling AND @Ceiling is not null)
	OR ([Floor] = @Floor AND @Floor is not null)
	OR ([SecurityName] = @SecurityName AND @SecurityName is not null)
	OR ([PriorClosePrice] = @PriorClosePrice AND @PriorClosePrice is not null)
	OR ([Last] = @Last AND @Last is not null)
	OR ([LastVol] = @LastVol AND @LastVol is not null)
	OR ([LastVal] = @LastVal AND @LastVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Average] = @Average AND @Average is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Totalshares] = @Totalshares AND @Totalshares is not null)
	OR ([TotalValue] = @TotalValue AND @TotalValue is not null)
	OR ([Best1Bid] = @Best1Bid AND @Best1Bid is not null)
	OR ([Best1BidVolume] = @Best1BidVolume AND @Best1BidVolume is not null)
	OR ([Best2Bid] = @Best2Bid AND @Best2Bid is not null)
	OR ([Best2BidVolume] = @Best2BidVolume AND @Best2BidVolume is not null)
	OR ([Best3Bid] = @Best3Bid AND @Best3Bid is not null)
	OR ([Best3BidVolume] = @Best3BidVolume AND @Best3BidVolume is not null)
	OR ([Best1Offer] = @Best1Offer AND @Best1Offer is not null)
	OR ([Best1OfferVolume] = @Best1OfferVolume AND @Best1OfferVolume is not null)
	OR ([Best2Offer] = @Best2Offer AND @Best2Offer is not null)
	OR ([Best2OfferVolume] = @Best2OfferVolume AND @Best2OfferVolume is not null)
	OR ([Best3Offer] = @Best3Offer AND @Best3Offer is not null)
	OR ([Best3OfferVolume] = @Best3OfferVolume AND @Best3OfferVolume is not null)
	OR ([NM_TOTAL_TRADED_QTTY] = @NmTotalTradedQtty AND @NmTotalTradedQtty is not null)
	OR ([PREV_PRIOR_PRICE] = @PrevPriorPrice AND @PrevPriorPrice is not null)
	OR ([SELL_COUNT] = @SellCount AND @SellCount is not null)
	OR ([BUY_COUNT] = @BuyCount AND @BuyCount is not null)
	OR ([NM_TOTAL_TRADED_VALUE] = @NmTotalTradedValue AND @NmTotalTradedValue is not null)
	OR ([TOTAL_BID_QTTY] = @TotalBidQtty AND @TotalBidQtty is not null)
	OR ([TOTAL_SELL_TRADING_QTTY] = @TotalSellTradingQtty AND @TotalSellTradingQtty is not null)
	OR ([TOTAL_OFFER_QTTY] = @TotalOfferQtty AND @TotalOfferQtty is not null)
	OR ([TOTAL_BUY_TRADING_QTTY] = @TotalBuyTradingQtty AND @TotalBuyTradingQtty is not null)
	OR ([BID_COUNT] = @BidCount AND @BidCount is not null)
	OR ([OFFER_COUNT] = @OfferCount AND @OfferCount is not null)
	OR ([BUY_FOREIGN_QTTY] = @BuyForeignQtty AND @BuyForeignQtty is not null)
	OR ([BUY_FOREIGN_VALUE] = @BuyForeignValue AND @BuyForeignValue is not null)
	OR ([SELL_FOREIGN_QTTY] = @SellForeignQtty AND @SellForeignQtty is not null)
	OR ([SELL_FOREIGN_VALUE] = @SellForeignValue AND @SellForeignValue is not null)
	OR ([REMAIN_FOREIGN_QTTY] = @RemainForeignQtty AND @RemainForeignQtty is not null)
	OR ([PT_MATCH_PRICE] = @PtMatchPrice AND @PtMatchPrice is not null)
	OR ([PT_MATCH_QTTY] = @PtMatchQtty AND @PtMatchQtty is not null)
	OR ([PT_TOTAL_TRADED_QTTY] = @PtTotalTradedQtty AND @PtTotalTradedQtty is not null)
	OR ([PT_TOTAL_TRADED_VALUE] = @PtTotalTradedValue AND @PtTotalTradedValue is not null)
	OR ([TOTAL_LISTING_QTTY] = @TotalListingQtty AND @TotalListingQtty is not null)
	OR ([OPEN_PRICE] = @OpenPrice AND @OpenPrice is not null)
	OR ([CLOSE_PRICE] = @ClosePrice AND @ClosePrice is not null)
	OR ([AVERAGE_PRICE] = @AveragePrice AND @AveragePrice is not null)
	OR ([STATUS] = @Status AND @Status is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="hastc_stocks_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hastc_stocks table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[hastc_stocks] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Stockno], O.[StockSymbol], O.[StockType], O.[Ceiling], O.[Floor], O.[SecurityName], O.[PriorClosePrice], O.[Last], O.[LastVol], O.[LastVal], O.[Highest], O.[Average], O.[Lowest], O.[Totalshares], O.[TotalValue], O.[Best1Bid], O.[Best1BidVolume], O.[Best2Bid], O.[Best2BidVolume], O.[Best3Bid], O.[Best3BidVolume], O.[Best1Offer], O.[Best1OfferVolume], O.[Best2Offer], O.[Best2OfferVolume], O.[Best3Offer], O.[Best3OfferVolume], O.[NM_TOTAL_TRADED_QTTY], O.[PREV_PRIOR_PRICE], O.[SELL_COUNT], O.[BUY_COUNT], O.[NM_TOTAL_TRADED_VALUE], O.[TOTAL_BID_QTTY], O.[TOTAL_SELL_TRADING_QTTY], O.[TOTAL_OFFER_QTTY], O.[TOTAL_BUY_TRADING_QTTY], O.[BID_COUNT], O.[OFFER_COUNT], O.[BUY_FOREIGN_QTTY], O.[BUY_FOREIGN_VALUE], O.[SELL_FOREIGN_QTTY], O.[SELL_FOREIGN_VALUE], O.[REMAIN_FOREIGN_QTTY], O.[PT_MATCH_PRICE], O.[PT_MATCH_QTTY], O.[PT_TOTAL_TRADED_QTTY], O.[PT_TOTAL_TRADED_VALUE], O.[TOTAL_LISTING_QTTY], O.[OPEN_PRICE], O.[CLOSE_PRICE], O.[AVERAGE_PRICE], O.[STATUS], O.[Sequence]
				FROM
				    [dbo].[hastc_stocks] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[hastc_stocks] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CompanyInfoLanguage_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CompanyInfoLanguage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CompanyId],
					[LanguageId],
					[CompanyName],
					[Description],
					[Address],
					[BusinessArea],
					[Strategy],
					[MarketPosition],
					[ContactInformation],
					[Director]
				FROM
					[dbo].[CompanyInfoLanguage]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CompanyInfoLanguage_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CompanyInfoLanguage table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CompanyId] int, [LanguageId] nvarchar(10) COLLATE database_default  
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CompanyId], [LanguageId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CompanyId], [LanguageId]'
				SET @SQL = @SQL + ' FROM [dbo].[CompanyInfoLanguage]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CompanyId], O.[LanguageId], O.[CompanyName], O.[Description], O.[Address], O.[BusinessArea], O.[Strategy], O.[MarketPosition], O.[ContactInformation], O.[Director]
				FROM
				    [dbo].[CompanyInfoLanguage] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CompanyId] = PageIndex.[CompanyId]
					AND O.[LanguageId] = PageIndex.[LanguageId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CompanyInfoLanguage]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CompanyInfoLanguage_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CompanyInfoLanguage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Address" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@BusinessArea" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Strategy" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketPosition" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ContactInformation" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Director" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CompanyInfoLanguage]
					(
					[CompanyId]
					,[LanguageId]
					,[CompanyName]
					,[Description]
					,[Address]
					,[BusinessArea]
					,[Strategy]
					,[MarketPosition]
					,[ContactInformation]
					,[Director]
					)
				VALUES
					(
					@CompanyId
					,@LanguageId
					,@CompanyName
					,@Description
					,@Address
					,@BusinessArea
					,@Strategy
					,@MarketPosition
					,@ContactInformation
					,@Director
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CompanyInfoLanguage_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CompanyInfoLanguage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@OriginalLanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Address" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@BusinessArea" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Strategy" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketPosition" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ContactInformation" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Director" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CompanyInfoLanguage]
				SET
					[CompanyId] = @CompanyId
					,[LanguageId] = @LanguageId
					,[CompanyName] = @CompanyName
					,[Description] = @Description
					,[Address] = @Address
					,[BusinessArea] = @BusinessArea
					,[Strategy] = @Strategy
					,[MarketPosition] = @MarketPosition
					,[ContactInformation] = @ContactInformation
					,[Director] = @Director
				WHERE
[CompanyId] = @OriginalCompanyId 
AND [LanguageId] = @OriginalLanguageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CompanyInfoLanguage_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CompanyInfoLanguage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CompanyInfoLanguage] WITH (ROWLOCK) 
				WHERE
					[CompanyId] = @CompanyId
					AND [LanguageId] = @LanguageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CompanyInfoLanguage_GetByCompanyIdLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CompanyInfoLanguage table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CompanyId],
					[LanguageId],
					[CompanyName],
					[Description],
					[Address],
					[BusinessArea],
					[Strategy],
					[MarketPosition],
					[ContactInformation],
					[Director]
				FROM
					[dbo].[CompanyInfoLanguage]
				WHERE
					[CompanyId] = @CompanyId
					AND [LanguageId] = @LanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CompanyInfoLanguage_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CompanyInfoLanguage table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Address" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@BusinessArea" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Strategy" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MarketPosition" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ContactInformation" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Director" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CompanyId]
	, [LanguageId]
	, [CompanyName]
	, [Description]
	, [Address]
	, [BusinessArea]
	, [Strategy]
	, [MarketPosition]
	, [ContactInformation]
	, [Director]
    FROM
	[dbo].[CompanyInfoLanguage]
    WHERE 
	 ([CompanyId] = @CompanyId OR @CompanyId IS NULL)
	AND ([LanguageId] = @LanguageId OR @LanguageId IS NULL)
	AND ([CompanyName] = @CompanyName OR @CompanyName IS NULL)
	AND ([Address] = @Address OR @Address IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CompanyId]
	, [LanguageId]
	, [CompanyName]
	, [Description]
	, [Address]
	, [BusinessArea]
	, [Strategy]
	, [MarketPosition]
	, [ContactInformation]
	, [Director]
    FROM
	[dbo].[CompanyInfoLanguage]
    WHERE 
	 ([CompanyId] = @CompanyId AND @CompanyId is not null)
	OR ([LanguageId] = @LanguageId AND @LanguageId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([Address] = @Address AND @Address is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CompanyInfoLanguage_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CompanyInfoLanguage table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CompanyId] int, [LanguageId] nvarchar(10) COLLATE database_default  
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CompanyId], [LanguageId] )
				SELECT TOP {3} [CompanyId], [LanguageId]
				FROM [dbo].[CompanyInfoLanguage] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CompanyId], O.[LanguageId], O.[CompanyName], O.[Description], O.[Address], O.[BusinessArea], O.[Strategy], O.[MarketPosition], O.[ContactInformation], O.[Director]
				FROM
				    [dbo].[CompanyInfoLanguage] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CompanyId] = PageIndex.[CompanyId]
				    AND O.[LanguageId] = PageIndex.[LanguageId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CompanyInfoLanguage] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Indexs_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Indexs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[VNINDEX_ID],
					[TRADED_DATE],
					[OPEN],
					[CLOSE],
					[CHANGE],
					[UNCHANGE],
					[HIGH],
					[LOW],
					[UP],
					[DOWN],
					[AVERAGE],
					[VOL],
					[VAL],
					[ATTRIBUTE1],
					[TOTALTRADE],
					[ATTRIBUTE3],
					[Market_ID],
					[STATUS],
					[TRANS],
					[UPVOLUME],
					[DOWNVOLUME],
					[NOCHANGEVOLUME]
				FROM
					[dbo].[Indexs]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Indexs_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Indexs table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [VNINDEX_ID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([VNINDEX_ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [VNINDEX_ID]'
				SET @SQL = @SQL + ' FROM [dbo].[Indexs]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[VNINDEX_ID], O.[TRADED_DATE], O.[OPEN], O.[CLOSE], O.[CHANGE], O.[UNCHANGE], O.[HIGH], O.[LOW], O.[UP], O.[DOWN], O.[AVERAGE], O.[VOL], O.[VAL], O.[ATTRIBUTE1], O.[TOTALTRADE], O.[ATTRIBUTE3], O.[Market_ID], O.[STATUS], O.[TRANS], O.[UPVOLUME], O.[DOWNVOLUME], O.[NOCHANGEVOLUME]
				FROM
				    [dbo].[Indexs] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[VNINDEX_ID] = PageIndex.[VNINDEX_ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Indexs]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Indexs_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Indexs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@VnindexId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TradedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Open" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Close" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Change" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Unchange" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@High" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Low" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Up" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Down" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Average" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Attribute1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Totaltrade" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Attribute3" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketId" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Status" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Trans" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Upvolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Downvolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochangevolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Indexs]
					(
					[TRADED_DATE]
					,[OPEN]
					,[CLOSE]
					,[CHANGE]
					,[UNCHANGE]
					,[HIGH]
					,[LOW]
					,[UP]
					,[DOWN]
					,[AVERAGE]
					,[VOL]
					,[VAL]
					,[ATTRIBUTE1]
					,[TOTALTRADE]
					,[ATTRIBUTE3]
					,[Market_ID]
					,[STATUS]
					,[TRANS]
					,[UPVOLUME]
					,[DOWNVOLUME]
					,[NOCHANGEVOLUME]
					)
				VALUES
					(
					@TradedDate
					,@Open
					,@Close
					,@Change
					,@Unchange
					,@High
					,@Low
					,@Up
					,@Down
					,@Average
					,@Vol
					,@Val
					,@Attribute1
					,@Totaltrade
					,@Attribute3
					,@MarketId
					,@Status
					,@Trans
					,@Upvolume
					,@Downvolume
					,@Nochangevolume
					)
				
				-- Get the identity value
				SET @VnindexId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Indexs_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Indexs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@VnindexId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TradedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Open" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Close" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Change" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Unchange" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@High" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Low" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Up" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Down" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Average" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Attribute1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Totaltrade" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Attribute3" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@MarketId" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Status" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@Trans" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Upvolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Downvolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Nochangevolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Indexs]
				SET
					[TRADED_DATE] = @TradedDate
					,[OPEN] = @Open
					,[CLOSE] = @Close
					,[CHANGE] = @Change
					,[UNCHANGE] = @Unchange
					,[HIGH] = @High
					,[LOW] = @Low
					,[UP] = @Up
					,[DOWN] = @Down
					,[AVERAGE] = @Average
					,[VOL] = @Vol
					,[VAL] = @Val
					,[ATTRIBUTE1] = @Attribute1
					,[TOTALTRADE] = @Totaltrade
					,[ATTRIBUTE3] = @Attribute3
					,[Market_ID] = @MarketId
					,[STATUS] = @Status
					,[TRANS] = @Trans
					,[UPVOLUME] = @Upvolume
					,[DOWNVOLUME] = @Downvolume
					,[NOCHANGEVOLUME] = @Nochangevolume
				WHERE
[VNINDEX_ID] = @VnindexId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Indexs_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Indexs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@VnindexId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Indexs] WITH (ROWLOCK) 
				WHERE
					[VNINDEX_ID] = @VnindexId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Indexs_GetByVnindexId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Indexs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@VnindexId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[VNINDEX_ID],
					[TRADED_DATE],
					[OPEN],
					[CLOSE],
					[CHANGE],
					[UNCHANGE],
					[HIGH],
					[LOW],
					[UP],
					[DOWN],
					[AVERAGE],
					[VOL],
					[VAL],
					[ATTRIBUTE1],
					[TOTALTRADE],
					[ATTRIBUTE3],
					[Market_ID],
					[STATUS],
					[TRANS],
					[UPVOLUME],
					[DOWNVOLUME],
					[NOCHANGEVOLUME]
				FROM
					[dbo].[Indexs]
				WHERE
					[VNINDEX_ID] = @VnindexId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Indexs_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Indexs table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@VnindexId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Open" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Close" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Change" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Unchange" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@High" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Low" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Up" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Down" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Average" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Vol" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Val" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Attribute1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Totaltrade" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Attribute3" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@MarketId" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@Status" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@Trans" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Upvolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Downvolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Nochangevolume" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [VNINDEX_ID]
	, [TRADED_DATE]
	, [OPEN]
	, [CLOSE]
	, [CHANGE]
	, [UNCHANGE]
	, [HIGH]
	, [LOW]
	, [UP]
	, [DOWN]
	, [AVERAGE]
	, [VOL]
	, [VAL]
	, [ATTRIBUTE1]
	, [TOTALTRADE]
	, [ATTRIBUTE3]
	, [Market_ID]
	, [STATUS]
	, [TRANS]
	, [UPVOLUME]
	, [DOWNVOLUME]
	, [NOCHANGEVOLUME]
    FROM
	[dbo].[Indexs]
    WHERE 
	 ([VNINDEX_ID] = @VnindexId OR @VnindexId IS NULL)
	AND ([TRADED_DATE] = @TradedDate OR @TradedDate IS NULL)
	AND ([OPEN] = @Open OR @Open IS NULL)
	AND ([CLOSE] = @Close OR @Close IS NULL)
	AND ([CHANGE] = @Change OR @Change IS NULL)
	AND ([UNCHANGE] = @Unchange OR @Unchange IS NULL)
	AND ([HIGH] = @High OR @High IS NULL)
	AND ([LOW] = @Low OR @Low IS NULL)
	AND ([UP] = @Up OR @Up IS NULL)
	AND ([DOWN] = @Down OR @Down IS NULL)
	AND ([AVERAGE] = @Average OR @Average IS NULL)
	AND ([VOL] = @Vol OR @Vol IS NULL)
	AND ([VAL] = @Val OR @Val IS NULL)
	AND ([ATTRIBUTE1] = @Attribute1 OR @Attribute1 IS NULL)
	AND ([TOTALTRADE] = @Totaltrade OR @Totaltrade IS NULL)
	AND ([ATTRIBUTE3] = @Attribute3 OR @Attribute3 IS NULL)
	AND ([Market_ID] = @MarketId OR @MarketId IS NULL)
	AND ([STATUS] = @Status OR @Status IS NULL)
	AND ([TRANS] = @Trans OR @Trans IS NULL)
	AND ([UPVOLUME] = @Upvolume OR @Upvolume IS NULL)
	AND ([DOWNVOLUME] = @Downvolume OR @Downvolume IS NULL)
	AND ([NOCHANGEVOLUME] = @Nochangevolume OR @Nochangevolume IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [VNINDEX_ID]
	, [TRADED_DATE]
	, [OPEN]
	, [CLOSE]
	, [CHANGE]
	, [UNCHANGE]
	, [HIGH]
	, [LOW]
	, [UP]
	, [DOWN]
	, [AVERAGE]
	, [VOL]
	, [VAL]
	, [ATTRIBUTE1]
	, [TOTALTRADE]
	, [ATTRIBUTE3]
	, [Market_ID]
	, [STATUS]
	, [TRANS]
	, [UPVOLUME]
	, [DOWNVOLUME]
	, [NOCHANGEVOLUME]
    FROM
	[dbo].[Indexs]
    WHERE 
	 ([VNINDEX_ID] = @VnindexId AND @VnindexId is not null)
	OR ([TRADED_DATE] = @TradedDate AND @TradedDate is not null)
	OR ([OPEN] = @Open AND @Open is not null)
	OR ([CLOSE] = @Close AND @Close is not null)
	OR ([CHANGE] = @Change AND @Change is not null)
	OR ([UNCHANGE] = @Unchange AND @Unchange is not null)
	OR ([HIGH] = @High AND @High is not null)
	OR ([LOW] = @Low AND @Low is not null)
	OR ([UP] = @Up AND @Up is not null)
	OR ([DOWN] = @Down AND @Down is not null)
	OR ([AVERAGE] = @Average AND @Average is not null)
	OR ([VOL] = @Vol AND @Vol is not null)
	OR ([VAL] = @Val AND @Val is not null)
	OR ([ATTRIBUTE1] = @Attribute1 AND @Attribute1 is not null)
	OR ([TOTALTRADE] = @Totaltrade AND @Totaltrade is not null)
	OR ([ATTRIBUTE3] = @Attribute3 AND @Attribute3 is not null)
	OR ([Market_ID] = @MarketId AND @MarketId is not null)
	OR ([STATUS] = @Status AND @Status is not null)
	OR ([TRANS] = @Trans AND @Trans is not null)
	OR ([UPVOLUME] = @Upvolume AND @Upvolume is not null)
	OR ([DOWNVOLUME] = @Downvolume AND @Downvolume is not null)
	OR ([NOCHANGEVOLUME] = @Nochangevolume AND @Nochangevolume is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Indexs_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Indexs table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [VNINDEX_ID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [VNINDEX_ID] )
				SELECT TOP {3} [VNINDEX_ID]
				FROM [dbo].[Indexs] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[VNINDEX_ID], O.[TRADED_DATE], O.[OPEN], O.[CLOSE], O.[CHANGE], O.[UNCHANGE], O.[HIGH], O.[LOW], O.[UP], O.[DOWN], O.[AVERAGE], O.[VOL], O.[VAL], O.[ATTRIBUTE1], O.[TOTALTRADE], O.[ATTRIBUTE3], O.[Market_ID], O.[STATUS], O.[TRANS], O.[UPVOLUME], O.[DOWNVOLUME], O.[NOCHANGEVOLUME]
				FROM
				    [dbo].[Indexs] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[VNINDEX_ID] = PageIndex.[VNINDEX_ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Indexs] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hastc_transactions_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the hastc_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[StockSymbol],
					[Price],
					[Vol],
					[Val],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Time],
					[Side]
				FROM
					[dbo].[hastc_transactions]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hastc_transactions_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hastc_transactions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[hastc_transactions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockSymbol], O.[Price], O.[Vol], O.[Val], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Time], O.[Side]
				FROM
				    [dbo].[hastc_transactions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[hastc_transactions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="hastc_transactions_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the hastc_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[hastc_transactions]
					(
					[TradeDate]
					,[StockSymbol]
					,[Price]
					,[Vol]
					,[Val]
					,[AccumulatedVol]
					,[AccumulatedVal]
					,[Highest]
					,[Lowest]
					,[Time]
					,[Side]
					)
				VALUES
					(
					@TradeDate
					,@StockSymbol
					,@Price
					,@Vol
					,@Val
					,@AccumulatedVol
					,@AccumulatedVal
					,@Highest
					,@Lowest
					,@Time
					,@Side
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_transactions_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the hastc_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[hastc_transactions]
				SET
					[TradeDate] = @TradeDate
					,[StockSymbol] = @StockSymbol
					,[Price] = @Price
					,[Vol] = @Vol
					,[Val] = @Val
					,[AccumulatedVol] = @AccumulatedVol
					,[AccumulatedVal] = @AccumulatedVal
					,[Highest] = @Highest
					,[Lowest] = @Lowest
					,[Time] = @Time
					,[Side] = @Side
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_transactions_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the hastc_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[hastc_transactions] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hastc_transactions_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the hastc_transactions table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[StockSymbol],
					[Price],
					[Vol],
					[Val],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Time],
					[Side]
				FROM
					[dbo].[hastc_transactions]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="hastc_transactions_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the hastc_transactions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockSymbol]
	, [Price]
	, [Vol]
	, [Val]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Time]
	, [Side]
    FROM
	[dbo].[hastc_transactions]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([StockSymbol] = @StockSymbol OR @StockSymbol IS NULL)
	AND ([Price] = @Price OR @Price IS NULL)
	AND ([Vol] = @Vol OR @Vol IS NULL)
	AND ([Val] = @Val OR @Val IS NULL)
	AND ([AccumulatedVol] = @AccumulatedVol OR @AccumulatedVol IS NULL)
	AND ([AccumulatedVal] = @AccumulatedVal OR @AccumulatedVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([Side] = @Side OR @Side IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockSymbol]
	, [Price]
	, [Vol]
	, [Val]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Time]
	, [Side]
    FROM
	[dbo].[hastc_transactions]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([StockSymbol] = @StockSymbol AND @StockSymbol is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([Vol] = @Vol AND @Vol is not null)
	OR ([Val] = @Val AND @Val is not null)
	OR ([AccumulatedVol] = @AccumulatedVol AND @AccumulatedVol is not null)
	OR ([AccumulatedVal] = @AccumulatedVal AND @AccumulatedVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([Side] = @Side AND @Side is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="hastc_transactions_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hastc_transactions table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[hastc_transactions] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockSymbol], O.[Price], O.[Vol], O.[Val], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Time], O.[Side]
				FROM
				    [dbo].[hastc_transactions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[hastc_transactions] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="upcom_transactions_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the upcom_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[StockSymbol],
					[Price],
					[Vol],
					[Val],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Time],
					[Side]
				FROM
					[dbo].[upcom_transactions]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="upcom_transactions_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the upcom_transactions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[upcom_transactions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockSymbol], O.[Price], O.[Vol], O.[Val], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Time], O.[Side]
				FROM
				    [dbo].[upcom_transactions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[upcom_transactions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="upcom_transactions_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the upcom_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[upcom_transactions]
					(
					[TradeDate]
					,[StockSymbol]
					,[Price]
					,[Vol]
					,[Val]
					,[AccumulatedVol]
					,[AccumulatedVal]
					,[Highest]
					,[Lowest]
					,[Time]
					,[Side]
					)
				VALUES
					(
					@TradeDate
					,@StockSymbol
					,@Price
					,@Vol
					,@Val
					,@AccumulatedVol
					,@AccumulatedVal
					,@Highest
					,@Lowest
					,@Time
					,@Side
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_transactions_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the upcom_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[upcom_transactions]
				SET
					[TradeDate] = @TradeDate
					,[StockSymbol] = @StockSymbol
					,[Price] = @Price
					,[Vol] = @Vol
					,[Val] = @Val
					,[AccumulatedVol] = @AccumulatedVol
					,[AccumulatedVal] = @AccumulatedVal
					,[Highest] = @Highest
					,[Lowest] = @Lowest
					,[Time] = @Time
					,[Side] = @Side
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_transactions_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the upcom_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[upcom_transactions] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="upcom_transactions_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the upcom_transactions table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[StockSymbol],
					[Price],
					[Vol],
					[Val],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Time],
					[Side]
				FROM
					[dbo].[upcom_transactions]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="upcom_transactions_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the upcom_transactions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockSymbol]
	, [Price]
	, [Vol]
	, [Val]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Time]
	, [Side]
    FROM
	[dbo].[upcom_transactions]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([StockSymbol] = @StockSymbol OR @StockSymbol IS NULL)
	AND ([Price] = @Price OR @Price IS NULL)
	AND ([Vol] = @Vol OR @Vol IS NULL)
	AND ([Val] = @Val OR @Val IS NULL)
	AND ([AccumulatedVol] = @AccumulatedVol OR @AccumulatedVol IS NULL)
	AND ([AccumulatedVal] = @AccumulatedVal OR @AccumulatedVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([Side] = @Side OR @Side IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockSymbol]
	, [Price]
	, [Vol]
	, [Val]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Time]
	, [Side]
    FROM
	[dbo].[upcom_transactions]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([StockSymbol] = @StockSymbol AND @StockSymbol is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([Vol] = @Vol AND @Vol is not null)
	OR ([Val] = @Val AND @Val is not null)
	OR ([AccumulatedVol] = @AccumulatedVol AND @AccumulatedVol is not null)
	OR ([AccumulatedVal] = @AccumulatedVal AND @AccumulatedVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([Side] = @Side AND @Side is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="upcom_transactions_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the upcom_transactions table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[upcom_transactions] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockSymbol], O.[Price], O.[Vol], O.[Val], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Time], O.[Side]
				FROM
				    [dbo].[upcom_transactions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[upcom_transactions] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hose_transactions_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the hose_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[id],
					[TradeDate],
					[StockSymbol],
					[Price],
					[Vol],
					[Val],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Time],
					[Side]
				FROM
					[dbo].[hose_transactions]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="hose_transactions_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hose_transactions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([id])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [id]'
				SET @SQL = @SQL + ' FROM [dbo].[hose_transactions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockSymbol], O.[Price], O.[Vol], O.[Val], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Time], O.[Side]
				FROM
				    [dbo].[hose_transactions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[hose_transactions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="hose_transactions_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the hose_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[hose_transactions]
					(
					[TradeDate]
					,[StockSymbol]
					,[Price]
					,[Vol]
					,[Val]
					,[AccumulatedVol]
					,[AccumulatedVal]
					,[Highest]
					,[Lowest]
					,[Time]
					,[Side]
					)
				VALUES
					(
					@TradeDate
					,@StockSymbol
					,@Price
					,@Vol
					,@Val
					,@AccumulatedVol
					,@AccumulatedVal
					,@Highest
					,@Lowest
					,@Time
					,@Side
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hose_transactions_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the hose_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[hose_transactions]
				SET
					[TradeDate] = @TradeDate
					,[StockSymbol] = @StockSymbol
					,[Price] = @Price
					,[Vol] = @Vol
					,[Val] = @Val
					,[AccumulatedVol] = @AccumulatedVol
					,[AccumulatedVal] = @AccumulatedVal
					,[Highest] = @Highest
					,[Lowest] = @Lowest
					,[Time] = @Time
					,[Side] = @Side
				WHERE
[id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hose_transactions_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the hose_transactions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[hose_transactions] WITH (ROWLOCK) 
				WHERE
					[id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="hose_transactions_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the hose_transactions table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[id],
					[TradeDate],
					[StockSymbol],
					[Price],
					[Vol],
					[Val],
					[AccumulatedVol],
					[AccumulatedVal],
					[Highest],
					[Lowest],
					[Time],
					[Side]
				FROM
					[dbo].[hose_transactions]
				WHERE
					[id] = @Id
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="hose_transactions_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the hose_transactions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@StockSymbol" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Price" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Vol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Val" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVol" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccumulatedVal" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Highest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Lowest" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Time" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Side" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockSymbol]
	, [Price]
	, [Vol]
	, [Val]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Time]
	, [Side]
    FROM
	[dbo].[hose_transactions]
    WHERE 
	 ([id] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([StockSymbol] = @StockSymbol OR @StockSymbol IS NULL)
	AND ([Price] = @Price OR @Price IS NULL)
	AND ([Vol] = @Vol OR @Vol IS NULL)
	AND ([Val] = @Val OR @Val IS NULL)
	AND ([AccumulatedVol] = @AccumulatedVol OR @AccumulatedVol IS NULL)
	AND ([AccumulatedVal] = @AccumulatedVal OR @AccumulatedVal IS NULL)
	AND ([Highest] = @Highest OR @Highest IS NULL)
	AND ([Lowest] = @Lowest OR @Lowest IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
	AND ([Side] = @Side OR @Side IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [id]
	, [TradeDate]
	, [StockSymbol]
	, [Price]
	, [Vol]
	, [Val]
	, [AccumulatedVol]
	, [AccumulatedVal]
	, [Highest]
	, [Lowest]
	, [Time]
	, [Side]
    FROM
	[dbo].[hose_transactions]
    WHERE 
	 ([id] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([StockSymbol] = @StockSymbol AND @StockSymbol is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([Vol] = @Vol AND @Vol is not null)
	OR ([Val] = @Val AND @Val is not null)
	OR ([AccumulatedVol] = @AccumulatedVol AND @AccumulatedVol is not null)
	OR ([AccumulatedVal] = @AccumulatedVal AND @AccumulatedVal is not null)
	OR ([Highest] = @Highest AND @Highest is not null)
	OR ([Lowest] = @Lowest AND @Lowest is not null)
	OR ([Time] = @Time AND @Time is not null)
	OR ([Side] = @Side AND @Side is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="hose_transactions_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the hose_transactions table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [id] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [id] )
				SELECT TOP {3} [id]
				FROM [dbo].[hose_transactions] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[id], O.[TradeDate], O.[StockSymbol], O.[Price], O.[Vol], O.[Val], O.[AccumulatedVol], O.[AccumulatedVal], O.[Highest], O.[Lowest], O.[Time], O.[Side]
				FROM
				    [dbo].[hose_transactions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[id] = PageIndex.[id]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[hose_transactions] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>

  <procedure owner="dbo" name="Index_VN30_Get_List" >
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Index_VN30 table
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters/>
    <body>
      <![CDATA[
				
				SELECT
					[ID],
					[TradeDate],
					[Index],
					[TotalShares],
					[TotalValues],
					[Up],
					[Down],
					[NoChange],
					[Time]
				FROM
					[dbo].[Index_VN30]
					
				SELECT @@ROWCOUNT
			]]>
    </body>
  </procedure>


  <procedure owner="dbo" name="Index_VN30_GetPaged" >
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Index_VN30 table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters>
      <parameter name="@WhereClause" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
      <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
      <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
      <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" />
    </parameters>
    <body>
      <![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[Index_VN30]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Index], O.[TotalShares], O.[TotalValues], O.[Up], O.[Down], O.[NoChange], O.[Time]
				FROM
				    [dbo].[Index_VN30] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Index_VN30]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]>
    </body>
  </procedure>

  <procedure owner="dbo" name="Index_VN30_Insert" grant="">
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Index_VN30 table
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters>
      <parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
      <parameter name="@Index" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@TotalShares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@TotalValues" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@Up" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@Down" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@NoChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
    </parameters>
    <body>
      <![CDATA[
				
				INSERT INTO [dbo].[Index_VN30]
					(
					[TradeDate]
					,[Index]
					,[TotalShares]
					,[TotalValues]
					,[Up]
					,[Down]
					,[NoChange]
					,[Time]
					)
				VALUES
					(
					@TradeDate
					,@Index
					,@TotalShares
					,@TotalValues
					,@Up
					,@Down
					,@NoChange
					,@Time
					)
				
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]>
    </body>
  </procedure>
  <procedure owner="dbo" name="Index_VN30_Update" grant="">
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Index_VN30 table
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters>
      <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
      <parameter name="@Index" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@TotalShares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@TotalValues" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@Up" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@Down" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@NoChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
      <parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
    </parameters>
    <body>
      <![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Index_VN30]
				SET
					[TradeDate] = @TradeDate
					,[Index] = @Index
					,[TotalShares] = @TotalShares
					,[TotalValues] = @TotalValues
					,[Up] = @Up
					,[Down] = @Down
					,[NoChange] = @NoChange
					,[Time] = @Time
				WHERE
[ID] = @Id 
				
			]]>
    </body>
  </procedure>
  <procedure owner="dbo" name="Index_VN30_Delete" grant="">
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Index_VN30 table
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters>
      <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
    </parameters>
    <body>
      <![CDATA[
				DELETE FROM [dbo].[Index_VN30] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]>
    </body>
  </procedure>
  <procedure owner="dbo" name="Index_VN30_GetById" >
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Index_VN30 table through an index
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters>
      <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
    </parameters>
    <body>
      <![CDATA[
				SELECT
					[ID],
					[TradeDate],
					[Index],
					[TotalShares],
					[TotalValues],
					[Up],
					[Down],
					[NoChange],
					[Time]
				FROM
					[dbo].[Index_VN30]
				WHERE
					[ID] = @Id
				SELECT @@ROWCOUNT
					
			]]>
    </body>

  </procedure>
  <procedure owner="dbo" name="Index_VN30_Find" >
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Index_VN30 table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters>
      <parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
      <parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@TradeDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
      <parameter name="@Index" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@TotalShares" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@TotalValues" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@Up" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@Down" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@NoChange" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
      <parameter name="@Time" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
    </parameters>
    <body>
      <![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Index]
	, [TotalShares]
	, [TotalValues]
	, [Up]
	, [Down]
	, [NoChange]
	, [Time]
    FROM
	[dbo].[Index_VN30]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([TradeDate] = @TradeDate OR @TradeDate IS NULL)
	AND ([Index] = @Index OR @Index IS NULL)
	AND ([TotalShares] = @TotalShares OR @TotalShares IS NULL)
	AND ([TotalValues] = @TotalValues OR @TotalValues IS NULL)
	AND ([Up] = @Up OR @Up IS NULL)
	AND ([Down] = @Down OR @Down IS NULL)
	AND ([NoChange] = @NoChange OR @NoChange IS NULL)
	AND ([Time] = @Time OR @Time IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [TradeDate]
	, [Index]
	, [TotalShares]
	, [TotalValues]
	, [Up]
	, [Down]
	, [NoChange]
	, [Time]
    FROM
	[dbo].[Index_VN30]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([TradeDate] = @TradeDate AND @TradeDate is not null)
	OR ([Index] = @Index AND @Index is not null)
	OR ([TotalShares] = @TotalShares AND @TotalShares is not null)
	OR ([TotalValues] = @TotalValues AND @TotalValues is not null)
	OR ([Up] = @Up AND @Up is not null)
	OR ([Down] = @Down AND @Down is not null)
	OR ([NoChange] = @NoChange AND @NoChange is not null)
	OR ([Time] = @Time AND @Time is not null)
	SELECT @@ROWCOUNT			
  END
				]]>
    </body>
  </procedure>


  <procedure owner="dbo" name="Index_VN30_Find_Dynamic"  skip="true">
    <comment>
      <![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Index_VN30 table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]>
    </comment>
    <parameters/>
    <body>
      <![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] bigint 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[Index_VN30] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ID], O.[TradeDate], O.[Index], O.[TotalShares], O.[TotalValues], O.[Up], O.[Down], O.[NoChange], O.[Time]
				FROM
				    [dbo].[Index_VN30] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Index_VN30] {0};
				
				DROP TABLE #PageIndex
				END
			]]>
    </body>
  </procedure>


</procedures>
</root>
